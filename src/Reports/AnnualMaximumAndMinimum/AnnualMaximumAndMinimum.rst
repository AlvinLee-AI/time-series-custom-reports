<?xml version="1.0" encoding="utf-8" standalone="yes"?><root type="PerpetuumSoft.Reporting.DOM.Document" id="1" version="2" Name="AnnualMaximumAndMinimum" IsTemplate="true" Title="Annual Maximum and Minimum" ImportsString="AnnualMaximumAndMinimumNamespace&#xD;&#xA;ReportPluginFramework.Properties&#xD;&#xA;ReportPluginFramework&#xD;&#xA;ReportPluginFramework.ReportData&#xD;&#xA;System.Linq&#xD;&#xA;System.Collections.Generic&#xD;&#xA;System.Data&#xD;&#xA;Server.Services.PublishService.ServiceModel.RequestDtos&#xD;&#xA;Server.Services.PublishService.ServiceModel.ResponseDtos&#xD;&#xA;Server.Services.PublishService.ServiceModel.Dtos&#xD;&#xA;" DocumentGuid="444f930e-5149-4032-9bf0-5f2817fe5ffb" MetricUnit="Pixel" DoublePass="true" CommonScript="// Common functions, variables and defaults&#xD;&#xA;//&#xD;&#xA;&#xD;&#xA;public Common CommonLibrary = null;&#xD;&#xA;public string ReportTitle = &quot;&quot;;&#xD;&#xA;string IntervalDateFormat = &quot;yyyy-MM-dd HH:mm:sszzz&quot;;&#xD;&#xA;&#xD;&#xA;string GroupBy = &quot;Year&quot;;&#xD;&#xA;&#xD;&#xA;string LocationType = &quot;&quot;;&#xD;&#xA;string Parameter1 = &quot;&quot;;&#xD;&#xA;string Label1 = &quot;&quot;;&#xD;&#xA;string UnitSymbol1 = &quot;&quot;;&#xD;&#xA;&#xD;&#xA;string Parameter2 = &quot;&quot;;&#xD;&#xA;string Label2 = &quot;&quot;;&#xD;&#xA;string UnitSymbol2 = &quot;&quot;;&#xD;&#xA;&#xD;&#xA;ServiceStack.Logging.ILog Log = ServiceStack.Logging.LogManager.GetLogger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);&#xD;&#xA;&#xD;&#xA;public bool ReportOutputIsPdf()&#xD;&#xA;{&#xD;&#xA;  string outputFormat = (string) GetData(&quot;ReportTables.ReportData.OutputFormat&quot;);&#xD;&#xA;  bool flag = outputFormat.ToLower() == &quot;pdf&quot;;&#xD;&#xA;&#xD;&#xA;  return flag;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;public DateTimeOffsetInterval GetTimeSeriesCorrectedTimeRange(TimeSeriesDescription tsDesc)&#xD;&#xA;{&#xD;&#xA;  DateTimeOffset? startTime = tsDesc.CorrectedStartTime;&#xD;&#xA;  DateTimeOffset? endTime = tsDesc.CorrectedEndTime;&#xD;&#xA;  &#xD;&#xA;  if (startTime.HasValue &amp;&amp; endTime.HasValue) return new DateTimeOffsetInterval(startTime, endTime);&#xD;&#xA;  &#xD;&#xA;  return CommonLibrary.GetTimeSeriesTimeRange(tsDesc.UniqueId);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;DateTimeOffsetInterval GetReportTimeRangeInterval(TimeSeriesDescription tsDesc, DateTimeOffsetInterval periodSelected, string GroupBy)&#xD;&#xA;{&#xD;&#xA;  GroupByHandler groupByHandler = new GroupByHandler(CommonLibrary);&#xD;&#xA;&#xD;&#xA;  TimeSpan tsOffset = TimeSpan.FromHours(tsDesc.UtcOffset);&#xD;&#xA;  DateTimeOffset? periodStart = null;&#xD;&#xA;  if (periodSelected.Start.HasValue) periodStart = periodSelected.Start.Value.Subtract(tsOffset).ToOffset(tsOffset);&#xD;&#xA;  DateTimeOffset? periodEnd = null;&#xD;&#xA;  if (periodSelected.End.HasValue) periodEnd = periodSelected.End.Value.Subtract(tsOffset).ToOffset(tsOffset);&#xD;&#xA;      &#xD;&#xA;  DateTimeOffsetInterval periodSelectedForTimeSeries = new DateTimeOffsetInterval(periodStart, periodEnd);&#xD;&#xA;  DateTimeOffsetInterval timeSeriesTimeRange = GetTimeSeriesCorrectedTimeRange(tsDesc);&#xD;&#xA;  DateTimeOffsetInterval timeRangeToAdjust = groupByHandler.GetIntervalOfOverlap(periodSelectedForTimeSeries, timeSeriesTimeRange, tsOffset);&#xD;&#xA;  DateTimeOffsetInterval reportTimeRange = groupByHandler.AdjustIntervalToGroupBy(timeRangeToAdjust, GroupBy);&#xD;&#xA;      &#xD;&#xA;  Log.DebugFormat(&quot;Found Report Time Range: TimeSeries {0}, TimeSeriesTimeRange = {1}, Period Selected for TimeRange {2}&quot;,&#xD;&#xA;    tsDesc.Identifier, &#xD;&#xA;    CommonLibrary.TimeIntervalAsString(timeSeriesTimeRange, IntervalDateFormat), &#xD;&#xA;    CommonLibrary.TimeIntervalAsString(reportTimeRange, IntervalDateFormat));&#xD;&#xA;  &#xD;&#xA;  return reportTimeRange;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;public void AddExtremaValues(DataSet dataSet, DateTimeOffsetInterval periodSelected,&#xD;&#xA;  TimeSeriesDescription tsDesc, string locName, int num, string GroupBy, string dateFormat)&#xD;&#xA;{ &#xD;&#xA;  if (tsDesc == null)&#xD;&#xA;    return;&#xD;&#xA;  &#xD;&#xA;  DateTimeOffsetInterval reportTimeRange = GetReportTimeRangeInterval(tsDesc, periodSelected, GroupBy);&#xD;&#xA;      &#xD;&#xA;  if (!reportTimeRange.Start.HasValue || !reportTimeRange.End.HasValue)&#xD;&#xA;    return;&#xD;&#xA;    &#xD;&#xA;  ReportPluginFramework.ReportData.TimeSeriesDescription.InterpolationType interpType = &#xD;&#xA;    CommonLibrary.GetTimeSeriesInterpolationType(tsDesc.UniqueId);&#xD;&#xA;  &#xD;&#xA;  Log.DebugFormat(&quot;TimeSeries {0}, InterpolationType {1} - {2}&quot;, tsDesc.Identifier,&#xD;&#xA;    (int) interpType, interpType.ToString());&#xD;&#xA;  &#xD;&#xA;  DateTimeOffset dt = reportTimeRange.Start.Value;&#xD;&#xA;  while (dt &lt; reportTimeRange.End.Value)&#xD;&#xA;  {&#xD;&#xA;    DateTimeOffset startTime = dt;&#xD;&#xA;    DateTimeOffset endTime = dt.AddYears(1);&#xD;&#xA;    &#xD;&#xA;    if ((interpType == ReportPluginFramework.ReportData.TimeSeriesDescription.InterpolationType.PrecedingConstant) ||&#xD;&#xA;      (interpType == ReportPluginFramework.ReportData.TimeSeriesDescription.InterpolationType.PrecedingTotals))&#xD;&#xA;      startTime = startTime.AddTicks(1);&#xD;&#xA;    else&#xD;&#xA;      endTime = endTime.AddTicks(-1);&#xD;&#xA;    &#xD;&#xA;    List&lt;TimeSeriesPoint&gt; points = CommonLibrary.GetTimeSeriesCorrectedDataReponse(&#xD;&#xA;      tsDesc.UniqueId, &quot;PointsOnly&quot;, startTime, endTime).Points;&#xD;&#xA;    &#xD;&#xA;    if (points.Count &gt; 0)&#xD;&#xA;      Log.DebugFormat(&quot;Timerange {0} - {1}, first point Timestamp={2}, last point Timestamp = {3}&quot;,&#xD;&#xA;        startTime.ToString(IntervalDateFormat), endTime.ToString(IntervalDateFormat),&#xD;&#xA;        points[0].Timestamp.DateTimeOffset.ToString(IntervalDateFormat), &#xD;&#xA;        points[points.Count - 1].Timestamp.DateTimeOffset.ToString(IntervalDateFormat));&#xD;&#xA;    else&#xD;&#xA;      Log.DebugFormat(&quot;No points for timerange {0} - {1}&quot;, &#xD;&#xA;        startTime.ToString(IntervalDateFormat), endTime.ToString(IntervalDateFormat));&#xD;&#xA;    &#xD;&#xA;    List&lt;TimeSeriesPoint&gt; extremaPoints = FindMaxAndMinPoints(points);&#xD;&#xA;    &#xD;&#xA;    AddGroupByRow(dataSet.Tables[&quot;GroupBy&quot;], dt.Year);  &#xD;&#xA;    AddRowValues(dataSet.Tables[&quot;ExtremaTable&quot;], dt.Year, locName, num, tsDesc.Unit, extremaPoints[0], extremaPoints[1], dateFormat);&#xD;&#xA;          &#xD;&#xA;    dt = dt.AddYears(1);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;public void AddGroupByRow(DataTable groupBy, int year)&#xD;&#xA;{&#xD;&#xA;  foreach (DataRow r in groupBy.Rows)&#xD;&#xA;  {&#xD;&#xA;    if ((int) r[&quot;Group&quot;] == year) return;&#xD;&#xA;  }&#xD;&#xA;  &#xD;&#xA;  DataRow row = groupBy.NewRow();&#xD;&#xA;  row[&quot;Group&quot;] = year;&#xD;&#xA;&#xD;&#xA;  for (int i = 0; i &lt; groupBy.Rows.Count; i++)&#xD;&#xA;  {&#xD;&#xA;    DataRow r = groupBy.Rows[i];&#xD;&#xA;    if ((int) r[&quot;Group&quot;] &gt; year)&#xD;&#xA;    {&#xD;&#xA;      groupBy.Rows.InsertAt(row, i);&#xD;&#xA;      return;&#xD;&#xA;    }&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  groupBy.Rows.Add(row);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;List&lt;TimeSeriesPoint&gt; FindMaxAndMinPoints(List&lt;TimeSeriesPoint&gt; points)&#xD;&#xA;{&#xD;&#xA;  TimeSeriesPoint maxPoint = null;&#xD;&#xA;  TimeSeriesPoint minPoint = null;&#xD;&#xA;  &#xD;&#xA;  foreach (TimeSeriesPoint point in points)&#xD;&#xA;  {&#xD;&#xA;    if (point.Value.Numeric.HasValue &amp;&amp; ((maxPoint == null) || maxPoint.Value.Numeric.Value &lt; point.Value.Numeric.Value))&#xD;&#xA;    {&#xD;&#xA;      maxPoint = point;&#xD;&#xA;    }&#xD;&#xA;    if (point.Value.Numeric.HasValue &amp;&amp; ((minPoint == null) || minPoint.Value.Numeric.Value &gt; point.Value.Numeric.Value))&#xD;&#xA;    {&#xD;&#xA;      minPoint = point;&#xD;&#xA;    }&#xD;&#xA;  }&#xD;&#xA;  List&lt;TimeSeriesPoint&gt; ret = new List&lt;TimeSeriesPoint&gt;();&#xD;&#xA;  ret.Add(maxPoint);&#xD;&#xA;  ret.Add(minPoint);&#xD;&#xA;  &#xD;&#xA;  return ret;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;public void AddRowValues(DataTable table, int year, string locName, int num, string unit, TimeSeriesPoint maxPoint, TimeSeriesPoint minPoint, string dateFormat)&#xD;&#xA;{&#xD;&#xA;  string unitSymbol = CommonLibrary.GetUnitSymbol(unit);&#xD;&#xA;  &#xD;&#xA;  if ((num == 1) &amp;&amp; (UnitSymbol1 == unitSymbol)) unitSymbol = &quot;&quot;;&#xD;&#xA;  else if ((num == 2) &amp;&amp; (UnitSymbol2 == unitSymbol)) unitSymbol = &quot;&quot;;&#xD;&#xA;  &#xD;&#xA;  string unitSymbolString = &quot;&quot;;&#xD;&#xA;  if (!string.IsNullOrEmpty(unitSymbol)) unitSymbolString = &quot; &quot; + unitSymbol;&#xD;&#xA;  &#xD;&#xA;  string maxValue = (maxPoint != null) ? maxPoint.Value.Display + unitSymbolString : &quot;&quot;;&#xD;&#xA;  string maxDate = (maxPoint != null) ? maxPoint.Timestamp.DateTimeOffset.ToString(dateFormat) : &quot;&quot;;&#xD;&#xA;  string minValue = (minPoint != null) ? minPoint.Value.Display + unitSymbolString : &quot;&quot;;&#xD;&#xA;  string minDate = (minPoint != null) ? minPoint.Timestamp.DateTimeOffset.ToString(dateFormat) : &quot;&quot;;&#xD;&#xA;   &#xD;&#xA;  foreach (DataRow r in table.Rows)&#xD;&#xA;  {&#xD;&#xA;    if (((int) r[&quot;Group&quot;] == year) &amp;&amp; (string) r[&quot;LocationName&quot;] == locName)&#xD;&#xA;    {&#xD;&#xA;      r[&quot;MaxValue&quot; + num.ToString()] = maxValue;&#xD;&#xA;      r[&quot;MaxDate&quot; + num.ToString()] = maxDate;&#xD;&#xA;      r[&quot;MinValue&quot; + num.ToString()] = minValue;&#xD;&#xA;      r[&quot;MinDate&quot; + num.ToString()] = minDate;&#xD;&#xA;      return;&#xD;&#xA;    }&#xD;&#xA;  }&#xD;&#xA;  &#xD;&#xA;  DataRow row = table.NewRow();&#xD;&#xA;  &#xD;&#xA;  row[&quot;Group&quot;] = year;&#xD;&#xA;  row[&quot;LocationName&quot;] = locName;&#xD;&#xA;  &#xD;&#xA;  row[&quot;MaxValue&quot; + num.ToString()] = maxValue;&#xD;&#xA;  row[&quot;MaxDate&quot; + num.ToString()] = maxDate;&#xD;&#xA;  row[&quot;MinValue&quot; + num.ToString()] = minValue;&#xD;&#xA;  row[&quot;MinDate&quot; + num.ToString()] = minDate;&#xD;&#xA;    &#xD;&#xA;  for (int i = 0; i &lt; table.Rows.Count; i++)&#xD;&#xA;  {&#xD;&#xA;    DataRow r = table.Rows[i];&#xD;&#xA;    if (((string) r[&quot;LocationName&quot;] == locName) &amp;&amp; ((int) r[&quot;Group&quot;] &gt; year))&#xD;&#xA;    {&#xD;&#xA;      table.Rows.InsertAt(row, i);&#xD;&#xA;      return;&#xD;&#xA;    }&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  table.Rows.Add(row);&#xD;&#xA;}&#xD;&#xA;" ScriptLanguage="CSharp" GridStep="18.75" GenerateScript="// Document GenerateScript&#xD;&#xA;if (Engine.IsSecondPass) return;&#xD;&#xA;&#xD;&#xA;ServiceStack.Logging.ILog Log = ServiceStack.Logging.LogManager.GetLogger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);&#xD;&#xA;&#xD;&#xA;Log.Debug(&quot;Begin Document GenerateScript !!!!!!!!!!!!!!**********************************************************&quot;);&#xD;&#xA;try&#xD;&#xA;{&#xD;&#xA;  System.Data.DataSet dataSet = (System.Data.DataSet) Engine.Objects[&quot;ReportTables&quot;];&#xD;&#xA;  RunFileReportRequest runReportRequest = (RunFileReportRequest) dataSet.Tables[&quot;RunReportRequest&quot;].Rows[0][&quot;RunReportRequest&quot;];&#xD;&#xA;  IPublishGateway publish = runReportRequest.Publish;&#xD;&#xA;  CommonLibrary = (Common) dataSet.Tables[&quot;RunReportRequest&quot;].Rows[0][&quot;CommonLibrary&quot;];&#xD;&#xA;  ReportTitle = (string) dataSet.Tables[&quot;ReportSettings&quot;].Rows[0][&quot;ReportTitle&quot;];&#xD;&#xA;  &#xD;&#xA;  string dllName = (string) dataSet.Tables[&quot;RunReportRequest&quot;].Rows[0][&quot;DllName&quot;];&#xD;&#xA;  Log.DebugFormat(&quot;{0} - Document GenerateScript&quot;, dllName);&#xD;&#xA;  &#xD;&#xA;  ///////////////////////////////////////////////////////////////&#xD;&#xA;  &#xD;&#xA;  string dateFormat = CommonLibrary.GetParameterString(&quot;DateFormat&quot;, &quot;yyyy-MM-dd HH:mm&quot;);&#xD;&#xA;  LocationType = CommonLibrary.GetParameterString(&quot;LocationType&quot;, &quot;&quot;);&#xD;&#xA;  Parameter1 = CommonLibrary.GetParameterString(&quot;DatasetParameter1&quot;, &quot;&quot;);&#xD;&#xA;  Parameter2 = CommonLibrary.GetParameterString(&quot;DatasetParameter2&quot;, &quot;&quot;);&#xD;&#xA;  Label1 = CommonLibrary.GetParameterString(&quot;DatasetLabel1&quot;, &quot;&quot;);&#xD;&#xA;  Label2 = CommonLibrary.GetParameterString(&quot;DatasetLabel2&quot;, &quot;&quot;);&#xD;&#xA;  &#xD;&#xA;  GroupBy = (CommonLibrary.PeriodSelectedIsWaterYear()) ? &quot;WaterYear&quot; : &quot;Year&quot;;&#xD;&#xA;  &#xD;&#xA;  DataTable settingsTable = dataSet.Tables[&quot;ReportSettings&quot;];&#xD;&#xA;  if (!settingsTable.Columns.Contains(&quot;GroupBy&quot;))&#xD;&#xA;  {&#xD;&#xA;    settingsTable.Columns.Add(&quot;GroupBy&quot;, typeof(string));&#xD;&#xA;    settingsTable.Rows[0][&quot;GroupBy&quot;] = GroupBy;&#xD;&#xA;  }&#xD;&#xA;  &#xD;&#xA;  DateTimeOffsetInterval periodSelected = (DateTimeOffsetInterval) dataSet.Tables[&quot;ReportData&quot;].Rows[0][&quot;PeriodSelectedAdjustedForReport&quot;];&#xD;&#xA; &#xD;&#xA;  if (!dataSet.Tables.Contains(&quot;GroupBy&quot;))&#xD;&#xA;  {&#xD;&#xA;    DataTable groupBy = dataSet.Tables.Add(&quot;GroupBy&quot;);&#xD;&#xA;    groupBy.Columns.Add(&quot;Group&quot;, typeof(int));&#xD;&#xA;&#xD;&#xA;    DataTable table = dataSet.Tables.Add(&quot;ExtremaTable&quot;);&#xD;&#xA;    table.Columns.Add(&quot;Group&quot;, typeof(int));&#xD;&#xA;    &#xD;&#xA;    table.Columns.Add(&quot;LocationName&quot;, typeof(string));&#xD;&#xA;    table.Columns.Add(&quot;MaxValue1&quot;, typeof(string));&#xD;&#xA;    table.Columns.Add(&quot;MaxDate1&quot;, typeof(string));&#xD;&#xA;    table.Columns.Add(&quot;MinValue1&quot;, typeof(string));&#xD;&#xA;    table.Columns.Add(&quot;MinDate1&quot;, typeof(string));&#xD;&#xA;    table.Columns.Add(&quot;MaxValue2&quot;, typeof(string));&#xD;&#xA;    table.Columns.Add(&quot;MaxDate2&quot;, typeof(string));&#xD;&#xA;    table.Columns.Add(&quot;MinValue2&quot;, typeof(string));&#xD;&#xA;    table.Columns.Add(&quot;MinDate2&quot;, typeof(string));&#xD;&#xA;    &#xD;&#xA;    dataSet.Relations.Add(&quot;GroupByExtremaTable&quot;, groupBy.Columns[&quot;Group&quot;], table.Columns[&quot;Group&quot;]);&#xD;&#xA;  }&#xD;&#xA;  else&#xD;&#xA;  {&#xD;&#xA;    dataSet.Tables[&quot;ExtremaTable&quot;].Rows.Clear();&#xD;&#xA;    dataSet.Tables[&quot;GroupBy&quot;].Rows.Clear();&#xD;&#xA;  }&#xD;&#xA;    &#xD;&#xA;  List&lt;LocationDescription&gt; locationDescriptions = CommonLibrary.GetLocationDescriptions(&quot;&quot;, &quot;&quot;, &quot;&quot;, new List&lt;string&gt;());&#xD;&#xA;  locationDescriptions.Sort((x, y) =&gt; x.Name.CompareTo(y.Name));&#xD;&#xA;  &#xD;&#xA;  GroupByHandler groupByHandler = new GroupByHandler(CommonLibrary);&#xD;&#xA;  foreach (LocationDescription loc in locationDescriptions)&#xD;&#xA;  {&#xD;&#xA;    LocationDataServiceResponse locData = CommonLibrary.GetLocationData(loc.Identifier);&#xD;&#xA;    if (!string.IsNullOrEmpty(LocationType) &amp;&amp; (LocationType != locData.LocationType)) continue;&#xD;&#xA;    &#xD;&#xA;    string locName = loc.Name;&#xD;&#xA;    string locIdent = loc.Identifier;&#xD;&#xA;    &#xD;&#xA;    TimeSeriesDescription timeSeries1 = CommonLibrary.GetTimeSeriesDescription(locIdent, Parameter1, Label1);&#xD;&#xA;    TimeSeriesDescription timeSeries2 = null;&#xD;&#xA;    &#xD;&#xA;    if (!string.IsNullOrEmpty(Parameter2) &amp;&amp; !string.IsNullOrEmpty(Label2))&#xD;&#xA;      timeSeries2 = CommonLibrary.GetTimeSeriesDescription(locIdent, Parameter2, Label2);&#xD;&#xA;    &#xD;&#xA;    if ((timeSeries1 != null) &amp;&amp; string.IsNullOrEmpty(UnitSymbol1)) UnitSymbol1 = CommonLibrary.GetUnitSymbol(timeSeries1.Unit);&#xD;&#xA;    if ((timeSeries2 != null) &amp;&amp; string.IsNullOrEmpty(UnitSymbol2)) UnitSymbol2 = CommonLibrary.GetUnitSymbol(timeSeries2.Unit);&#xD;&#xA;    &#xD;&#xA;    AddExtremaValues(dataSet, periodSelected, timeSeries1, locName, 1, GroupBy, dateFormat);&#xD;&#xA;    AddExtremaValues(dataSet, periodSelected, timeSeries2, locName, 2, GroupBy, dateFormat);&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  Log.Debug(&quot;End Document GenerateScript !!!!!!!!!!!!!!**********************************************************&quot;);&#xD;&#xA;}&#xD;&#xA;catch (Exception exp)&#xD;&#xA;{&#xD;&#xA;  System.Data.DataSet dataSet = (System.Data.DataSet) Engine.Objects[&quot;ReportTables&quot;];&#xD;&#xA;  string dllName = (string) dataSet.Tables[&quot;RunReportRequest&quot;].Rows[0][&quot;DllName&quot;];&#xD;&#xA;  Log.Error(&quot;Document GenerateScript - &quot; + dllName, exp);&#xD;&#xA;  Log.Info(GetData(&quot;ReportTables.RunReportRequest.ReportInputInformation&quot;));&#xD;&#xA;}&#xD;&#xA;"><Parameters type="PerpetuumSoft.Reporting.DOM.ParameterCollection" id="2" /><PageContent type="PerpetuumSoft.Reporting.DOM.Wrappers.ContentParametersDictionary" id="3" /><Pages type="PerpetuumSoft.Reporting.DOM.PageCollection" id="4"><Item type="PerpetuumSoft.Reporting.DOM.Page" id="5" Margins="75; 75; 150; 150" Size="3300;2550" StyleName="Normal" Name="page1" Location="0;0" PaperKind="Letter" Orientation="Landscape"><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="6" /><Controls type="PerpetuumSoft.Reporting.DOM.ReportControlCollection" id="7"><Item type="PerpetuumSoft.Reporting.DOM.PageHeader" id="8" StyleName="PageHeader" Location="0;75" Name="pageHeader" Size="3300;543.75"><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="9"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="10" Expression="ReportOutputIsPdf()" PropertyName="Visible" /></DataBindings><Controls type="PerpetuumSoft.Reporting.DOM.ReportControlCollection" id="11"><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="12" Location="0;431.25" Size="3300;56.25" Name="textBoxGrayBackground" ExportAsPictureInXaml="false" TextAlign="TopLeft"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="13" Color="230, 230, 230" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="14" All="1 Solid 204, 204, 204" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="15" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="16" Location="112.5;0" Size="3037.5;112.5" Name="textBoxPageHeader1" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="17" Color="33, 64, 154" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="18"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="19" Expression="GetData(&quot;ReportTables.ReportData.PageHeader1&quot;)" PropertyName="Value" /></DataBindings><RawValue type="System.String" id="20" value="Aquatic Informatics Data Management Software" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="21" Size="12" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="22" Location="112.5;75" Size="3037.5;75" Name="textBoxPageHeader2" StyleName="PageHeader" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="23" Color="0, 131, 215" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="24"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="25" Expression="GetData(&quot;ReportTables.ReportData.PageHeader2&quot;)" PropertyName="Value" /></DataBindings><RawValue type="System.String" id="26" value="Faster Analysis. Better Decisions." /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="27" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Picture" id="28" Location="150;31.25" Size="643.75;187.5" Name="logo" StyleName="PageHeader" GenerateScript="var encodedImage = GetData(&quot;ReportTables.OrganizationIcon.EncodedImage&quot;) as string;&#xD;&#xA;var bytes = Convert.FromBase64String(encodedImage);&#xD;&#xA;&#xD;&#xA;using (var memoryStream = new System.IO.MemoryStream(bytes))&#xD;&#xA;{&#xD;&#xA;  logo.Image = new System.Drawing.Bitmap(&#xD;&#xA;    System.Drawing.Image.FromStream(memoryStream));&#xD;&#xA;}" ExportAsPictureInXaml="false"><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="29"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="30" Expression="GetData(&quot;ReportTables.OrganizationIcon.SupportUrl&quot;)" PropertyName="Hyperlink" /></DataBindings></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="31" Location="0;281.25" Size="3300;118.11023712158203" Name="textBoxPageHeaderLine" ExportAsPictureInXaml="false" TextAlign="MiddleLeft"><Border type="PerpetuumSoft.Framework.Drawing.Border" id="32" TopLine="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="33" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="34" Location="150;300" Size="1500;75" Name="reportTitle" StyleName="PageHeader" GenerateScript="reportTitle.Document.Title = ReportTitle;" ExportAsPictureInXaml="false" TextAlign="MiddleLeft"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="35" Color="33, 64, 154" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="36"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="37" Expression="ReportTitle" PropertyName="Value" /></DataBindings><RawValue type="System.String" id="38" value="Wind Rose" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="39" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="40" Location="150;356.25" Size="1500;56.25" Name="textBoxSubTitle" ExportAsPictureInXaml="false" TextAlign="MiddleLeft"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="41" Color="51, 51, 51" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="42"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="43" Expression="GetData(&quot;ReportTables.ReportData.ReportSubTitle&quot;)" PropertyName="Value" /></DataBindings><RawValue type="System.String" id="44" value="Title" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="45" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="46" Location="2418.75;300" Size="731.25;75" Name="textBoxPageNumber" StyleName="PageNumber" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="47" Color="51, 51, 51" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="48"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="49" Expression="Now.ToString(&quot;MMM d, yyyy&quot;) + &quot; | &quot; + PageNumber.ToString() + &quot; &quot; + Resources.Of + &quot; &quot; + PageCount.ToString()" PropertyName="Value" /></DataBindings><RawValue type="System.String" id="50" value="DISCLAIMER: The accuracy and reliability of this data is not guaranteed. Aquatic Informatics Inc. accepts no liability for its use in any way. It is the responsibility of the reader to establish the suitability of the information provided in this report for any purpose. No warranty expressed or implied is made regarding the accuracy, completeness, currency, relevance or suitability for any particular purpose of the information provided in this report." /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="51" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="52" Location="1668.75;356.25" Size="1481.25;56.25" Name="textBoxPeriodSelected" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="53" Color="51, 51, 51" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="54"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="55" Expression="GetData(&quot;ReportTables.ReportData.PeriodSelectedInformation&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="56" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="57" Location="150;431.25" Size="3000;56.25" Name="textBoxInformation1" StyleName="Normal" ExportAsPictureInXaml="false" TextAlign="MiddleLeft"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="58" Color="51, 51, 51" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="59"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="60" Expression="&quot;DataSets: &quot; + Parameter1 + &quot;.&quot; + Label1 + ((!string.IsNullOrEmpty(Parameter2)) ? &quot;, &quot; + Parameter2 + &quot;.&quot; + Label2 : &quot;&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="61" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item></Controls></Item><Item type="PerpetuumSoft.Reporting.DOM.PageFooter" id="62" StyleName="PageFooter" Location="0;1725" Name="pageFooter" Size="3300;150"><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="63"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="64" Expression="ReportOutputIsPdf()" PropertyName="Visible" /></DataBindings><Controls type="PerpetuumSoft.Reporting.DOM.ReportControlCollection" id="65"><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="66" Location="0;0" Size="3300;29.528125762939453" Name="textBoxPageFooterLine" ExportAsPictureInXaml="false"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="67" Color="110, 112, 110" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="32" TopLine="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="68" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="69" Location="168.75;0" Size="2981.25;131.25" CanGrow="true" Name="textBoxPageFooter1" StyleName="Normal" ExportAsPictureInXaml="false" TextAlign="BottomLeft"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="70" Color="110, 112, 110" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="71"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="72" Expression="GetData(&quot;ReportTables.ReportData.FooterDisclaimer&quot;)" PropertyName="Value" /></DataBindings><RawValue type="System.String" id="73" value="DISCLAIMER - AQUARIUS is the leading software suite to acquire, process, model, and publish water data. Environmental monitoring agencies worldwide trust AQUARIUS to produce accurate water information in real-time. A modern design delivers the latest water science in an intuitive experience." /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="74" Size="7" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item></Controls></Item><Item type="PerpetuumSoft.Reporting.DOM.DataBand" id="75" Location="0;1050" Size="3300;600" Name="dataBand0" ColumnsGap="0" DataSource="ReportTables.GroupBy"><Sort type="PerpetuumSoft.Reporting.DOM.DataBandSortCollection" id="76" /><Controls type="PerpetuumSoft.Reporting.DOM.ReportControlCollection" id="77"><Item type="PerpetuumSoft.Reporting.DOM.DataBand" id="78" Location="0;56.25" Size="3300;487.5" Name="dataBand1" ColumnsGap="0" DataSource="ReportTables.GroupBy.GroupByExtremaTable"><Sort type="PerpetuumSoft.Reporting.DOM.DataBandSortCollection" id="79" /><Controls type="PerpetuumSoft.Reporting.DOM.ReportControlCollection" id="80"><Item type="PerpetuumSoft.Reporting.DOM.Header" id="81" Location="0;56.25" CanGrow="true" Size="3300;112.5" Name="header1" StyleName="Header1"><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="82" /><Controls type="PerpetuumSoft.Reporting.DOM.ReportControlCollection" id="83"><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="84" Location="150;0" Size="525;112.5" Margins="9.375; 9.375; 0; 0" CanGrow="true" Name="textBox13" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="MiddleCenter"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="85" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="86" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="87" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="88"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="89" Expression="(string.IsNullOrEmpty(LocationType)) ? &quot;Location Name&quot; : &quot;Location Type&quot; + Environment.NewLine + LocationType" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="90" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="91" Location="675;0" Size="243.75;112.5" Margins="9.375; 9.375; 0; 0" CanGrow="true" Name="textBox14" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="MiddleCenter"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="92" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="93" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="87" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="94"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="95" Expression="&quot;Max &quot; + ((GroupBy == &quot;WaterYear&quot;) ? &quot;WY&quot; :  &quot;CY&quot;) + Environment.NewLine + Parameter1 +&#xD;&#xA;  ((!string.IsNullOrEmpty(UnitSymbol1)) ? &quot; (&quot; + UnitSymbol1 + &quot;)&quot; : &quot;&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="96" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="97" Location="918.75;0" Size="375;112.5" Margins="9.375; 9.375; 0; 0" CanGrow="true" Name="textBox16" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="MiddleCenter"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="98" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="99" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="87" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="100"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="101" Expression="&quot;Date at Max&quot;+ Environment.NewLine + Parameter1" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="102" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="103" Location="1293.75;0" Size="243.75;112.5" Margins="9.375; 9.375; 0; 0" CanGrow="true" Name="textBox34" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="MiddleCenter"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="104" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="105" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="87" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="106"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="107" Expression="&quot;Max &quot; + ((GroupBy == &quot;WaterYear&quot;) ? &quot;WY&quot; : &quot;CY&quot;) + Environment.NewLine + Parameter2 +&#xD;&#xA;  ((!string.IsNullOrEmpty(UnitSymbol2)) ? &quot; (&quot; + UnitSymbol2 + &quot;)&quot; : &quot;&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="108" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="109" Location="1537.5;0" Size="375;112.5" Margins="9.375; 9.375; 0; 0" CanGrow="true" Name="textBox8" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="MiddleCenter"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="110" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="111" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="87" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="112"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="113" Expression="&quot;Date at Max&quot;+ Environment.NewLine + Parameter2" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="114" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="115" Location="1912.5;0" Size="243.75;112.5" Margins="9.375; 9.375; 0; 0" CanGrow="true" Name="textBox9" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="MiddleCenter"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="116" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="117" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="87" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="118"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="119" Expression="&quot;Min &quot; + ((GroupBy == &quot;WaterYear&quot;) ? &quot;WY&quot; : &quot;CY&quot;) + Environment.NewLine + Parameter1 +&#xD;&#xA;  ((!string.IsNullOrEmpty(UnitSymbol1)) ? &quot; (&quot; + UnitSymbol1 + &quot;)&quot; : &quot;&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="120" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="121" Location="2156.25;0" Size="375;112.5" Margins="9.375; 9.375; 0; 0" CanGrow="true" Name="textBox12" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="MiddleCenter"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="122" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="123" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="87" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="124"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="125" Expression="&quot;Date at Min&quot;+ Environment.NewLine + Parameter1" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="126" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="127" Location="2531.25;0" Size="243.75;112.5" Margins="9.375; 9.375; 0; 0" CanGrow="true" Name="textBox15" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="MiddleCenter"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="128" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="129" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="87" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="130"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="131" Expression="&quot;Min &quot; + ((GroupBy == &quot;WaterYear&quot;) ? &quot;WY&quot; : &quot;CY&quot;) + Environment.NewLine + Parameter2 +&#xD;&#xA;  ((!string.IsNullOrEmpty(UnitSymbol2)) ? &quot; (&quot; + UnitSymbol2 + &quot;)&quot; : &quot;&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="132" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="133" Location="2775;0" Size="375;112.5" Margins="9.375; 9.375; 0; 0" CanGrow="true" Name="textBox17" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="MiddleCenter"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="134" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="135" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="87" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="136"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="137" Expression="&quot;Date at Min&quot;+ Environment.NewLine + Parameter2" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="138" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item></Controls><Aggregates type="PerpetuumSoft.Reporting.DOM.AggregateCollection" id="139" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Detail" id="140" Location="0;225" CanGrow="true" Size="3300;56.25" CanShrink="true" Name="detail1"><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="141" /><Controls type="PerpetuumSoft.Reporting.DOM.ReportControlCollection" id="142"><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="143" Location="675;0" Size="243.75;56.25" CanShrink="true" Margins="6.25; 6.25; 0; 0" CanGrow="true" Name="textBox7" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="TopCenter"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="144" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="87" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="145"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="146" Expression="dataBand1[&quot;MaxValue1&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="147" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="148" Location="918.75;0" Size="375;56.25" CanShrink="true" Margins="6.25; 6.25; 0; 0" CanGrow="true" Name="textBox10" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="TopCenter"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="149" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="87" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="150"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="151" Expression="dataBand1[&quot;MaxDate1&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="152" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="153" Location="150;0" Size="525;56.25" CanShrink="true" Margins="6.25; 6.25; 0; 0" CanGrow="true" Name="textBox11" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="TopCenter"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="154" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="87" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="155"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="156" Expression="dataBand1[&quot;LocationName&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="157" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="158" Location="1537.5;0" Size="375;56.25" CanShrink="true" Margins="6.25; 6.25; 0; 0" CanGrow="true" Name="textBox22" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="TopCenter"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="159" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="87" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="160"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="161" Expression="dataBand1[&quot;MaxDate2&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="162" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="163" Location="1293.75;0" Size="243.75;56.25" CanShrink="true" Margins="6.25; 6.25; 0; 0" CanGrow="true" Name="textBox35" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="TopCenter"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="164" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="87" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="165"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="166" Expression="dataBand1[&quot;MaxValue2&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="167" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="168" Location="1912.5;0" Size="243.75;56.25" CanShrink="true" Margins="6.25; 6.25; 0; 0" CanGrow="true" Name="textBox1" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="TopCenter"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="169" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="87" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="170"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="171" Expression="dataBand1[&quot;MinValue1&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="172" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="173" Location="2156.25;0" Size="375;56.25" CanShrink="true" Margins="6.25; 6.25; 0; 0" CanGrow="true" Name="textBox3" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="TopCenter"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="174" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="87" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="175"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="176" Expression="dataBand1[&quot;MinDate1&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="177" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="178" Location="2531.25;0" Size="243.75;56.25" CanShrink="true" Margins="6.25; 6.25; 0; 0" CanGrow="true" Name="textBox4" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="TopCenter"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="179" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="87" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="180"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="181" Expression="dataBand1[&quot;MinValue2&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="182" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="183" Location="2775;0" Size="375;56.25" CanShrink="true" Margins="6.25; 6.25; 0; 0" CanGrow="true" Name="textBox5" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="TopCenter"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="184" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="87" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="185"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="186" Expression="dataBand1[&quot;MinDate2&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="187" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item></Controls><Aggregates type="PerpetuumSoft.Reporting.DOM.AggregateCollection" id="188" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Footer" id="189" Location="0;337.5" Size="3300;93.75" Name="footer1" StyleName="Header1"><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="190" /><Controls type="PerpetuumSoft.Reporting.DOM.ReportControlCollection" id="191" /><Aggregates type="PerpetuumSoft.Reporting.DOM.AggregateCollection" id="192" /></Item></Controls><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="193" /><Totals type="PerpetuumSoft.Reporting.DOM.DataBandTotalCollection" id="194" /><Aggregates type="PerpetuumSoft.Reporting.DOM.AggregateCollection" id="195" /></Item></Controls><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="196" /><Totals type="PerpetuumSoft.Reporting.DOM.DataBandTotalCollection" id="197" /><Aggregates type="PerpetuumSoft.Reporting.DOM.AggregateCollection" id="198" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Detail" id="199" Location="0;675" Size="3300;300" Name="detail2"><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="200"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="201" Expression="!ReportOutputIsPdf()" PropertyName="Visible" /></DataBindings><Controls type="PerpetuumSoft.Reporting.DOM.ReportControlCollection" id="202"><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="203" Location="150;0" Size="3000;75" Name="textBox2" StyleName="PageHeader" GenerateScript="reportTitle.Document.Title = ReportTitle;" ExportAsPictureInXaml="false" TextAlign="MiddleLeft"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="204" Color="33, 64, 154" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="205"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="206" Expression="ReportTitle" PropertyName="Value" /></DataBindings><RawValue type="System.String" id="38" value="Wind Rose" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="207" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="208" Location="150;75" Size="3000;75" Name="textBox6" ExportAsPictureInXaml="false" TextAlign="MiddleLeft"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="209" Color="51, 51, 51" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="210"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="211" Expression="GetData(&quot;ReportTables.ReportData.ReportSubTitle&quot;)" PropertyName="Value" /></DataBindings><RawValue type="System.String" id="44" value="Title" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="212" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="213" Location="150;150" Size="3000;75" Name="textBox18" StyleName="PageNumber" ExportAsPictureInXaml="false" TextAlign="MiddleLeft"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="214" Color="51, 51, 51" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="215"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="216" Expression="Resources.DateProcessed + &quot;:  &quot; + Now.ToString(&quot;MMM d, yyyy&quot;) + &quot;, &quot; + GetData(&quot;ReportTables.ReportData.PeriodSelectedInformation&quot;)" PropertyName="Value" /></DataBindings><RawValue type="System.String" id="50" value="DISCLAIMER: The accuracy and reliability of this data is not guaranteed. Aquatic Informatics Inc. accepts no liability for its use in any way. It is the responsibility of the reader to establish the suitability of the information provided in this report for any purpose. No warranty expressed or implied is made regarding the accuracy, completeness, currency, relevance or suitability for any particular purpose of the information provided in this report." /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="217" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="218" Location="150;225" Size="3000;75" Name="textBox19" StyleName="Normal" ExportAsPictureInXaml="false" TextAlign="MiddleLeft"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="219" Color="51, 51, 51" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="220"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="221" Expression="&quot;DataSets: &quot; + Parameter1 + &quot;.&quot; + Label1 + ((!string.IsNullOrEmpty(Parameter2)) ? &quot;, &quot; + Parameter2 + &quot;.&quot; + Label2 : &quot;&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="222" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item></Controls><Aggregates type="PerpetuumSoft.Reporting.DOM.AggregateCollection" id="223" /></Item></Controls></Item></Pages><DataSources type="PerpetuumSoft.Reporting.Data.DocumentDataSourceCollection" id="224" /><StyleSheet type="PerpetuumSoft.Reporting.DOM.StyleSheet" id="225"><Styles type="PerpetuumSoft.Reporting.DOM.StyleCollection" id="226"><Item type="PerpetuumSoft.Reporting.DOM.Style" id="227" Name="HeaderFooter"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="228" Color="51, 51, 51" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="229" Size="9.75" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Style" id="230" Name="HeaderFooter1"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="231" Color="51, 51, 51" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="232" Size="9.75" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Style" id="233" Name="HeaderFooter2"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="234" Color="51, 51, 51" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="235" Size="9.75" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Style" id="236" Name="HeaderFooter3"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="237" Color="51, 51, 51" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="238" Size="9.75" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Style" id="239" Name="Even"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="240" Color="51, 51, 51" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="241" Size="9" FamilyName="Calibri" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Style" id="242" Name="Odd"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="243" Color="51, 51, 51" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="244" Size="9" FamilyName="Calibri" /><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="245" Color="Silver" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Style" id="246" Name="Normal"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="247" Color="51, 51, 51" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="248" Size="9.75" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Style" id="249" Name="TableHeader"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="250" Color="51, 51, 51" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="251" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="252" Color="230, 230, 230" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="87" All="1 Solid Silver" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Style" id="253" Name="TableCell"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="254" Color="51, 51, 51" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="255" Size="8" FamilyName="Calibri" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="87" All="1 Solid Silver" /></Item></Styles></StyleSheet></root>