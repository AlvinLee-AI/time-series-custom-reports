<?xml version="1.0" encoding="utf-8" standalone="yes"?><root type="PerpetuumSoft.Reporting.DOM.Document" id="1" version="2" Name="TwelveMonthDailyMean" IsTemplate="true" Title="Twelve Month Daily Mean" ImportsString="TwelveMonthDailyMeanNamespace&#xD;&#xA;ReportPluginFramework.Properties&#xD;&#xA;ReportPluginFramework&#xD;&#xA;ReportPluginFramework.ReportData&#xD;&#xA;System.Linq&#xD;&#xA;ReportPluginFramework.ReportData.TimeSeriesComputedStatistics&#xD;&#xA;ReportPluginFramework.ReportData.TimeSeriesData&#xD;&#xA;System.Collections.Generic&#xD;&#xA;System.Data&#xD;&#xA;Server.Services.PublishService.ServiceModel.RequestDtos&#xD;&#xA;Server.Services.PublishService.ServiceModel.ResponseDtos&#xD;&#xA;Server.Services.PublishService.ServiceModel.Dtos&#xD;&#xA;" DocumentGuid="5d82eff8-8dc9-4d6c-b5e2-37b719990d11" MetricUnit="Pixel" DoublePass="true" CommonScript="// Common functions, variables and defaults&#xD;&#xA;//&#xD;&#xA;&#xD;&#xA;public Common CommonLibrary = null;&#xD;&#xA;public string ReportTitle = &quot;&quot;;&#xD;&#xA;string GroupBy = &quot;WaterYear&quot;;&#xD;&#xA;&#xD;&#xA;public string MissingStr = &quot;***&quot;;&#xD;&#xA;public string InputTimeSeriesParameter = &quot;Stage&quot;;&#xD;&#xA;public string InputTimeSeriesUnit = &quot;m&quot;;&#xD;&#xA;&#xD;&#xA;ServiceStack.Logging.ILog Log = ServiceStack.Logging.LogManager.GetLogger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);&#xD;&#xA;&#xD;&#xA;public string FormatDouble(double v)&#xD;&#xA;{&#xD;&#xA;  if (!double.IsNaN(v) &amp;&amp; (v &lt; double.MaxValue) &amp;&amp; (v &gt; double.MinValue))&#xD;&#xA;    return CommonLibrary.GetFormattedDouble(v, InputTimeSeriesParameter, InputTimeSeriesUnit, MissingStr);&#xD;&#xA;  return MissingStr;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;public string FormatPoint(ReportPluginFramework.ReportData.TimeSeriesData.TimeSeriesPoint point)&#xD;&#xA;{&#xD;&#xA;  if (point.Value.HasValue) return (FormatDouble(point.Value.Value));&#xD;&#xA;  return MissingStr;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;public FontDescriptor GetMonthFont(int columnNumber)&#xD;&#xA;{&#xD;&#xA;  if (!(dataBand1_2[&quot;Col&quot; + columnNumber.ToString()] is double))&#xD;&#xA;    return new FontDescriptor(&quot;Calibri&quot;, 7.5F, FontStyleMode.Off, FontStyleMode.Off, FontStyleMode.Off);&#xD;&#xA;  &#xD;&#xA;  double currentValue = (double) dataBand1_2[&quot;Col&quot; + columnNumber.ToString()];&#xD;&#xA;  &#xD;&#xA;  double min = double.MaxValue;&#xD;&#xA;  int minColNumber = -1;&#xD;&#xA;  double max = double.MinValue;&#xD;&#xA;  int maxColNumber = -1;&#xD;&#xA;  &#xD;&#xA;  for (int i = 1; i &lt; 13; i++)&#xD;&#xA;  {&#xD;&#xA;    if (dataBand1_2[&quot;Col&quot; + i.ToString()] is double) &#xD;&#xA;    {&#xD;&#xA;      double colValue = (double) dataBand1_2[&quot;Col&quot; + i.ToString()];&#xD;&#xA;      if (colValue &lt; min) &#xD;&#xA;      {&#xD;&#xA;        min = colValue;&#xD;&#xA;        minColNumber = i;&#xD;&#xA;      }&#xD;&#xA;      if (colValue &gt; max) &#xD;&#xA;      {&#xD;&#xA;        max = colValue;&#xD;&#xA;        maxColNumber = i;&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;  }&#xD;&#xA;  &#xD;&#xA;  FontStyleMode minStyle = FontStyleMode.Off;&#xD;&#xA;  FontStyleMode maxStyle = FontStyleMode.Off;&#xD;&#xA;&#xD;&#xA;  if ((min &lt; double.MaxValue) &amp;&amp; (min == currentValue) &amp;&amp; (minColNumber == columnNumber)) minStyle = FontStyleMode.On;&#xD;&#xA;  if ((max &gt; double.MinValue) &amp;&amp; (max == currentValue) &amp;&amp; (maxColNumber == columnNumber)) maxStyle = FontStyleMode.On;&#xD;&#xA;  &#xD;&#xA;  if (Common.GetLocalizedStatisticName(StatisticType.Max) == (string) dataBand1_2[&quot;Statistic&quot;])&#xD;&#xA;    minStyle = FontStyleMode.Off;&#xD;&#xA;  &#xD;&#xA;  if (Common.GetLocalizedStatisticName(StatisticType.Min) == (string) dataBand1_2[&quot;Statistic&quot;])&#xD;&#xA;    maxStyle = FontStyleMode.Off;&#xD;&#xA;&#xD;&#xA;  return new FontDescriptor(&quot;Calibri&quot;, 7.5F, maxStyle, FontStyleMode.Off, minStyle);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;public FontDescriptor GetFont(int columnNumber)&#xD;&#xA;{&#xD;&#xA;  if (!(dataBand1_1[&quot;Col&quot; + columnNumber.ToString()] is double))&#xD;&#xA;    return new FontDescriptor(&quot;Calibri&quot;, 7.5F, FontStyleMode.Off, FontStyleMode.Off, FontStyleMode.Off);&#xD;&#xA;&#xD;&#xA;  double v = (double) dataBand1_1[&quot;Col&quot; + columnNumber.ToString()];&#xD;&#xA;  &#xD;&#xA;  DataRow [] pageRows = ((DataRow) dataBand1.DataItem).GetChildRows(&quot;GroupByDailyStatistic&quot;);&#xD;&#xA;  &#xD;&#xA;  double min = (double) GetTotal(&quot;Min&quot; + columnNumber.ToString());&#xD;&#xA;  double max = (double) GetTotal(&quot;Max&quot; + columnNumber.ToString());&#xD;&#xA;    &#xD;&#xA;  FontStyleMode minStyle = FontStyleMode.Off;&#xD;&#xA;  FontStyleMode maxStyle = FontStyleMode.Off;&#xD;&#xA;    &#xD;&#xA;  if ((min &lt; double.MaxValue) &amp;&amp; (min == v)) minStyle = FontStyleMode.On;&#xD;&#xA;  if ((max &gt; double.MinValue) &amp;&amp; (max == v)) maxStyle = FontStyleMode.On;&#xD;&#xA;  &#xD;&#xA;  if (minStyle == FontStyleMode.On)&#xD;&#xA;  {&#xD;&#xA;    for (int rowNumber = 0; rowNumber &lt; pageRows.Length; rowNumber++)&#xD;&#xA;    {&#xD;&#xA;      if (rowNumber &gt;= dataBand1_1.LineNumber - 1)&#xD;&#xA;        break;&#xD;&#xA;      &#xD;&#xA;      object rowVal = pageRows[rowNumber][&quot;Col&quot; + columnNumber.ToString()];&#xD;&#xA;      if ((rowVal is double) &amp;&amp; (((double) rowVal) &lt;= v))&#xD;&#xA;      {&#xD;&#xA;        // this line number is not the first min in the column&#xD;&#xA;        minStyle = FontStyleMode.Off;&#xD;&#xA;        break;&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;  }&#xD;&#xA;  &#xD;&#xA;  if (maxStyle == FontStyleMode.On)&#xD;&#xA;  {&#xD;&#xA;    for (int rowNumber = 0; rowNumber &lt; pageRows.Length; rowNumber++)&#xD;&#xA;    {&#xD;&#xA;      if (rowNumber &gt;= dataBand1_1.LineNumber - 1)&#xD;&#xA;        break;&#xD;&#xA;      &#xD;&#xA;      object rowVal = pageRows[rowNumber][&quot;Col&quot; + columnNumber.ToString()];&#xD;&#xA;      if ((rowVal is double) &amp;&amp; (((double) rowVal) &gt;= v))&#xD;&#xA;      {&#xD;&#xA;        // this line number is not the first max in the column&#xD;&#xA;        maxStyle = FontStyleMode.Off;&#xD;&#xA;        break;&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;  }&#xD;&#xA;    &#xD;&#xA;  return new FontDescriptor(&quot;Calibri&quot;, 7.5F, maxStyle, FontStyleMode.Off, minStyle);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;public Server.Services.PublishService.ServiceModel.Dtos.TimeSeriesDescription GetSignal(&#xD;&#xA;  IPublishGateway publish, string locIdentifier, string parameter, string label)&#xD;&#xA;{&#xD;&#xA;  Server.Services.PublishService.ServiceModel.Dtos.TimeSeriesDescription dataSetDescription = null;&#xD;&#xA;  TimeSeriesDescriptionServiceRequest tsRequest = new TimeSeriesDescriptionServiceRequest();&#xD;&#xA;  tsRequest.LocationIdentifier = locIdentifier;&#xD;&#xA;  var tsDescriptions = publish.Get(tsRequest).TimeSeriesDescriptions;&#xD;&#xA;  foreach (var tsDesc in tsDescriptions)&#xD;&#xA;  {&#xD;&#xA;    if ((label == tsDesc.Label) &amp;&amp; (parameter == tsDesc.Parameter))&#xD;&#xA;    {&#xD;&#xA;      dataSetDescription = tsDesc;&#xD;&#xA;      break;&#xD;&#xA;    }&#xD;&#xA;  }&#xD;&#xA;  return dataSetDescription;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;public long UnusableGrade = -2;&#xD;&#xA;&#xD;&#xA;public bool WscGoodGrade(long? gradeCode)&#xD;&#xA;{&#xD;&#xA;  if (!gradeCode.HasValue) return false;&#xD;&#xA;  long code = gradeCode.Value;&#xD;&#xA;  &#xD;&#xA;  return (code != UnusableGrade);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;public bool WscGoodValue(TimeAlignedPoint timeAlignedPoint)&#xD;&#xA;{&#xD;&#xA;  return timeAlignedPoint.NumericValue1.HasValue &amp;&amp; WscGoodGrade(timeAlignedPoint.GradeCode1);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;public bool WscGapExistsInDay(DateTimeOffset dailyPointTimestamp, &#xD;&#xA;  List&lt;TimeAlignedPoint&gt; timeAlignedPoints, ref int alignedPointsIndex)&#xD;&#xA;{&#xD;&#xA;  TimeSpan gapSize = TimeSpan.Zero;&#xD;&#xA;  TimeSpan gapLimit = TimeSpan.FromMinutes(121);&#xD;&#xA;  bool gapExceeded = false;&#xD;&#xA;  &#xD;&#xA;  DateTimeOffset prevTime = dailyPointTimestamp;&#xD;&#xA;  &#xD;&#xA;  for (; alignedPointsIndex &lt; timeAlignedPoints.Count; alignedPointsIndex++)&#xD;&#xA;  {&#xD;&#xA;    TimeAlignedPoint alignedPoint = timeAlignedPoints[alignedPointsIndex];&#xD;&#xA;    if (alignedPoint.Timestamp &lt;= dailyPointTimestamp) continue;&#xD;&#xA;    if (alignedPoint.Timestamp &gt;= dailyPointTimestamp.AddDays(1)) break;&#xD;&#xA;    &#xD;&#xA;    DateTimeOffset curTime = alignedPoint.Timestamp;&#xD;&#xA;    &#xD;&#xA;    TimeSpan timeDiff = (curTime - prevTime);&#xD;&#xA;    &#xD;&#xA;    if ((timeDiff + gapSize) &gt; gapLimit)&#xD;&#xA;    {&#xD;&#xA;      gapExceeded = true;&#xD;&#xA;      break;&#xD;&#xA;    }&#xD;&#xA;    else if (!WscGoodValue(alignedPoint))&#xD;&#xA;    {&#xD;&#xA;      gapSize += timeDiff;&#xD;&#xA;      &#xD;&#xA;      if (gapSize &gt; gapLimit) &#xD;&#xA;      {&#xD;&#xA;        gapExceeded = true;&#xD;&#xA;        break;&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;    else // it is a good point, reset gap size to zero and continue&#xD;&#xA;    {&#xD;&#xA;      gapSize = TimeSpan.Zero;&#xD;&#xA;      prevTime = curTime;&#xD;&#xA;    }&#xD;&#xA;  }&#xD;&#xA;    &#xD;&#xA;  if ((alignedPointsIndex == timeAlignedPoints.Count) &amp;&amp; !gapExceeded)&#xD;&#xA;  {&#xD;&#xA;    // past last point in signal, detect if adding rest of this day to gapSize would go over gap limit&#xD;&#xA;    DateTimeOffset endOfDay = dailyPointTimestamp.AddDays(1);&#xD;&#xA;    TimeSpan timeDiff = endOfDay - prevTime;&#xD;&#xA;    &#xD;&#xA;    if ((timeDiff + gapSize) &gt; gapLimit) &#xD;&#xA;      gapExceeded = true;    &#xD;&#xA;  }  &#xD;&#xA;  return gapExceeded;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;public int WscGradeRule(int newGradeCode, int curGradeCode)&#xD;&#xA;{&#xD;&#xA;  if (newGradeCode &gt; 0)&#xD;&#xA;  {&#xD;&#xA;    if (curGradeCode &gt; 0)&#xD;&#xA;    {&#xD;&#xA;      return (curGradeCode &lt; newGradeCode) ? curGradeCode : newGradeCode;&#xD;&#xA;    }&#xD;&#xA;    return newGradeCode;&#xD;&#xA;  }&#xD;&#xA;  else if ((curGradeCode &gt; 0))&#xD;&#xA;  {&#xD;&#xA;    return curGradeCode;&#xD;&#xA;  }&#xD;&#xA;  return 0;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;public int WscGradeCodeForDay(DateTimeOffset dailyPointTimestamp, &#xD;&#xA;  List&lt;TimeAlignedPoint&gt; timeAlignedPoints, ref int alignedPointsIndex)&#xD;&#xA;{&#xD;&#xA;  int gradeCodeForDay = 0;&#xD;&#xA;  &#xD;&#xA;  for (; alignedPointsIndex &lt; timeAlignedPoints.Count; alignedPointsIndex++)&#xD;&#xA;  {&#xD;&#xA;    TimeAlignedPoint alignedPoint = timeAlignedPoints[alignedPointsIndex];&#xD;&#xA;    if (alignedPoint.Timestamp &lt;= dailyPointTimestamp) continue;&#xD;&#xA;    if (alignedPoint.Timestamp &gt;= dailyPointTimestamp.AddDays(1)) break;&#xD;&#xA;    &#xD;&#xA;    int newGradeCode = (alignedPoint.GradeCode1.HasValue) ? (int) alignedPoint.GradeCode1.Value : -1;&#xD;&#xA;    &#xD;&#xA;    gradeCodeForDay = WscGradeRule(newGradeCode, gradeCodeForDay);&#xD;&#xA;  }&#xD;&#xA;  return gradeCodeForDay;&#xD;&#xA;}" ScriptLanguage="CSharp" GridStep="18.75" GenerateScript="if (Engine.IsSecondPass) return;&#xD;&#xA;&#xD;&#xA;ServiceStack.Logging.ILog Log = ServiceStack.Logging.LogManager.GetLogger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);&#xD;&#xA;&#xD;&#xA;Log.Debug(&quot;Begin Document GenerateScript !!!!!!!!!!!!!!**********************************************************&quot;);&#xD;&#xA;try&#xD;&#xA;{&#xD;&#xA;  DataSet dataSet = (DataSet) Engine.Objects[&quot;ReportTables&quot;];&#xD;&#xA;  RunFileReportRequest runReportRequest = (RunFileReportRequest) dataSet.Tables[&quot;RunReportRequest&quot;].Rows[0][&quot;RunReportRequest&quot;];&#xD;&#xA;  IPublishGateway publish = runReportRequest.Publish;&#xD;&#xA;  CommonLibrary = (Common) dataSet.Tables[&quot;RunReportRequest&quot;].Rows[0][&quot;CommonLibrary&quot;];&#xD;&#xA;  ReportTitle = (string) dataSet.Tables[&quot;ReportSettings&quot;].Rows[0][&quot;ReportTitle&quot;];&#xD;&#xA;  Guid timeSeriesUniqueId = (Guid) dataSet.Tables[&quot;SourceData&quot;].Rows[0][&quot;UniqueId&quot;];&#xD;&#xA;  &#xD;&#xA;  string dllName = (string) dataSet.Tables[&quot;RunReportRequest&quot;].Rows[0][&quot;DllName&quot;];&#xD;&#xA;  Log.DebugFormat(&quot;{0} - Document GenerateScript input = {1}&quot;, dllName, timeSeriesUniqueId);&#xD;&#xA;  &#xD;&#xA;  ///////////////////////////////////////////////////////////////&#xD;&#xA;   &#xD;&#xA;  MissingStr = CommonLibrary.GetParameterString(&quot;MissingData&quot;, &quot;***&quot;);&#xD;&#xA;  string hydatLabel = CommonLibrary.GetParameterString(&quot;HydatLabel&quot;, &quot;Daily.HydatReady&quot;);&#xD;&#xA;  string selectDailyMeans = CommonLibrary.GetParameterString(&quot;SelectDailyMeansMethod&quot;, &quot;DailyMeansFromHydatReady&quot;);&#xD;&#xA;  bool useHydatDailyMeans = selectDailyMeans == &quot;DailyMeansFromHydatReady&quot;;&#xD;&#xA;    &#xD;&#xA;  Common common = (Common) dataSet.Tables[&quot;RunReportRequest&quot;].Rows[0][&quot;CommonLibrary&quot;];&#xD;&#xA;&#xD;&#xA;  string locIdentifier = (string) dataSet.Tables[&quot;SourceData&quot;].Rows[0][&quot;LocationIdentifier&quot;];&#xD;&#xA;  string inputTimeSeriesIdentifier = (string) dataSet.Tables[&quot;SourceData&quot;].Rows[0][&quot;TimeSeriesIdentifier&quot;];&#xD;&#xA;  InputTimeSeriesParameter = (string) dataSet.Tables[&quot;SourceData&quot;].Rows[0][&quot;Parameter&quot;];&#xD;&#xA;  InputTimeSeriesUnit = (string) dataSet.Tables[&quot;SourceData&quot;].Rows[0][&quot;Unit&quot;];&#xD;&#xA;  string inputTimeSeriesLabel = (string) dataSet.Tables[&quot;SourceData&quot;].Rows[0][&quot;Label&quot;];&#xD;&#xA;  string inputTimeSeriesInformation = (string) dataSet.Tables[&quot;SourceData&quot;].Rows[0][&quot;TimeSeriesInformation&quot;];&#xD;&#xA;  string inputTimeSeriesTimeRangeInformation = (string) dataSet.Tables[&quot;SourceData&quot;].Rows[0][&quot;TimeSeriesTimeRangeInformation&quot;];&#xD;&#xA;  &#xD;&#xA;  bool inputSignalIsNotHydat = inputTimeSeriesLabel != hydatLabel;&#xD;&#xA;    &#xD;&#xA;  GroupBy = (common.PeriodSelectedIsWaterYear()) ? &quot;WaterYear&quot; : &quot;Year&quot;;&#xD;&#xA;  DataTable settingsTable = dataSet.Tables[&quot;ReportSettings&quot;];&#xD;&#xA;  &#xD;&#xA;  if (!settingsTable.Columns.Contains(&quot;GroupBy&quot;))&#xD;&#xA;  {&#xD;&#xA;    settingsTable.Columns.Add(&quot;GroupBy&quot;, typeof(string));&#xD;&#xA;    settingsTable.Rows[0][&quot;GroupBy&quot;] = GroupBy;&#xD;&#xA;  }&#xD;&#xA;  &#xD;&#xA;  DataTable twelveMonthTable = dataSet.Tables[&quot;TwelveMonthDailyMeanDataTable&quot;];&#xD;&#xA;  if (twelveMonthTable.Rows.Count &lt; 1)&#xD;&#xA;    dataSet.Tables[&quot;TwelveMonthDailyMeanDataTable&quot;].Rows.Add(twelveMonthTable.NewRow());&#xD;&#xA;  &#xD;&#xA;  if (!twelveMonthTable.Columns.Contains(&quot;HydatSignalInformation&quot;))&#xD;&#xA;    twelveMonthTable.Columns.Add(&quot;HydatSignalInformation&quot;, typeof(string));&#xD;&#xA;  if (!twelveMonthTable.Columns.Contains(&quot;WorkingSignalInformation&quot;))&#xD;&#xA;    twelveMonthTable.Columns.Add(&quot;WorkingSignalInformation&quot;, typeof(string));&#xD;&#xA;  &#xD;&#xA;  if (useHydatDailyMeans)&#xD;&#xA;  {&#xD;&#xA;    twelveMonthTable.Rows[0][&quot;HydatSignalInformation&quot;] = &#xD;&#xA;      string.Format(&quot;Missing {0}: no signal found with parameter '{1}' and label '{2}' in location {3}, {4}&quot;, &#xD;&#xA;      hydatLabel, InputTimeSeriesParameter, hydatLabel, locIdentifier, common.GetLocationName(locIdentifier));&#xD;&#xA;  }&#xD;&#xA;  else&#xD;&#xA;  {&#xD;&#xA;    twelveMonthTable.Rows[0][&quot;HydatSignalInformation&quot;] = &quot;Daily Means computed from Input Dataset&quot;;&#xD;&#xA;  }&#xD;&#xA;  &#xD;&#xA;  twelveMonthTable.Rows[0][&quot;WorkingSignalInformation&quot;] = &#xD;&#xA;    string.Format(&quot;{0}: wrong input dataset '{1}' - choose a time-series without label '{2}' to compute monthly summary statistics&quot;, &#xD;&#xA;    Resources.SourceData, inputTimeSeriesIdentifier, hydatLabel);&#xD;&#xA;&#xD;&#xA;  if (inputSignalIsNotHydat)&#xD;&#xA;  {  &#xD;&#xA;    twelveMonthTable.Rows[0][&quot;WorkingSignalInformation&quot;] = string.Format(&quot;{0}: {1}, {2}&quot;,&#xD;&#xA;      Resources.SourceData, inputTimeSeriesInformation, inputTimeSeriesTimeRangeInformation);    &#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  DateTimeOffsetInterval timeseriesTimeRange = (DateTimeOffsetInterval) dataSet.Tables[&quot;SourceData&quot;].Rows[0][&quot;TimeSeriesInterval&quot;];&#xD;&#xA;  DateTimeOffsetInterval adjustedInterval = (DateTimeOffsetInterval) dataSet.Tables[&quot;ReportPeriods&quot;].Rows[0][&quot;GroupBy&quot; + GroupBy];&#xD;&#xA;&#xD;&#xA;  Log.DebugFormat(&quot;period selected = {0}, timeseries timerange = {1}, adjusted timerange = {2} for GroupBy = {3}&quot;,&#xD;&#xA;    common.TimeRangeString(runReportRequest.Interval), common.TimeRangeString(timeseriesTimeRange), common.TimeRangeString(adjustedInterval), GroupBy);&#xD;&#xA;&#xD;&#xA;  CoverageOptions coverageOptions = common.GetCoverageOptions();&#xD;&#xA;  &#xD;&#xA;  ReportPluginFramework.ReportData.TimeSeriesDescription.InterpolationType interpolationType = &#xD;&#xA;    (ReportPluginFramework.ReportData.TimeSeriesDescription.InterpolationType) dataSet.Tables[&quot;SourceData&quot;].Rows[0][&quot;InterpolationType&quot;];&#xD;&#xA;  if (interpolationType == ReportPluginFramework.ReportData.TimeSeriesDescription.InterpolationType.DiscreteValues) &#xD;&#xA;    coverageOptions.RequiresMinimumCoverage = false;&#xD;&#xA;&#xD;&#xA;  bool? useCoverage = coverageOptions.RequiresMinimumCoverage;&#xD;&#xA;  double? coverageAmount = coverageOptions.CoverageThreshold;&#xD;&#xA;&#xD;&#xA;  string coverageString = common.GetCoverageString(coverageOptions);&#xD;&#xA;&#xD;&#xA;  if (!settingsTable.Columns.Contains(&quot;CoverageSetting&quot;))&#xD;&#xA;  {&#xD;&#xA;    settingsTable.Columns.Add(&quot;CoverageSetting&quot;, typeof(string));&#xD;&#xA;    settingsTable.Rows[0][&quot;CoverageSetting&quot;] = coverageString;&#xD;&#xA;  }&#xD;&#xA;  &#xD;&#xA;  Server.Services.PublishService.ServiceModel.Dtos.TimeSeriesDescription hydatDailyDescription = null;&#xD;&#xA;  List &lt;TimeAlignedPoint&gt; dailyHydatPoints = new List&lt;TimeAlignedPoint&gt;();&#xD;&#xA;  if (useHydatDailyMeans)&#xD;&#xA;  {&#xD;&#xA;    hydatDailyDescription = GetSignal(publish, locIdentifier, InputTimeSeriesParameter, hydatLabel);&#xD;&#xA;    if (hydatDailyDescription != null)&#xD;&#xA;    {&#xD;&#xA;      dailyHydatPoints = common.GetTimeAlignedPoints(new List&lt;Guid&gt;{hydatDailyDescription.UniqueId}, &#xD;&#xA;        adjustedInterval.Start, (adjustedInterval.End.HasValue) ? adjustedInterval.End.Value.AddHours(6) : adjustedInterval.End);&#xD;&#xA;    &#xD;&#xA;      twelveMonthTable.Rows[0][&quot;HydatSignalInformation&quot;] = string.Format(&quot;{0}: {1}, {2}, {3}&quot;,&#xD;&#xA;        hydatLabel, hydatDailyDescription.Identifier, common.GetLocationName(locIdentifier),&#xD;&#xA;        common.GetTimeSeriesTimeRangeInformation(hydatDailyDescription.UniqueId));&#xD;&#xA;    }&#xD;&#xA;  }&#xD;&#xA;  &#xD;&#xA;  List &lt;TimeAlignedPoint&gt; timeAlignedPoints = common.GetTimeAlignedPoints(new List&lt;Guid&gt;{timeSeriesUniqueId}, &#xD;&#xA;    adjustedInterval.Start, (adjustedInterval.End.HasValue) ? adjustedInterval.End.Value.AddDays(1) : adjustedInterval.End);&#xD;&#xA;&#xD;&#xA;  long gradeCodeUnusable = -2;&#xD;&#xA;  int timeAlignedPointsCount = timeAlignedPoints.Count;&#xD;&#xA;  int alignedPointsIndexForGaps = 0;&#xD;&#xA;  int alignedPointsIndexForGrades = 0;&#xD;&#xA;  int gradeCodePartialDay = 30;&#xD;&#xA;  &#xD;&#xA;  GroupByHandler groupByHandler = new GroupByHandler(common);&#xD;&#xA;  DataTable groupByTable = groupByHandler.GetGroupByTable(&quot;GroupBy&quot;);&#xD;&#xA;&#xD;&#xA;  dataSet.Tables.Add(groupByTable);&#xD;&#xA;&#xD;&#xA;  DataTable statTable = new DataTable(&quot;DailyStatistic&quot;);&#xD;&#xA;  statTable.Columns.Add(&quot;Year&quot;, typeof(int));&#xD;&#xA;  statTable.Columns.Add(&quot;WaterYear&quot;, typeof(int));&#xD;&#xA;  statTable.Columns.Add(&quot;Day&quot;, typeof(int));&#xD;&#xA;  for (int i = 1; i &lt; 13; i++) statTable.Columns.Add(&quot;Month&quot; + i.ToString());&#xD;&#xA;  for (int i = 1; i &lt; 13; i++) statTable.Columns.Add(&quot;Col&quot; + i.ToString(), typeof(double));&#xD;&#xA;  for (int i = 1; i &lt; 13; i++) statTable.Columns.Add(&quot;Grade&quot; + i.ToString());&#xD;&#xA;&#xD;&#xA;  dataSet.Tables.Add(statTable);&#xD;&#xA;&#xD;&#xA;  DataTable headerTable = new DataTable(&quot;Headers&quot;);&#xD;&#xA;  for (int i = 1; i &lt; 13; i++) headerTable.Columns.Add(&quot;Month&quot; + i.ToString());&#xD;&#xA;&#xD;&#xA;  dataSet.Tables.Add(headerTable);&#xD;&#xA;  &#xD;&#xA;  DataTable monthTable = new DataTable(&quot;Monthly&quot;);&#xD;&#xA;  monthTable.Columns.Add(&quot;Year&quot;, typeof(int));&#xD;&#xA;  monthTable.Columns.Add(&quot;WaterYear&quot;, typeof(int));&#xD;&#xA;  monthTable.Columns.Add(&quot;Statistic&quot;, typeof(string));&#xD;&#xA;  for (int i = 1; i &lt; 13; i++) monthTable.Columns.Add(&quot;Month&quot; + i.ToString());&#xD;&#xA;  for (int i = 1; i &lt; 13; i++) monthTable.Columns.Add(&quot;Col&quot; + i.ToString(), typeof(double));&#xD;&#xA;&#xD;&#xA;  dataSet.Tables.Add(monthTable);&#xD;&#xA;&#xD;&#xA;  dataSet.Relations.Add(&quot;GroupByDailyStatistic&quot;, groupByTable.Columns[GroupBy], statTable.Columns[GroupBy]);&#xD;&#xA;  dataSet.Relations.Add(&quot;GroupByMonthly&quot;, groupByTable.Columns[GroupBy], monthTable.Columns[GroupBy]);&#xD;&#xA;&#xD;&#xA;  DataTable groupBy = dataSet.Tables[&quot;GroupBy&quot;];&#xD;&#xA;  groupByHandler.AddRowsToGroupBy(groupBy, GroupBy, adjustedInterval.Start.Value, adjustedInterval.End.Value);&#xD;&#xA;&#xD;&#xA;  DataTable dailyTable = dataSet.Tables[&quot;DailyStatistic&quot;];&#xD;&#xA;  DataTable monthlyTable = dataSet.Tables[&quot;Monthly&quot;];&#xD;&#xA;&#xD;&#xA;  foreach (DataRow groupByRow in groupBy.Rows)&#xD;&#xA;  {&#xD;&#xA;    int groupPage = (int) groupByRow[GroupBy];&#xD;&#xA;    Log.DebugFormat(&quot;GroupBy: {0}&quot;, groupPage);&#xD;&#xA;&#xD;&#xA;    for (int i = 1; i &lt;= 31; i++)&#xD;&#xA;    {&#xD;&#xA;      DataRow row = dailyTable.NewRow();&#xD;&#xA;&#xD;&#xA;      row[GroupBy] = groupPage;&#xD;&#xA;      row[&quot;Day&quot;] = i;&#xD;&#xA;&#xD;&#xA;      dailyTable.Rows.Add(row);&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    DataRow monthRow = monthlyTable.NewRow();&#xD;&#xA;    monthRow[GroupBy] = groupPage;&#xD;&#xA;    monthRow[&quot;Statistic&quot;] = Common.GetLocalizedStatisticName(StatisticType.Mean);&#xD;&#xA;    monthlyTable.Rows.Add(monthRow);&#xD;&#xA;    &#xD;&#xA;    monthRow = monthlyTable.NewRow();&#xD;&#xA;    monthRow[GroupBy] = groupPage;&#xD;&#xA;    monthRow[&quot;Statistic&quot;] = Common.GetLocalizedStatisticName(StatisticType.Max);&#xD;&#xA;    monthlyTable.Rows.Add(monthRow);&#xD;&#xA;    &#xD;&#xA;    monthRow = monthlyTable.NewRow();&#xD;&#xA;    monthRow[GroupBy] = groupPage;&#xD;&#xA;    monthRow[&quot;Statistic&quot;] = &quot;(&quot; + Resources.Day + &quot;)&quot;;&#xD;&#xA;    monthlyTable.Rows.Add(monthRow);&#xD;&#xA;    &#xD;&#xA;    monthRow = monthlyTable.NewRow();&#xD;&#xA;    monthRow[GroupBy] = groupPage;&#xD;&#xA;    monthRow[&quot;Statistic&quot;] = Common.GetLocalizedStatisticName(StatisticType.Min);&#xD;&#xA;    monthlyTable.Rows.Add(monthRow);&#xD;&#xA;    &#xD;&#xA;    monthRow = monthlyTable.NewRow();&#xD;&#xA;    monthRow[GroupBy] = groupPage;&#xD;&#xA;    monthRow[&quot;Statistic&quot;] = &quot;(&quot; + Resources.Day + &quot;)&quot;;&#xD;&#xA;    monthlyTable.Rows.Add(monthRow);&#xD;&#xA;  }&#xD;&#xA;  &#xD;&#xA;  int numberOfMonthSummaryRows = 5;&#xD;&#xA;&#xD;&#xA;  DataTable tableHeaders = dataSet.Tables[&quot;Headers&quot;];&#xD;&#xA;  DataRow headerRow = tableHeaders.NewRow();&#xD;&#xA;  for (int i = 1; i &lt; 13; i++)&#xD;&#xA;  {&#xD;&#xA;    string columnName = &quot;Month&quot; + i.ToString();&#xD;&#xA;    headerRow[columnName] = &quot;&quot;;&#xD;&#xA;  }&#xD;&#xA;  tableHeaders.Rows.Add(headerRow);&#xD;&#xA;  &#xD;&#xA;  // Begin set up pages using input signal whichever one it is (hydat or working)&#xD;&#xA;  List&lt;ReportPluginFramework.ReportData.TimeSeriesData.TimeSeriesPoint&gt; dailyStatisticsOfInput = &#xD;&#xA;    common.GetComputedStatisticsPoints(timeSeriesUniqueId,&#xD;&#xA;    adjustedInterval.Start, (adjustedInterval.End.HasValue) ? adjustedInterval.End.Value.AddHours(6) : adjustedInterval.End,&#xD;&#xA;    StatisticType.Mean, StatisticPeriod.Daily, useCoverage, coverageAmount);&#xD;&#xA;  &#xD;&#xA;  int binAdjust = common.GetBinAdjustment(timeSeriesUniqueId);&#xD;&#xA;&#xD;&#xA;  int numberOfPages = groupBy.Rows.Count;&#xD;&#xA;&#xD;&#xA;  int count = dailyStatisticsOfInput.Count;&#xD;&#xA;  Log.Debug(&quot;statistic points count = &quot; + count.ToString());&#xD;&#xA;&#xD;&#xA;  if (count == 0) return;&#xD;&#xA;&#xD;&#xA;  int WaterYearMonth = dailyStatisticsOfInput[0].Timestamp.AddDays(binAdjust).Month;&#xD;&#xA;  int YearOfFirstPage = dailyStatisticsOfInput[0].Timestamp.AddDays(binAdjust).Year;&#xD;&#xA;&#xD;&#xA;  for (int i = 1; i &lt; 13; i++)&#xD;&#xA;  {&#xD;&#xA;    string columnName = &quot;Month&quot; + i.ToString();&#xD;&#xA;    int monthIndex = (GroupBy == &quot;Year&quot;) ? i : ((i - 1) + (WaterYearMonth - 1)) % 12 + 1;&#xD;&#xA;    string monthName = (new DateTime(2000, monthIndex, 1)).ToString(&quot;MMM&quot;);&#xD;&#xA;&#xD;&#xA;    Log.DebugFormat(&quot;headers: {0}, {1}, {2}, {3}, {4}, {5}&quot;, i, GroupBy, WaterYearMonth, columnName, monthIndex, monthName);&#xD;&#xA;&#xD;&#xA;    tableHeaders.Rows[0][columnName] = monthName;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var YearDifference = dailyStatisticsOfInput[count - 1].Timestamp.AddDays(binAdjust).Year - YearOfFirstPage;&#xD;&#xA;  int NumberOfPages = YearDifference + 1;&#xD;&#xA;  // End set up pages using input signal whichever one it is (hydat or working)&#xD;&#xA;&#xD;&#xA;  // fill main (daily) table&#xD;&#xA;  int dailyPointCount = 0;&#xD;&#xA;  string dailyMeanMissingStr = MissingStr;&#xD;&#xA;  if (useHydatDailyMeans)&#xD;&#xA;  {&#xD;&#xA;    dailyPointCount = dailyHydatPoints.Count;&#xD;&#xA;    dailyMeanMissingStr = &quot;&quot;; // for TimeAligned there is only one gap marker per gap so do not use MissingStr&#xD;&#xA;  }&#xD;&#xA;  else&#xD;&#xA;  {&#xD;&#xA;    dailyPointCount = dailyStatisticsOfInput.Count;&#xD;&#xA;  }&#xD;&#xA;  &#xD;&#xA;  for (int pointIndex = 0; pointIndex &lt; dailyPointCount; pointIndex++)&#xD;&#xA;  {&#xD;&#xA;    int? grade;&#xD;&#xA;    double? value;&#xD;&#xA;    DateTimeOffset timestamp = DateTimeOffset.Now;&#xD;&#xA;    &#xD;&#xA;    if (useHydatDailyMeans)&#xD;&#xA;    {&#xD;&#xA;      TimeAlignedPoint hydatDailyPoint = dailyHydatPoints[pointIndex];    &#xD;&#xA;      timestamp = hydatDailyPoint.Timestamp;&#xD;&#xA;      grade = (int?) hydatDailyPoint.GradeCode1;&#xD;&#xA;      value = hydatDailyPoint.NumericValue1;&#xD;&#xA;    }&#xD;&#xA;    else&#xD;&#xA;    {&#xD;&#xA;      ReportPluginFramework.ReportData.TimeSeriesData.TimeSeriesPoint point = dailyStatisticsOfInput[pointIndex];&#xD;&#xA;      value = point.Value;&#xD;&#xA;&#xD;&#xA;      int gradeCode = WscGradeCodeForDay(point.Timestamp, timeAlignedPoints, ref alignedPointsIndexForGrades);&#xD;&#xA;      bool wscGap = WscGapExistsInDay(point.Timestamp, timeAlignedPoints, ref alignedPointsIndexForGaps);   &#xD;&#xA;      if (wscGap) gradeCode = WscGradeRule(gradeCodePartialDay, gradeCode);&#xD;&#xA;&#xD;&#xA;      grade = gradeCode;&#xD;&#xA;        &#xD;&#xA;      timestamp = point.Timestamp.AddDays(binAdjust);&#xD;&#xA;      &#xD;&#xA;      if (timeseriesTimeRange.Start.HasValue &amp;&amp; (timestamp &lt;= timeseriesTimeRange.Start.Value.AddDays(-1))) continue;&#xD;&#xA;      if (timeseriesTimeRange.End.HasValue &amp;&amp; (timestamp &gt; timeseriesTimeRange.End.Value)) break;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    int year = timestamp.Year;&#xD;&#xA;    int waterYear = (timestamp.Month &gt;= WaterYearMonth) ? timestamp.Year : timestamp.Year - 1;&#xD;&#xA;&#xD;&#xA;    int groupNumber = (GroupBy == &quot;Year&quot;) ? (year - YearOfFirstPage) : (waterYear - YearOfFirstPage);&#xD;&#xA;&#xD;&#xA;    var rowIndex = (groupNumber * 31) + (timestamp.Day - 1);&#xD;&#xA;    if ((rowIndex &gt;= 0) &amp;&amp; (rowIndex &lt; dailyTable.Rows.Count))&#xD;&#xA;    {&#xD;&#xA;      int monthIndex = (GroupBy == &quot;Year&quot;) ? timestamp.Month : ((timestamp.Month + (12 - WaterYearMonth)) % 12) + 1;&#xD;&#xA;      &#xD;&#xA;      if (value.HasValue)&#xD;&#xA;      {&#xD;&#xA;        dailyTable.Rows[rowIndex][monthIndex + 2] = FormatDouble((double)value);&#xD;&#xA;        dailyTable.Rows[rowIndex][monthIndex + 2 + 12] = (double)value;&#xD;&#xA;        &#xD;&#xA;        if (grade.HasValue)&#xD;&#xA;          dailyTable.Rows[rowIndex][monthIndex + 2 + 24] = CommonLibrary.GetGradeMarker((int) grade);&#xD;&#xA;      }&#xD;&#xA;      else&#xD;&#xA;      {&#xD;&#xA;        dailyTable.Rows[rowIndex][monthIndex + 2] = dailyMeanMissingStr; &#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // only use a non-hydat signal to fill monthly summary table&#xD;&#xA;&#xD;&#xA;  if (inputSignalIsNotHydat)&#xD;&#xA;  {&#xD;&#xA;    TimeSeriesDataResponse response = common.GetTimeSeriesDataResponse(timeSeriesUniqueId, adjustedInterval.Start, &#xD;&#xA;      (adjustedInterval.End.HasValue) ? adjustedInterval.End.Value.AddDays(1) : adjustedInterval.End);&#xD;&#xA;  &#xD;&#xA;    List&lt;ReportPluginFramework.ReportData.TimeSeriesData.TimeSeriesPoint&gt; timeSeriesPoints = response.Points;&#xD;&#xA;    int timeSeriesPointsCount = timeSeriesPoints.Count;&#xD;&#xA;  &#xD;&#xA;    List&lt;int&gt; tsGrades = common.GetTimeSeriesPointsGrades(timeSeriesPoints, response.Metadata.Grades);&#xD;&#xA;  &#xD;&#xA;//    int gradeCodeUnusable = -2;&#xD;&#xA;  &#xD;&#xA;    binAdjust = common.GetBinAdjustment(timeSeriesUniqueId);&#xD;&#xA;&#xD;&#xA;    List&lt;ReportPluginFramework.ReportData.TimeSeriesData.TimeSeriesPoint&gt; monthlyStatisticMeanPoints = &#xD;&#xA;      common.GetComputedStatisticsPoints(timeSeriesUniqueId,&#xD;&#xA;      adjustedInterval.Start, (adjustedInterval.End.HasValue) ? adjustedInterval.End.Value.AddDays(1) : adjustedInterval.End,&#xD;&#xA;      StatisticType.Mean, StatisticPeriod.Monthly, useCoverage, coverageAmount);&#xD;&#xA;&#xD;&#xA;    int monthlyPointCount = monthlyStatisticMeanPoints.Count;&#xD;&#xA;    &#xD;&#xA;    double monthMin = double.MaxValue;&#xD;&#xA;    string monthMinDay = &quot;&quot;;&#xD;&#xA;    double monthMax = double.MinValue;&#xD;&#xA;    string monthMaxDay = &quot;&quot;;&#xD;&#xA;  &#xD;&#xA;    for (int i = 0; i &lt; monthlyPointCount; i++)&#xD;&#xA;    {&#xD;&#xA;      ReportPluginFramework.ReportData.TimeSeriesData.TimeSeriesPoint point = monthlyStatisticMeanPoints[i];&#xD;&#xA;      DateTimeOffset timestamp = point.Timestamp.AddMonths(binAdjust);&#xD;&#xA;&#xD;&#xA;      if (timeseriesTimeRange.Start.HasValue &amp;&amp; (timestamp &lt;= timeseriesTimeRange.Start.Value.AddMonths(-1))) continue;&#xD;&#xA;      if (timeseriesTimeRange.End.HasValue &amp;&amp; (timestamp &gt; timeseriesTimeRange.End.Value)) break;&#xD;&#xA;&#xD;&#xA;      int year = timestamp.Year;&#xD;&#xA;      int waterYear = (timestamp.Month &gt;= WaterYearMonth) ? timestamp.Year : timestamp.Year - 1;&#xD;&#xA;&#xD;&#xA;      int groupNumber = (GroupBy == &quot;Year&quot;) ? (year - YearOfFirstPage) : (waterYear - YearOfFirstPage);&#xD;&#xA;&#xD;&#xA;      int rowIndex = numberOfMonthSummaryRows * groupNumber;&#xD;&#xA;      int monthIndex = (GroupBy == &quot;Year&quot;) ? timestamp.Month : ((timestamp.Month + (12 - WaterYearMonth)) % 12) + 1;&#xD;&#xA;    &#xD;&#xA;      if ((rowIndex &gt;= 0) &amp;&amp; (rowIndex &lt; monthlyTable.Rows.Count))&#xD;&#xA;      {&#xD;&#xA;        monthlyTable.Rows[rowIndex][monthIndex + 2] = FormatPoint(point);&#xD;&#xA;      }&#xD;&#xA;       &#xD;&#xA;      for (int j = 0; j &lt; timeSeriesPointsCount; j++)&#xD;&#xA;      {&#xD;&#xA;        ReportPluginFramework.ReportData.TimeSeriesData.TimeSeriesPoint tsPoint = timeSeriesPoints[j];&#xD;&#xA;        int tsGrade = tsGrades[j];&#xD;&#xA;        DateTimeOffset tsDateTimeOffset = tsPoint.Timestamp;&#xD;&#xA;      &#xD;&#xA;        if (!tsPoint.Value.HasValue) continue;&#xD;&#xA;        if (tsGrade == gradeCodeUnusable) continue;&#xD;&#xA;      &#xD;&#xA;        if (tsDateTimeOffset &lt; point.Timestamp) continue;&#xD;&#xA;        if ((tsDateTimeOffset &gt;= point.Timestamp.AddMonths(1)) || (j == timeSeriesPointsCount - 1))&#xD;&#xA;        {&#xD;&#xA;          if (!string.IsNullOrEmpty(monthMaxDay))&#xD;&#xA;          {&#xD;&#xA;            rowIndex = 1 + numberOfMonthSummaryRows * groupNumber;&#xD;&#xA;            if ((rowIndex &gt;= 0) &amp;&amp; (rowIndex &lt; monthlyTable.Rows.Count)) monthlyTable.Rows[rowIndex][monthIndex + 2] = FormatDouble(monthMax);&#xD;&#xA;            if ((rowIndex &gt;= 0) &amp;&amp; (rowIndex &lt; monthlyTable.Rows.Count)) monthlyTable.Rows[rowIndex][monthIndex + 2 + 12] = monthMax;&#xD;&#xA;            rowIndex = 2 + numberOfMonthSummaryRows * groupNumber;&#xD;&#xA;            if ((rowIndex &gt;= 0) &amp;&amp; (rowIndex &lt; monthlyTable.Rows.Count)) monthlyTable.Rows[rowIndex][monthIndex + 2] = monthMaxDay;&#xD;&#xA;          }&#xD;&#xA;          if (!string.IsNullOrEmpty(monthMinDay))&#xD;&#xA;          {&#xD;&#xA;            rowIndex = 3 + numberOfMonthSummaryRows * groupNumber;&#xD;&#xA;            if ((rowIndex &gt;= 0) &amp;&amp; (rowIndex &lt; monthlyTable.Rows.Count)) monthlyTable.Rows[rowIndex][monthIndex + 2] = FormatDouble(monthMin);&#xD;&#xA;            if ((rowIndex &gt;= 0) &amp;&amp; (rowIndex &lt; monthlyTable.Rows.Count)) monthlyTable.Rows[rowIndex][monthIndex + 2 + 12] = monthMin;&#xD;&#xA;            rowIndex = 4 + numberOfMonthSummaryRows * groupNumber;&#xD;&#xA;            if ((rowIndex &gt;= 0) &amp;&amp; (rowIndex &lt; monthlyTable.Rows.Count)) monthlyTable.Rows[rowIndex][monthIndex + 2] = monthMinDay;&#xD;&#xA;          }&#xD;&#xA;        &#xD;&#xA;          monthMin = double.MaxValue;&#xD;&#xA;          monthMinDay = &quot;&quot;;&#xD;&#xA;          monthMax = double.MinValue;&#xD;&#xA;          monthMaxDay = &quot;&quot;;&#xD;&#xA;        &#xD;&#xA;          j--;&#xD;&#xA;          break;&#xD;&#xA;        }&#xD;&#xA;      &#xD;&#xA;        if (tsPoint.Value.Value &lt; monthMin) &#xD;&#xA;        {&#xD;&#xA;          monthMin = tsPoint.Value.Value;&#xD;&#xA;          monthMinDay = tsDateTimeOffset.AddDays(binAdjust).ToString(&quot;d|HH:mm&quot;);&#xD;&#xA;        }&#xD;&#xA;        if (tsPoint.Value.Value &gt; monthMax) &#xD;&#xA;        {&#xD;&#xA;          monthMax = tsPoint.Value.Value;&#xD;&#xA;          monthMaxDay = tsDateTimeOffset.AddDays(binAdjust).ToString(&quot;d|HH:mm&quot;);&#xD;&#xA;        }&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;  }&#xD;&#xA;  &#xD;&#xA;  Log.Debug(&quot;End Document GenerateScript !!!!!!!!!!!!!!**********************************************************&quot;);&#xD;&#xA;}&#xD;&#xA;catch (Exception exp)&#xD;&#xA;{&#xD;&#xA;  DataSet dataSet = (DataSet) Engine.Objects[&quot;ReportTables&quot;];&#xD;&#xA;  string dllName = (string) dataSet.Tables[&quot;RunReportRequest&quot;].Rows[0][&quot;DllName&quot;];&#xD;&#xA;  Log.Error(&quot;Document GenerateScript - &quot; + dllName, exp);&#xD;&#xA;  Log.Info(GetData(&quot;ReportTables.RunReportRequest.ReportInputInformation&quot;));&#xD;&#xA;}&#xD;&#xA;"><Parameters type="PerpetuumSoft.Reporting.DOM.ParameterCollection" id="2" /><PageContent type="PerpetuumSoft.Reporting.DOM.Wrappers.ContentParametersDictionary" id="3" /><Pages type="PerpetuumSoft.Reporting.DOM.PageCollection" id="4"><Item type="PerpetuumSoft.Reporting.DOM.Page" id="5" Margins="75; 75; 150; 150" Size="3300;2550" StyleName="Normal" Name="page1" Location="0;0" PaperKind="Letter" Orientation="Landscape"><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="6" /><Controls type="PerpetuumSoft.Reporting.DOM.ReportControlCollection" id="7"><Item type="PerpetuumSoft.Reporting.DOM.PageHeader" id="8" StyleName="PageHeader" Location="0;75" Name="pageHeader" Size="3300;581.25"><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="9" /><Controls type="PerpetuumSoft.Reporting.DOM.ReportControlCollection" id="10"><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="11" Location="112.5;0" Size="3037.5;112.5" Name="textBoxPageHeader1" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="12" Color="33, 64, 154" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="13"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="14" Expression="GetData(&quot;ReportTables.ReportData.PageHeader1&quot;)" PropertyName="Value" /></DataBindings><RawValue type="System.String" id="15" value="Aquatic Informatics Data Management Software" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="16" Size="12" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="17" Location="112.5;75" Size="3037.5;75" Name="textBoxPageHeader2" StyleName="PageHeader" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="18" Color="0, 131, 215" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="19"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="20" Expression="GetData(&quot;ReportTables.ReportData.PageHeader2&quot;)" PropertyName="Value" /></DataBindings><RawValue type="System.String" id="21" value="Faster Analysis. Better Decisions." /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="22" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Picture" id="23" Location="150;31.25" Size="643.75;187.5" SizeMode="Uniform" Name="logo" StyleName="PageHeader" GenerateScript="var encodedImage = GetData(&quot;ReportTables.OrganizationIcon.EncodedImage&quot;) as string;&#xD;&#xA;var bytes = Convert.FromBase64String(encodedImage);&#xD;&#xA;&#xD;&#xA;using (var memoryStream = new System.IO.MemoryStream(bytes))&#xD;&#xA;{&#xD;&#xA;  logo.Image = new System.Drawing.Bitmap(&#xD;&#xA;    System.Drawing.Image.FromStream(memoryStream));&#xD;&#xA;}" ExportAsPictureInXaml="false"><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="24"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="25" Expression="GetData(&quot;ReportTables.OrganizationIcon.SupportUrl&quot;)" PropertyName="Hyperlink" /></DataBindings></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="26" Location="0;281.25" Size="3300;118.11023712158203" Name="textBoxPageHeaderLine" ExportAsPictureInXaml="false" TextAlign="MiddleLeft"><Border type="PerpetuumSoft.Framework.Drawing.Border" id="27" TopLine="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="28" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="29" Location="150;300" Size="1500;75" Name="reportTitle" StyleName="PageHeader" GenerateScript="reportTitle.Document.Title = ReportTitle;" ExportAsPictureInXaml="false" TextAlign="MiddleLeft"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="30" Color="33, 64, 154" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="31"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="32" Expression="ReportTitle" PropertyName="Value" /></DataBindings><RawValue type="System.String" id="33" value="Wind Rose" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="34" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="35" Location="150;356.25" Size="1500;56.25" Name="textBoxSubTitle" ExportAsPictureInXaml="false" TextAlign="MiddleLeft"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="36" Color="51, 51, 51" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="37"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="38" Expression="GetData(&quot;ReportTables.ReportData.ReportSubTitle&quot;)" PropertyName="Value" /></DataBindings><RawValue type="System.String" id="39" value="Title" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="40" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="41" Location="2418.75;300" Size="731.25;75" Name="textBoxPageNumber" StyleName="PageNumber" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="42" Color="51, 51, 51" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="43"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="44" Expression="Now.ToString(&quot;MMM d, yyyy&quot;) + &quot; | &quot; + PageNumber.ToString() + &quot; &quot; + Resources.Of + &quot; &quot; + PageCount.ToString()" PropertyName="Value" /></DataBindings><RawValue type="System.String" id="45" value="DISCLAIMER: The accuracy and reliability of this data is not guaranteed. Aquatic Informatics Inc. accepts no liability for its use in any way. It is the responsibility of the reader to establish the suitability of the information provided in this report for any purpose. No warranty expressed or implied is made regarding the accuracy, completeness, currency, relevance or suitability for any particular purpose of the information provided in this report." /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="46" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="47" Location="1668.75;356.25" Size="1481.25;56.25" Name="textBoxPeriodSelected" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="48" Color="51, 51, 51" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="49"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="50" Expression="GetData(&quot;ReportTables.ReportData.PeriodSelectedInformation&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="51" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="52" Location="0;431.25" Size="3300;103.125" Name="textBoxGrayBackground" ExportAsPictureInXaml="false" TextAlign="TopLeft"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="53" Color="230, 230, 230" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="54" All="1 Solid 204, 204, 204" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="55" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="56" Location="150;431.25" Size="2606.25;56.25" Name="textBoxInformation1" StyleName="Normal" ExportAsPictureInXaml="false" TextAlign="MiddleLeft"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="57" Color="51, 51, 51" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="58"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="59" Expression="GetData(&quot;ReportTables.TwelveMonthDailyMeanDataTable.WorkingSignalInformation&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="60" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="61" Location="150;468.75" Size="2606.25;56.25" Name="textBoxInformation2" StyleName="Normal" ExportAsPictureInXaml="false" TextAlign="MiddleLeft"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="62" Color="51, 51, 51" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="63"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="64" Expression="GetData(&quot;ReportTables.TwelveMonthDailyMeanDataTable.HydatSignalInformation&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="65" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="66" Location="2737.5;431.25" Size="393.75;56.25" Name="textBoxUnitInformation" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="67" Color="51, 51, 51" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="68"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="69" Expression="GetData(&quot;ReportTables.SourceData.UnitInformation&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="70" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item></Controls></Item><Item type="PerpetuumSoft.Reporting.DOM.DataBand" id="71" Location="0;712.5" Size="3300;796.875" Name="dataBand1" ColumnsGap="0" ColumnsCount="1" DataSource="ReportTables.GroupBy"><Sort type="PerpetuumSoft.Reporting.DOM.DataBandSortCollection" id="72" /><Controls type="PerpetuumSoft.Reporting.DOM.ReportControlCollection" id="73"><Item type="PerpetuumSoft.Reporting.DOM.DataBand" id="74" Location="0;56.25" Size="3300;468.75" Name="dataBand1_1" ColumnsGap="0" DataSource="ReportTables.GroupBy.GroupByDailyStatistic"><Sort type="PerpetuumSoft.Reporting.DOM.DataBandSortCollection" id="75" /><Controls type="PerpetuumSoft.Reporting.DOM.ReportControlCollection" id="76"><Item type="PerpetuumSoft.Reporting.DOM.Header" id="77" Location="0;56.25" NewPageBefore="true" Size="3300;56.25" Name="header1" StyleName="Header1"><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="78" /><Controls type="PerpetuumSoft.Reporting.DOM.ReportControlCollection" id="79"><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="80" Location="150;0" Size="393.75;56.25" Name="textBox62" StyleName="Header1" ExportAsPictureInXaml="false" TextAlign="MiddleLeft"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="81" Color="51, 51, 51" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="82"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="83" Expression="(GroupBy == &quot;Year&quot;) ? Resources.Year + &quot;:  &quot; + GetData(&quot;ReportTables.GroupBy.Year&quot;).ToString() : &#xD;&#xA;  ((DateTimeOffset)GetData(&quot;ReportTables.GroupBy.StartTime&quot;)).ToString(&quot;MMM yyyy&quot;) + &quot; - &quot; + &#xD;&#xA;  ((DateTimeOffset)GetData(&quot;ReportTables.GroupBy.EndTime&quot;)).ToString(&quot;MMM yyyy&quot;)&#xD;&#xA;" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="84" Size="7.5" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item></Controls><Aggregates type="PerpetuumSoft.Reporting.DOM.AggregateCollection" id="85" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Header" id="86" Location="0;168.75" CanGrow="true" Size="3300;59.055118560791016" CanShrink="true" Name="header1_1" StyleName="HeaderFooter3"><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="87" /><Controls type="PerpetuumSoft.Reporting.DOM.ReportControlCollection" id="88"><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="89" Location="150;0" Size="75;59.055118560791016" CanShrink="true" CanGrow="true" Name="header1_1_TimeSeries1_GroupBy_GroupByDailyAggregates_Day" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="MiddleLeft"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="90" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="91" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="54" All="1 Solid 204, 204, 204" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="92"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="93" Expression="Resources.Day" PropertyName="Value" /></DataBindings><RawValue type="System.String" id="94" value="Day" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="95" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="96" Location="225;0" Size="243.75;59.055118560791016" CanShrink="true" CanGrow="true" Name="header1_1_TimeSeries1_GroupBy_GroupByDailyAggregates_Jan" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="MiddleCenter"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="97" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="98" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="54" All="1 Solid 204, 204, 204" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="99"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="100" Expression="GetData(&quot;ReportTables.Headers.Month1&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="101" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="102" Location="468.75;0" Size="243.75;59.055118560791016" CanShrink="true" CanGrow="true" Name="header1_1_TimeSeries1_GroupBy_GroupByDailyAggregates_Feb" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="MiddleCenter"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="103" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="104" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="54" All="1 Solid 204, 204, 204" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="105"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="106" Expression="GetData(&quot;ReportTables.Headers.Month2&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="107" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="108" Location="712.5;0" Size="243.75;59.055118560791016" CanShrink="true" CanGrow="true" Name="header1_1_TimeSeries1_GroupBy_GroupByDailyAggregates_Mar" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="MiddleCenter"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="109" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="110" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="54" All="1 Solid 204, 204, 204" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="111"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="112" Expression="GetData(&quot;ReportTables.Headers.Month3&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="113" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="114" Location="956.25;0" Size="243.75;59.055118560791016" CanShrink="true" CanGrow="true" Name="header1_1_TimeSeries1_GroupBy_GroupByDailyAggregates_Apr" GrowToBottom="true" StyleName="HeaderFooter3" ExportAsPictureInXaml="false" TextAlign="MiddleCenter"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="115" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="116" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="54" All="1 Solid 204, 204, 204" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="117"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="118" Expression="GetData(&quot;ReportTables.Headers.Month4&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="119" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="120" Location="1200;0" Size="243.75;59.055118560791016" CanShrink="true" CanGrow="true" Name="header1_1_TimeSeries1_GroupBy_GroupByDailyAggregates_May" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="MiddleCenter"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="121" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="122" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="54" All="1 Solid 204, 204, 204" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="123"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="124" Expression="GetData(&quot;ReportTables.Headers.Month5&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="125" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="126" Location="1443.75;0" Size="243.75;59.055118560791016" CanShrink="true" CanGrow="true" Name="header1_1_TimeSeries1_GroupBy_GroupByDailyAggregates_Jun" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="MiddleCenter"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="127" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="128" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="54" All="1 Solid 204, 204, 204" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="129"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="130" Expression="GetData(&quot;ReportTables.Headers.Month6&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="131" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="132" Location="1687.5;0" Size="243.75;59.055118560791016" CanShrink="true" CanGrow="true" Name="header1_1_TimeSeries1_GroupBy_GroupByDailyAggregates_Jul" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="MiddleCenter"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="133" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="134" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="54" All="1 Solid 204, 204, 204" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="135"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="136" Expression="GetData(&quot;ReportTables.Headers.Month7&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="137" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="138" Location="1931.25;0" Size="243.75;59.055118560791016" CanShrink="true" CanGrow="true" Name="header1_1_TimeSeries1_GroupBy_GroupByDailyAggregates_Aug" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="MiddleCenter"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="139" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="140" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="54" All="1 Solid 204, 204, 204" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="141"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="142" Expression="GetData(&quot;ReportTables.Headers.Month8&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="143" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="144" Location="2175;0" Size="243.75;59.055118560791016" CanShrink="true" CanGrow="true" Name="header1_1_TimeSeries1_GroupBy_GroupByDailyAggregates_Sep" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="MiddleCenter"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="145" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="146" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="54" All="1 Solid 204, 204, 204" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="147"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="148" Expression="GetData(&quot;ReportTables.Headers.Month9&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="149" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="150" Location="2418.75;0" Size="243.75;59.055118560791016" CanShrink="true" CanGrow="true" Name="header1_1_TimeSeries1_GroupBy_GroupByDailyAggregates_Oct" GrowToBottom="true" StyleName="HeaderFooter3" ExportAsPictureInXaml="false" TextAlign="MiddleCenter"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="151" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="152" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="54" All="1 Solid 204, 204, 204" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="153"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="154" Expression="GetData(&quot;ReportTables.Headers.Month10&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="155" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="156" Location="2662.5;0" Size="243.75;59.055118560791016" CanShrink="true" CanGrow="true" Name="header1_1_TimeSeries1_GroupBy_GroupByDailyAggregates_Nov" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="MiddleCenter"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="157" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="158" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="54" All="1 Solid 204, 204, 204" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="159"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="160" Expression="GetData(&quot;ReportTables.Headers.Month11&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="161" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="162" Location="2906.25;0" Size="243.75;59.055118560791016" CanShrink="true" CanGrow="true" Name="header1_1_TimeSeries1_GroupBy_GroupByDailyAggregates_Dec" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="MiddleCenter"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="163" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="164" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="54" All="1 Solid 204, 204, 204" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="165"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="166" Expression="GetData(&quot;ReportTables.Headers.Month12&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="167" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item></Controls><Aggregates type="PerpetuumSoft.Reporting.DOM.AggregateCollection" id="168" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Detail" id="169" Location="0;281.25" CanGrow="true" Size="3300;56.25" CanShrink="true" Name="detail1_1"><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="170" /><Controls type="PerpetuumSoft.Reporting.DOM.ReportControlCollection" id="171"><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="172" Location="150;0" Size="75;59.055118560791016" CanShrink="true" CanGrow="true" Name="textBox60" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="MiddleCenter"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="173" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="54" All="1 Solid 204, 204, 204" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="174"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="175" Expression="dataBand1_1[&quot;Day&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="176" Size="7.5" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="177" Location="225;0" Size="243.75;59.055118560791016" CanShrink="true" Margins="0; 0; 0; 60" CanGrow="true" Name="textBox61" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="178" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="54" All="1 Solid 204, 204, 204" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="179"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="180" Expression="dataBand1_1[&quot;Month1&quot;]" PropertyName="Value" /><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="181" Expression="GetFont(1)" PropertyName="Font" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="182" Size="7.5" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="183" Location="393.75;0" Size="75;59.055118560791016" CanShrink="true" Margins="0; 0; 15; 0" CanGrow="true" Name="textBox33" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="TopLeft"><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="184"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="185" Expression="dataBand1_1[&quot;Grade1&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="186" Size="6" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="187" Location="468.75;0" Size="243.75;59.055118560791016" CanShrink="true" Margins="0; 0; 0; 60" CanGrow="true" Name="textBox47" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="188" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="54" All="1 Solid 204, 204, 204" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="189"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="190" Expression="dataBand1_1[&quot;Month2&quot;]" PropertyName="Value" /><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="191" Expression="GetFont(2)" PropertyName="Font" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="192" Size="7.5" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="193" Location="637.5;0" Size="75;59.055118560791016" CanShrink="true" Margins="0; 0; 15; 0" CanGrow="true" Name="textBox34" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="TopLeft"><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="194"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="195" Expression="dataBand1_1[&quot;Grade2&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="196" Size="6" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="197" Location="712.5;0" Size="243.75;59.055118560791016" CanShrink="true" Margins="0; 0; 0; 60" CanGrow="true" Name="textBox48" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="198" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="54" All="1 Solid 204, 204, 204" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="199"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="200" Expression="dataBand1_1[&quot;Month3&quot;]" PropertyName="Value" /><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="201" Expression="GetFont(3)" PropertyName="Font" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="202" Size="7.5" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="203" Location="881.25;0" Size="75;59.055118560791016" CanShrink="true" Margins="0; 0; 15; 0" CanGrow="true" Name="textBox35" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="TopLeft"><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="204"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="205" Expression="dataBand1_1[&quot;Grade3&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="206" Size="6" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="207" Location="956.25;0" Size="243.75;59.055118560791016" CanShrink="true" Margins="0; 0; 0; 60" CanGrow="true" Name="textBox49" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="208" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="54" All="1 Solid 204, 204, 204" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="209"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="210" Expression="dataBand1_1[&quot;Month4&quot;]" PropertyName="Value" /><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="211" Expression="GetFont(4)" PropertyName="Font" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="212" Size="7.5" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="213" Location="1125;0" Size="75;59.055118560791016" CanShrink="true" Margins="0; 0; 15; 0" CanGrow="true" Name="textBox36" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="TopLeft"><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="214"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="215" Expression="dataBand1_1[&quot;Grade4&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="216" Size="6" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="217" Location="1200;0" Size="243.75;59.055118560791016" CanShrink="true" Margins="0; 0; 0; 60" CanGrow="true" Name="textBox50" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="218" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="54" All="1 Solid 204, 204, 204" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="219"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="220" Expression="dataBand1_1[&quot;Month5&quot;]" PropertyName="Value" /><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="221" Expression="GetFont(5)" PropertyName="Font" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="222" Size="7.5" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="223" Location="1368.75;0" Size="75;59.055118560791016" CanShrink="true" Margins="0; 0; 15; 0" CanGrow="true" Name="textBox37" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="TopLeft"><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="224"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="225" Expression="dataBand1_1[&quot;Grade5&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="226" Size="6" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="227" Location="1443.75;0" Size="243.75;59.055118560791016" CanShrink="true" Margins="0; 0; 0; 60" CanGrow="true" Name="textBox51" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="228" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="54" All="1 Solid 204, 204, 204" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="229"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="230" Expression="dataBand1_1[&quot;Month6&quot;]" PropertyName="Value" /><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="231" Expression="GetFont(6)" PropertyName="Font" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="232" Size="7.5" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="233" Location="1612.5;0" Size="75;59.055118560791016" CanShrink="true" Margins="0; 0; 15; 0" CanGrow="true" Name="textBox38" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="TopLeft"><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="234"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="235" Expression="dataBand1_1[&quot;Grade6&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="236" Size="6" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="237" Location="1687.5;0" Size="243.75;59.055118560791016" CanShrink="true" Margins="0; 0; 0; 60" CanGrow="true" Name="textBox52" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="238" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="54" All="1 Solid 204, 204, 204" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="239"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="240" Expression="dataBand1_1[&quot;Month7&quot;]" PropertyName="Value" /><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="241" Expression="GetFont(7)" PropertyName="Font" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="242" Size="7.5" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="243" Location="1856.25;0" Size="75;59.055118560791016" CanShrink="true" Margins="0; 0; 15; 0" CanGrow="true" Name="textBox39" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="TopLeft"><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="244"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="245" Expression="dataBand1_1[&quot;Grade7&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="246" Size="6" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="247" Location="1931.25;0" Size="243.75;59.055118560791016" CanShrink="true" Margins="0; 0; 0; 60" CanGrow="true" Name="textBox53" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="248" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="54" All="1 Solid 204, 204, 204" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="249"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="250" Expression="dataBand1_1[&quot;Month8&quot;]" PropertyName="Value" /><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="251" Expression="GetFont(8)" PropertyName="Font" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="252" Size="7.5" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="253" Location="2100;0" Size="75;59.055118560791016" CanShrink="true" Margins="0; 0; 15; 0" CanGrow="true" Name="textBox40" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="TopLeft"><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="254"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="255" Expression="dataBand1_1[&quot;Grade8&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="256" Size="6" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="257" Location="2175;0" Size="243.75;59.055118560791016" CanShrink="true" Margins="0; 0; 0; 60" CanGrow="true" Name="textBox54" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="258" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="54" All="1 Solid 204, 204, 204" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="259"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="260" Expression="dataBand1_1[&quot;Month9&quot;]" PropertyName="Value" /><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="261" Expression="GetFont(9)" PropertyName="Font" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="262" Size="7.5" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="263" Location="2343.75;0" Size="75;59.055118560791016" CanShrink="true" Margins="0; 0; 15; 0" CanGrow="true" Name="textBox41" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="TopLeft"><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="264"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="265" Expression="dataBand1_1[&quot;Grade9&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="266" Size="6" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="267" Location="2418.75;0" Size="243.75;59.055118560791016" CanShrink="true" Margins="0; 0; 0; 60" CanGrow="true" Name="textBox56" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="268" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="54" All="1 Solid 204, 204, 204" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="269"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="270" Expression="dataBand1_1[&quot;Month10&quot;]" PropertyName="Value" /><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="271" Expression="GetFont(10)" PropertyName="Font" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="272" Size="7.5" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="273" Location="2587.5;0" Size="75;59.055118560791016" CanShrink="true" Margins="0; 0; 15; 0" CanGrow="true" Name="textBox42" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="TopLeft"><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="274"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="275" Expression="dataBand1_1[&quot;Grade10&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="276" Size="6" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="277" Location="2662.5;0" Size="243.75;59.055118560791016" CanShrink="true" Margins="0; 0; 0; 60" CanGrow="true" Name="textBox59" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="278" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="54" All="1 Solid 204, 204, 204" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="279"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="280" Expression="dataBand1_1[&quot;Month11&quot;]" PropertyName="Value" /><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="281" Expression="GetFont(11)" PropertyName="Font" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="282" Size="7.5" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="283" Location="2831.25;0" Size="75;59.055118560791016" CanShrink="true" Margins="0; 0; 15; 0" CanGrow="true" Name="textBox22" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="TopLeft"><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="284"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="285" Expression="dataBand1_1[&quot;Grade11&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="286" Size="6" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="287" Location="2906.25;0" Size="243.75;59.055118560791016" CanShrink="true" Margins="0; 0; 0; 60" CanGrow="true" Name="textBox58" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="288" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="54" All="1 Solid 204, 204, 204" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="289"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="290" Expression="dataBand1_1[&quot;Month12&quot;]" PropertyName="Value" /><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="291" Expression="GetFont(12)" PropertyName="Font" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="292" Size="7.5" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="293" Location="3075;0" Size="75;59.055118560791016" CanShrink="true" Margins="0; 0; 15; 0" CanGrow="true" Name="textBox23" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="TopLeft"><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="294"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="295" Expression="dataBand1_1[&quot;Grade12&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="296" Size="6" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item></Controls><Aggregates type="PerpetuumSoft.Reporting.DOM.AggregateCollection" id="297" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Footer" id="298" Location="0;393.75" Size="3300;18.75" Name="footer1" StyleName="Header1"><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="299" /><Controls type="PerpetuumSoft.Reporting.DOM.ReportControlCollection" id="300" /><Aggregates type="PerpetuumSoft.Reporting.DOM.AggregateCollection" id="301" /></Item></Controls><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="302" /><Totals type="PerpetuumSoft.Reporting.DOM.DataBandTotalCollection" id="303"><Item type="PerpetuumSoft.Reporting.DOM.DataBandTotal" id="304" Expression="(dataBand1_1[&quot;Col1&quot;] is double)? dataBand1_1[&quot;Col1&quot;] : double.MaxValue" Name="Min1"><AggregateFunction type="PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory+Min" id="305" /></Item><Item type="PerpetuumSoft.Reporting.DOM.DataBandTotal" id="306" Expression="(dataBand1_1[&quot;Col1&quot;] is double)? dataBand1_1[&quot;Col1&quot;] : double.MinValue" Name="Max1"><AggregateFunction type="PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory+Max" id="307" /></Item><Item type="PerpetuumSoft.Reporting.DOM.DataBandTotal" id="308" Expression="(dataBand1_1[&quot;Col2&quot;] is double)? dataBand1_1[&quot;Col2&quot;] : double.MaxValue" Name="Min2"><AggregateFunction type="PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory+Min" id="305" /></Item><Item type="PerpetuumSoft.Reporting.DOM.DataBandTotal" id="309" Expression="(dataBand1_1[&quot;Col2&quot;] is double)? dataBand1_1[&quot;Col2&quot;] : double.MinValue" Name="Max2"><AggregateFunction type="PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory+Max" id="307" /></Item><Item type="PerpetuumSoft.Reporting.DOM.DataBandTotal" id="310" Expression="(dataBand1_1[&quot;Col3&quot;] is double)? dataBand1_1[&quot;Col3&quot;] : double.MaxValue" Name="Min3"><AggregateFunction type="PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory+Min" id="305" /></Item><Item type="PerpetuumSoft.Reporting.DOM.DataBandTotal" id="311" Expression="(dataBand1_1[&quot;Col3&quot;] is double)? dataBand1_1[&quot;Col3&quot;] : double.MinValue" Name="Max3"><AggregateFunction type="PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory+Max" id="307" /></Item><Item type="PerpetuumSoft.Reporting.DOM.DataBandTotal" id="312" Expression="(dataBand1_1[&quot;Col4&quot;] is double)? dataBand1_1[&quot;Col4&quot;] : double.MaxValue" Name="Min4"><AggregateFunction type="PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory+Min" id="305" /></Item><Item type="PerpetuumSoft.Reporting.DOM.DataBandTotal" id="313" Expression="(dataBand1_1[&quot;Col4&quot;] is double)? dataBand1_1[&quot;Col4&quot;] : double.MinValue" Name="Max4"><AggregateFunction type="PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory+Max" id="307" /></Item><Item type="PerpetuumSoft.Reporting.DOM.DataBandTotal" id="314" Expression="(dataBand1_1[&quot;Col5&quot;] is double)? dataBand1_1[&quot;Col5&quot;] : double.MaxValue" Name="Min5"><AggregateFunction type="PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory+Min" id="305" /></Item><Item type="PerpetuumSoft.Reporting.DOM.DataBandTotal" id="315" Expression="(dataBand1_1[&quot;Col5&quot;] is double)? dataBand1_1[&quot;Col5&quot;] : double.MinValue" Name="Max5"><AggregateFunction type="PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory+Max" id="307" /></Item><Item type="PerpetuumSoft.Reporting.DOM.DataBandTotal" id="316" Expression="(dataBand1_1[&quot;Col6&quot;] is double)? dataBand1_1[&quot;Col6&quot;] : double.MaxValue" Name="Min6"><AggregateFunction type="PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory+Min" id="305" /></Item><Item type="PerpetuumSoft.Reporting.DOM.DataBandTotal" id="317" Expression="(dataBand1_1[&quot;Col6&quot;] is double)? dataBand1_1[&quot;Col6&quot;] : double.MinValue" Name="Max6"><AggregateFunction type="PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory+Max" id="307" /></Item><Item type="PerpetuumSoft.Reporting.DOM.DataBandTotal" id="318" Expression="(dataBand1_1[&quot;Col7&quot;] is double)? dataBand1_1[&quot;Col7&quot;] : double.MaxValue" Name="Min7"><AggregateFunction type="PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory+Min" id="305" /></Item><Item type="PerpetuumSoft.Reporting.DOM.DataBandTotal" id="319" Expression="(dataBand1_1[&quot;Col7&quot;] is double)? dataBand1_1[&quot;Col7&quot;] : double.MinValue" Name="Max7"><AggregateFunction type="PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory+Max" id="307" /></Item><Item type="PerpetuumSoft.Reporting.DOM.DataBandTotal" id="320" Expression="(dataBand1_1[&quot;Col8&quot;] is double)? dataBand1_1[&quot;Col8&quot;] : double.MaxValue" Name="Min8"><AggregateFunction type="PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory+Min" id="305" /></Item><Item type="PerpetuumSoft.Reporting.DOM.DataBandTotal" id="321" Expression="(dataBand1_1[&quot;Col8&quot;] is double)? dataBand1_1[&quot;Col8&quot;] : double.MinValue" Name="Max8"><AggregateFunction type="PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory+Max" id="307" /></Item><Item type="PerpetuumSoft.Reporting.DOM.DataBandTotal" id="322" Expression="(dataBand1_1[&quot;Col9&quot;] is double)? dataBand1_1[&quot;Col9&quot;] : double.MaxValue" Name="Min9"><AggregateFunction type="PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory+Min" id="305" /></Item><Item type="PerpetuumSoft.Reporting.DOM.DataBandTotal" id="323" Expression="(dataBand1_1[&quot;Col9&quot;] is double)? dataBand1_1[&quot;Col9&quot;] : double.MinValue" Name="Max9"><AggregateFunction type="PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory+Max" id="307" /></Item><Item type="PerpetuumSoft.Reporting.DOM.DataBandTotal" id="324" Expression="(dataBand1_1[&quot;Col10&quot;] is double)? dataBand1_1[&quot;Col10&quot;] : double.MaxValue" Name="Min10"><AggregateFunction type="PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory+Min" id="305" /></Item><Item type="PerpetuumSoft.Reporting.DOM.DataBandTotal" id="325" Expression="(dataBand1_1[&quot;Col10&quot;] is double)? dataBand1_1[&quot;Col10&quot;] : double.MinValue" Name="Max10"><AggregateFunction type="PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory+Max" id="307" /></Item><Item type="PerpetuumSoft.Reporting.DOM.DataBandTotal" id="326" Expression="(dataBand1_1[&quot;Col11&quot;] is double)? dataBand1_1[&quot;Col11&quot;] : double.MaxValue" Name="Min11"><AggregateFunction type="PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory+Min" id="305" /></Item><Item type="PerpetuumSoft.Reporting.DOM.DataBandTotal" id="327" Expression="(dataBand1_1[&quot;Col11&quot;] is double)? dataBand1_1[&quot;Col11&quot;] : double.MinValue" Name="Max11"><AggregateFunction type="PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory+Max" id="307" /></Item><Item type="PerpetuumSoft.Reporting.DOM.DataBandTotal" id="328" Expression="(dataBand1_1[&quot;Col12&quot;] is double)? dataBand1_1[&quot;Col12&quot;] : double.MaxValue" Name="Min12"><AggregateFunction type="PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory+Min" id="305" /></Item><Item type="PerpetuumSoft.Reporting.DOM.DataBandTotal" id="329" Expression="(dataBand1_1[&quot;Col12&quot;] is double)? dataBand1_1[&quot;Col12&quot;] : double.MinValue" Name="Max12"><AggregateFunction type="PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory+Max" id="307" /></Item><Item type="PerpetuumSoft.Reporting.DOM.DataBandTotal" id="330" Expression="(dataBand1_1[&quot;Col1&quot;] is double)? dataBand1_1[&quot;Col1&quot;] : 0" Name="Total1"><AggregateFunction type="PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory+Sum" id="331" /></Item><Item type="PerpetuumSoft.Reporting.DOM.DataBandTotal" id="332" Expression="(dataBand1_1[&quot;Col2&quot;] is double)? dataBand1_1[&quot;Col2&quot;] : 0" Name="Total2"><AggregateFunction type="PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory+Sum" id="331" /></Item><Item type="PerpetuumSoft.Reporting.DOM.DataBandTotal" id="333" Expression="(dataBand1_1[&quot;Col3&quot;] is double)? dataBand1_1[&quot;Col3&quot;] : 0" Name="Total3"><AggregateFunction type="PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory+Sum" id="331" /></Item><Item type="PerpetuumSoft.Reporting.DOM.DataBandTotal" id="334" Expression="(dataBand1_1[&quot;Col4&quot;] is double)? dataBand1_1[&quot;Col4&quot;] : 0" Name="Total4"><AggregateFunction type="PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory+Sum" id="331" /></Item><Item type="PerpetuumSoft.Reporting.DOM.DataBandTotal" id="335" Expression="(dataBand1_1[&quot;Col5&quot;] is double)? dataBand1_1[&quot;Col5&quot;] : 0" Name="Total5"><AggregateFunction type="PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory+Sum" id="331" /></Item><Item type="PerpetuumSoft.Reporting.DOM.DataBandTotal" id="336" Expression="(dataBand1_1[&quot;Col6&quot;] is double)? dataBand1_1[&quot;Col6&quot;] : 0" Name="Total6"><AggregateFunction type="PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory+Sum" id="331" /></Item><Item type="PerpetuumSoft.Reporting.DOM.DataBandTotal" id="337" Expression="(dataBand1_1[&quot;Col7&quot;] is double)? dataBand1_1[&quot;Col7&quot;] : 0" Name="Total7"><AggregateFunction type="PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory+Sum" id="331" /></Item><Item type="PerpetuumSoft.Reporting.DOM.DataBandTotal" id="338" Expression="(dataBand1_1[&quot;Col8&quot;] is double)? dataBand1_1[&quot;Col8&quot;] : 0" Name="Total8"><AggregateFunction type="PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory+Sum" id="331" /></Item><Item type="PerpetuumSoft.Reporting.DOM.DataBandTotal" id="339" Expression="(dataBand1_1[&quot;Col9&quot;] is double)? dataBand1_1[&quot;Col9&quot;] : 0" Name="Total9"><AggregateFunction type="PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory+Sum" id="331" /></Item><Item type="PerpetuumSoft.Reporting.DOM.DataBandTotal" id="340" Expression="(dataBand1_1[&quot;Col10&quot;] is double)? dataBand1_1[&quot;Col10&quot;] : 0" Name="Total10"><AggregateFunction type="PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory+Sum" id="331" /></Item><Item type="PerpetuumSoft.Reporting.DOM.DataBandTotal" id="341" Expression="(dataBand1_1[&quot;Col11&quot;] is double)? dataBand1_1[&quot;Col11&quot;] : 0" Name="Total11"><AggregateFunction type="PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory+Sum" id="331" /></Item><Item type="PerpetuumSoft.Reporting.DOM.DataBandTotal" id="342" Expression="(dataBand1_1[&quot;Col12&quot;] is double)? dataBand1_1[&quot;Col12&quot;] : 0" Name="Total12"><AggregateFunction type="PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory+Sum" id="331" /></Item><Item type="PerpetuumSoft.Reporting.DOM.DataBandTotal" id="343" Expression="(dataBand1_1[&quot;Col1&quot;] is double)? 1 : 0" Name="Count1"><AggregateFunction type="PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory+Sum" id="331" /></Item><Item type="PerpetuumSoft.Reporting.DOM.DataBandTotal" id="344" Expression="(dataBand1_1[&quot;Col2&quot;] is double)? 1 : 0" Name="Count2"><AggregateFunction type="PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory+Sum" id="331" /></Item><Item type="PerpetuumSoft.Reporting.DOM.DataBandTotal" id="345" Expression="(dataBand1_1[&quot;Col3&quot;] is double)? 1 : 0" Name="Count3"><AggregateFunction type="PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory+Sum" id="331" /></Item><Item type="PerpetuumSoft.Reporting.DOM.DataBandTotal" id="346" Expression="(dataBand1_1[&quot;Col4&quot;] is double)? 1 : 0" Name="Count4"><AggregateFunction type="PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory+Sum" id="331" /></Item><Item type="PerpetuumSoft.Reporting.DOM.DataBandTotal" id="347" Expression="(dataBand1_1[&quot;Col5&quot;] is double)? 1 : 0" Name="Count5"><AggregateFunction type="PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory+Sum" id="331" /></Item><Item type="PerpetuumSoft.Reporting.DOM.DataBandTotal" id="348" Expression="(dataBand1_1[&quot;Col6&quot;] is double)? 1 : 0" Name="Count6"><AggregateFunction type="PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory+Sum" id="331" /></Item><Item type="PerpetuumSoft.Reporting.DOM.DataBandTotal" id="349" Expression="(dataBand1_1[&quot;Col7&quot;] is double)? 1 : 0" Name="Count7"><AggregateFunction type="PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory+Sum" id="331" /></Item><Item type="PerpetuumSoft.Reporting.DOM.DataBandTotal" id="350" Expression="(dataBand1_1[&quot;Col8&quot;] is double)? 1 : 0" Name="Count8"><AggregateFunction type="PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory+Sum" id="331" /></Item><Item type="PerpetuumSoft.Reporting.DOM.DataBandTotal" id="351" Expression="(dataBand1_1[&quot;Col9&quot;] is double)? 1 : 0" Name="Count9"><AggregateFunction type="PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory+Sum" id="331" /></Item><Item type="PerpetuumSoft.Reporting.DOM.DataBandTotal" id="352" Expression="(dataBand1_1[&quot;Col10&quot;] is double)? 1 : 0" Name="Count10"><AggregateFunction type="PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory+Sum" id="331" /></Item><Item type="PerpetuumSoft.Reporting.DOM.DataBandTotal" id="353" Expression="(dataBand1_1[&quot;Col11&quot;] is double)? 1 : 0" Name="Count11"><AggregateFunction type="PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory+Sum" id="331" /></Item><Item type="PerpetuumSoft.Reporting.DOM.DataBandTotal" id="354" Expression="(dataBand1_1[&quot;Col12&quot;] is double)? 1 : 0" Name="Count12"><AggregateFunction type="PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory+Sum" id="331" /></Item></Totals><Aggregates type="PerpetuumSoft.Reporting.DOM.AggregateCollection" id="355" /></Item><Item type="PerpetuumSoft.Reporting.DOM.DataBand" id="356" Location="0;581.25" Size="3300;159.375" Name="dataBand1_2" ColumnsGap="0" DataSource="ReportTables.GroupBy.GroupByMonthly"><Sort type="PerpetuumSoft.Reporting.DOM.DataBandSortCollection" id="357" /><Controls type="PerpetuumSoft.Reporting.DOM.ReportControlCollection" id="358"><Item type="PerpetuumSoft.Reporting.DOM.Detail" id="359" Location="0;56.25" Size="3300;46.875" CanShrink="true" Name="detail1_2"><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="360" /><Controls type="PerpetuumSoft.Reporting.DOM.ReportControlCollection" id="361"><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="362" Location="150;0" Size="75;46.875" CanShrink="true" Name="detail1_2_TimeSeries1_GroupBy_GroupByMonthlyAggregates_Aggregate" GrowToBottom="true" StyleName="Normal" StringTrimming="None" ExportAsPictureInXaml="false" TextAlign="MiddleCenter"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="363" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="54" All="1 Solid 204, 204, 204" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="364"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="365" Expression="dataBand1_2[&quot;Statistic&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="366" Size="5" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="367" Location="225;0" Size="243.75;46.875" CanShrink="true" Margins="0; 0; 0; 60" Name="detail1_2_TimeSeries1_GroupBy_GroupByMonthlyAggregates_Jan" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="368" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="54" All="1 Solid 204, 204, 204" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="369"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="370" Expression="dataBand1_2[&quot;Month1&quot;]" PropertyName="Value" /><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="371" Expression="GetMonthFont(1)" PropertyName="Font" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="372" Size="7.5" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="373" Location="468.75;0" Size="243.75;46.875" CanShrink="true" Margins="0; 0; 0; 60" Name="detail1_2_TimeSeries1_GroupBy_GroupByMonthlyAggregates_Feb" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="374" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="54" All="1 Solid 204, 204, 204" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="375"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="376" Expression="dataBand1_2[&quot;Month2&quot;]" PropertyName="Value" /><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="377" Expression="GetMonthFont(2)" PropertyName="Font" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="378" Size="7.5" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="379" Location="712.5;0" Size="243.75;46.875" CanShrink="true" Margins="0; 0; 0; 60" Name="detail1_2_TimeSeries1_GroupBy_GroupByMonthlyAggregates_Mar" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="380" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="54" All="1 Solid 204, 204, 204" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="381"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="382" Expression="dataBand1_2[&quot;Month3&quot;]" PropertyName="Value" /><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="383" Expression="GetMonthFont(3)" PropertyName="Font" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="384" Size="7.5" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="385" Location="956.25;0" Size="243.75;46.875" CanShrink="true" Margins="0; 0; 0; 60" Name="detail1_2_TimeSeries1_GroupBy_GroupByMonthlyAggregates_Apr" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="386" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="54" All="1 Solid 204, 204, 204" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="387"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="388" Expression="dataBand1_2[&quot;Month4&quot;]" PropertyName="Value" /><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="389" Expression="GetMonthFont(4)" PropertyName="Font" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="390" Size="7.5" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="391" Location="1200;0" Size="243.75;46.875" CanShrink="true" Margins="0; 0; 0; 60" Name="detail1_2_TimeSeries1_GroupBy_GroupByMonthlyAggregates_May" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="392" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="54" All="1 Solid 204, 204, 204" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="393"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="394" Expression="dataBand1_2[&quot;Month5&quot;]" PropertyName="Value" /><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="395" Expression="GetMonthFont(5)" PropertyName="Font" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="396" Size="7.5" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="397" Location="1443.75;0" Size="243.75;46.875" CanShrink="true" Margins="0; 0; 0; 60" Name="detail1_2_TimeSeries1_GroupBy_GroupByMonthlyAggregates_Jun" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="398" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="54" All="1 Solid 204, 204, 204" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="399"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="400" Expression="dataBand1_2[&quot;Month6&quot;]" PropertyName="Value" /><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="401" Expression="GetMonthFont(6)" PropertyName="Font" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="402" Size="7.5" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="403" Location="1687.5;0" Size="243.75;46.875" CanShrink="true" Margins="0; 0; 0; 60" Name="detail1_2_TimeSeries1_GroupBy_GroupByMonthlyAggregates_Jul" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="404" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="54" All="1 Solid 204, 204, 204" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="405"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="406" Expression="dataBand1_2[&quot;Month7&quot;]" PropertyName="Value" /><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="407" Expression="GetMonthFont(7)" PropertyName="Font" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="408" Size="7.5" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="409" Location="1931.25;0" Size="243.75;46.875" CanShrink="true" Margins="0; 0; 0; 60" Name="detail1_2_TimeSeries1_GroupBy_GroupByMonthlyAggregates_Aug" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="410" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="54" All="1 Solid 204, 204, 204" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="411"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="412" Expression="dataBand1_2[&quot;Month8&quot;]" PropertyName="Value" /><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="413" Expression="GetMonthFont(8)" PropertyName="Font" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="414" Size="7.5" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="415" Location="2175;0" Size="243.75;46.875" CanShrink="true" Margins="0; 0; 0; 60" Name="detail1_2_TimeSeries1_GroupBy_GroupByMonthlyAggregates_Sep" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="416" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="54" All="1 Solid 204, 204, 204" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="417"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="418" Expression="dataBand1_2[&quot;Month9&quot;]" PropertyName="Value" /><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="419" Expression="GetMonthFont(9)" PropertyName="Font" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="420" Size="7.5" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="421" Location="2418.75;0" Size="243.75;46.875" CanShrink="true" Margins="0; 0; 0; 60" Name="detail1_2_TimeSeries1_GroupBy_GroupByMonthlyAggregates_Oct" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="422" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="54" All="1 Solid 204, 204, 204" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="423"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="424" Expression="dataBand1_2[&quot;Month10&quot;]" PropertyName="Value" /><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="425" Expression="GetMonthFont(10)" PropertyName="Font" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="426" Size="7.5" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="427" Location="2662.5;0" Size="243.75;46.875" CanShrink="true" Margins="0; 0; 0; 60" Name="detail1_2_TimeSeries1_GroupBy_GroupByMonthlyAggregates_Nov" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="428" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="54" All="1 Solid 204, 204, 204" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="429"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="430" Expression="dataBand1_2[&quot;Month11&quot;]" PropertyName="Value" /><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="431" Expression="GetMonthFont(11)" PropertyName="Font" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="432" Size="7.5" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="433" Location="2906.25;0" Size="243.75;46.875" CanShrink="true" Margins="0; 0; 0; 60" Name="detail1_2_TimeSeries1_GroupBy_GroupByMonthlyAggregates_Dec" GrowToBottom="true" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="434" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="54" All="1 Solid 204, 204, 204" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="435"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="436" Expression="dataBand1_2[&quot;Month12&quot;]" PropertyName="Value" /><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="437" Expression="GetMonthFont(12)" PropertyName="Font" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="438" Size="7.5" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item></Controls><Aggregates type="PerpetuumSoft.Reporting.DOM.AggregateCollection" id="439" /></Item></Controls><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="440" /><Totals type="PerpetuumSoft.Reporting.DOM.DataBandTotalCollection" id="441" /><Aggregates type="PerpetuumSoft.Reporting.DOM.AggregateCollection" id="442" /></Item></Controls><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="443" /><Totals type="PerpetuumSoft.Reporting.DOM.DataBandTotalCollection" id="444" /><Aggregates type="PerpetuumSoft.Reporting.DOM.AggregateCollection" id="445" /></Item><Item type="PerpetuumSoft.Reporting.DOM.PageFooter" id="446" StyleName="PageFooter" Location="0;1575" Name="pageFooter" Size="3300;150"><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="447" /><Controls type="PerpetuumSoft.Reporting.DOM.ReportControlCollection" id="448"><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="449" Location="0;0" Size="3300;29.528125762939453" Name="textBoxPageFooterLine" ExportAsPictureInXaml="false"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="450" Color="110, 112, 110" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="27" TopLine="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="451" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="452" Location="168.75;0" Size="2981.25;131.25" CanGrow="true" Name="textBoxPageFooter1" StyleName="Normal" ExportAsPictureInXaml="false" TextAlign="BottomLeft"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="453" Color="110, 112, 110" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="454"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="455" Expression="GetData(&quot;ReportTables.ReportData.FooterDisclaimer&quot;)" PropertyName="Value" /></DataBindings><RawValue type="System.String" id="456" value="DISCLAIMER - AQUARIUS is the leading software suite to acquire, process, model, and publish water data. Environmental monitoring agencies worldwide trust AQUARIUS to produce accurate water information in real-time. A modern design delivers the latest water science in an intuitive experience." /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="457" Size="7" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item></Controls></Item></Controls></Item></Pages><DataSources type="PerpetuumSoft.Reporting.Data.DocumentDataSourceCollection" id="458" /><StyleSheet type="PerpetuumSoft.Reporting.DOM.StyleSheet" id="459"><Styles type="PerpetuumSoft.Reporting.DOM.StyleCollection" id="460"><Item type="PerpetuumSoft.Reporting.DOM.Style" id="461" Name="HeaderFooter"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="462" Color="51, 51, 51" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="463" Size="9.75" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Style" id="464" Name="HeaderFooter1"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="465" Color="51, 51, 51" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="466" Size="9.75" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Style" id="467" Name="HeaderFooter2"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="468" Color="51, 51, 51" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="469" Size="9.75" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Style" id="470" Name="HeaderFooter3"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="471" Color="51, 51, 51" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="472" Size="9.75" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Style" id="473" Name="Even"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="474" Color="51, 51, 51" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="475" Size="9" FamilyName="Calibri" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Style" id="476" Name="Odd"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="477" Color="51, 51, 51" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="478" Size="9" FamilyName="Calibri" /><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="479" Color="Silver" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Style" id="480" Name="Normal"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="481" Color="51, 51, 51" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="482" Size="9.75" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Style" id="483" Name="TableHeader"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="484" Color="51, 51, 51" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="485" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="486" Color="230, 230, 230" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="487" All="1 Solid Silver" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Style" id="488" Name="TableCell"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="489" Color="51, 51, 51" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="490" Size="8" FamilyName="Calibri" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="487" All="1 Solid Silver" /></Item></Styles></StyleSheet></root>