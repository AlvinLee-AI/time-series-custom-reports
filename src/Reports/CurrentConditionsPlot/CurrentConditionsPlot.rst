<?xml version="1.0" encoding="utf-8" standalone="yes"?><root type="PerpetuumSoft.Reporting.DOM.Document" id="1" version="2" Name="CurrentConditionsPlot" IsTemplate="true" Title="Current Conditions Plot" ImportsString="CurrentConditionsPlotNamespace&#xD;&#xA;ReportPluginFramework.Properties&#xD;&#xA;ReportPluginFramework&#xD;&#xA;ReportPluginFramework.ReportData&#xD;&#xA;System.Linq&#xD;&#xA;System.Collections.Generic&#xD;&#xA;System.Data&#xD;&#xA;Server.Services.PublishService.ServiceModel.RequestDtos&#xD;&#xA;Server.Services.PublishService.ServiceModel.ResponseDtos&#xD;&#xA;Server.Services.PublishService.ServiceModel.Dtos&#xD;&#xA;System.Windows.Forms.DataVisualization.Charting" DocumentGuid="88fbd931-e8da-4c18-8a5f-b61ddb0fffc3" MetricUnit="Pixel" DoublePass="true" CommonScript="// Common functions, variables and defaults&#xD;&#xA;//&#xD;&#xA;&#xD;&#xA;public Common CommonLibrary = null;&#xD;&#xA;public string ReportTitle = &quot;&quot;;&#xD;&#xA;public string DateFormat = &quot;yyyy-MM-dd HH:mm&quot;;&#xD;&#xA;&#xD;&#xA;ServiceStack.Logging.ILog Log = ServiceStack.Logging.LogManager.GetLogger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);&#xD;&#xA;&#xD;&#xA;public bool ReportOutputIsPdf()&#xD;&#xA;{&#xD;&#xA;  string outputFormat = (string) GetData(&quot;ReportTables.ReportData.OutputFormat&quot;);&#xD;&#xA;  bool flag = outputFormat.ToLower() == &quot;pdf&quot;;&#xD;&#xA;&#xD;&#xA;  return flag;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;public bool IsTagKey(List&lt;TagDefinition&gt; tags, string tagKey)&#xD;&#xA;{&#xD;&#xA;  foreach (TagDefinition tag in tags)&#xD;&#xA;    if ((tag.Key == tagKey) &amp;&amp; (tag.PickListValues != null) &amp;&amp; (tag.PickListValues.Count &gt; 0))&#xD;&#xA;      return true;&#xD;&#xA;  return false;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;public string GetTagValue(LocationDescription locationDescription, string tagKey)&#xD;&#xA;{&#xD;&#xA;  foreach (TagMetadata tag in locationDescription.Tags)&#xD;&#xA;    if (tag.Key == tagKey) return tag.Value;&#xD;&#xA;  return &quot;&quot;;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;public void AddColumnDataRow(Common common, DataTable columnData, TimeSeriesDescription tsDesc)&#xD;&#xA;{&#xD;&#xA;  DataRow row = columnData.NewRow();&#xD;&#xA;  row[&quot;LocationIdentifier&quot;] = tsDesc.LocationIdentifier;&#xD;&#xA;  row[&quot;LocationName&quot;] = common.GetLocationName(tsDesc.LocationIdentifier);&#xD;&#xA;  row[&quot;DatasetIdentifier&quot;] = tsDesc.Identifier;&#xD;&#xA;  row[&quot;Parameter&quot;] = tsDesc.Parameter;&#xD;&#xA;  &#xD;&#xA;  TimeSeriesPoint lastPoint = GetLastPoint(common, tsDesc);&#xD;&#xA;  if (lastPoint != null)&#xD;&#xA;  {&#xD;&#xA;    row[&quot;LastValue&quot;] = lastPoint.Value.Display;&#xD;&#xA;    row[&quot;DateTime&quot;] = lastPoint.Timestamp.DateTimeOffset.ToString(DateFormat);&#xD;&#xA;  }&#xD;&#xA;  row[&quot;Units&quot;] = common.GetUnitSymbol(tsDesc.Unit);&#xD;&#xA;  row[&quot;TimeSeriesDescription&quot;] = tsDesc;&#xD;&#xA;      &#xD;&#xA;  columnData.Rows.Add(row);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;public DateTimeOffset? GetLastCorrectedTime(Common common, TimeSeriesDescription tsDesc)&#xD;&#xA;{&#xD;&#xA;  DateTimeOffset? endTime = tsDesc.CorrectedEndTime;&#xD;&#xA;  if (endTime.HasValue) return endTime;&#xD;&#xA;  &#xD;&#xA;  DateTimeOffsetInterval timeRange = common.GetTimeSeriesTimeRange(tsDesc.UniqueId);&#xD;&#xA;  return timeRange.End;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;public TimeSeriesPoint GetLastPoint(Common common, TimeSeriesDescription tsDesc)&#xD;&#xA;{&#xD;&#xA;  DateTimeOffset? endTime = GetLastCorrectedTime(common, tsDesc);&#xD;&#xA; &#xD;&#xA;  if (!endTime.HasValue) return null;&#xD;&#xA;  &#xD;&#xA;  List&lt;TimeSeriesPoint&gt; points = common.GetTimeSeriesCorrectedDataReponse(&#xD;&#xA;    tsDesc.UniqueId, &quot;PointsOnly&quot;, endTime.Value, endTime.Value).Points;&#xD;&#xA;    &#xD;&#xA;  if (points.Count &gt; 0) return points[points.Count - 1];&#xD;&#xA;  &#xD;&#xA;  return null;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;public void AddHeaderDataTable(DataSet dataSet, string tableName)&#xD;&#xA;{&#xD;&#xA;  if (dataSet.Tables.Contains(tableName)) dataSet.Tables.Remove(tableName);&#xD;&#xA;  DataTable headerData = dataSet.Tables.Add(tableName);&#xD;&#xA;  &#xD;&#xA;  headerData.Columns.Add(&quot;LocationIdentifier&quot;, typeof(string));&#xD;&#xA;  headerData.Columns.Add(&quot;LocationName&quot;, typeof(string));&#xD;&#xA;  headerData.Columns.Add(&quot;DatasetIdentifier&quot;, typeof(string));&#xD;&#xA;  headerData.Columns.Add(&quot;Parameter&quot;, typeof(string));&#xD;&#xA;  headerData.Columns.Add(&quot;LastValue&quot;, typeof(string));&#xD;&#xA;  headerData.Columns.Add(&quot;DateTime&quot;, typeof(string));&#xD;&#xA;  headerData.Columns.Add(&quot;Units&quot;, typeof(string));&#xD;&#xA;&#xD;&#xA;  DataRow headerDataRow = headerData.NewRow();&#xD;&#xA;  headerData.Rows.Add(headerDataRow);&#xD;&#xA;&#xD;&#xA;  headerDataRow[&quot;LocationIdentifier&quot;] = &quot;Location Identifier&quot;;&#xD;&#xA;  headerDataRow[&quot;LocationName&quot;] = &quot;Location Name&quot;;&#xD;&#xA;  headerDataRow[&quot;DatasetIdentifier&quot;] = &quot;Data Set Identifier&quot;;&#xD;&#xA;  headerDataRow[&quot;Parameter&quot;] = &quot;Parameter&quot;;&#xD;&#xA;  headerDataRow[&quot;LastValue&quot;] = &quot;Last Value&quot;;&#xD;&#xA;  headerDataRow[&quot;DateTime&quot;] = &quot;Time&quot;;&#xD;&#xA;  headerDataRow[&quot;Units&quot;] = &quot;Units&quot;;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;public DataTable AddColumnDataTable(DataSet dataSet, string tableName)&#xD;&#xA;{&#xD;&#xA;  if (dataSet.Tables.Contains(tableName)) dataSet.Tables.Remove(tableName);&#xD;&#xA;  DataTable columnData = dataSet.Tables.Add(tableName);&#xD;&#xA;  &#xD;&#xA;  columnData.Columns.Add(&quot;LocationIdentifier&quot;, typeof(string));&#xD;&#xA;  columnData.Columns.Add(&quot;LocationName&quot;, typeof(string));&#xD;&#xA;  columnData.Columns.Add(&quot;DatasetIdentifier&quot;, typeof(string));&#xD;&#xA;  columnData.Columns.Add(&quot;Parameter&quot;, typeof(string));&#xD;&#xA;  columnData.Columns.Add(&quot;LastValue&quot;, typeof(string));&#xD;&#xA;  columnData.Columns.Add(&quot;DateTime&quot;, typeof(string));&#xD;&#xA;  columnData.Columns.Add(&quot;Units&quot;, typeof(string));&#xD;&#xA;  columnData.Columns.Add(&quot;TimeSeriesDescription&quot;, typeof(TimeSeriesDescription));&#xD;&#xA;  &#xD;&#xA;  return columnData;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;public string ChartDateFormat = &quot;yyyy-MM-dd&quot;;&#xD;&#xA;&#xD;&#xA;public void DrawChart(PerpetuumSoft.Reporting.MSChart.MicrosoftChart microsoftChart1, &#xD;&#xA;  DataSet dataSet, DataRow dataBandRow)&#xD;&#xA;{&#xD;&#xA;  microsoftChart1.Series.Clear();&#xD;&#xA;  ChartArea chartArea = microsoftChart1.ChartAreas[0];&#xD;&#xA;&#xD;&#xA;  Common common = (Common) dataSet.Tables[&quot;RunReportRequest&quot;].Rows[0][&quot;CommonLibrary&quot;];&#xD;&#xA;  chartArea.AxisX.LabelStyle.Format = ChartDateFormat;&#xD;&#xA;  &#xD;&#xA;  TimeSeriesDescription tsDesc = (TimeSeriesDescription) dataBandRow[&quot;TimeSeriesDescription&quot;];&#xD;&#xA;  DateTimeOffsetInterval periodSelected = (DateTimeOffsetInterval) dataSet.Tables[&quot;ReportData&quot;].Rows[0][&quot;PeriodSelectedAdjustedForReport&quot;];&#xD;&#xA;  TimeSpan tsOffset = TimeSpan.FromHours(tsDesc.UtcOffset);&#xD;&#xA;  &#xD;&#xA;  DateTimeOffset ? startTime = null;&#xD;&#xA;  DateTimeOffset ? endTime = null;&#xD;&#xA;  &#xD;&#xA;  if (periodSelected.Start.HasValue) &#xD;&#xA;    startTime = periodSelected.Start.Value.Subtract(tsOffset).ToOffset(tsOffset);&#xD;&#xA;  if (periodSelected.End.HasValue) &#xD;&#xA;    endTime = periodSelected.End.Value.Subtract(tsOffset).ToOffset(tsOffset);&#xD;&#xA;    &#xD;&#xA;  if (startTime.HasValue) chartArea.AxisX.Minimum = startTime.Value.DateTime.ToOADate();&#xD;&#xA;  if (endTime.HasValue) &#xD;&#xA;    chartArea.AxisX.Maximum = endTime.Value.DateTime.ToOADate();&#xD;&#xA;  else&#xD;&#xA;  {&#xD;&#xA;    DateTimeOffset now = DateTimeOffset.Now;&#xD;&#xA;    DateTimeOffset max = new DateTimeOffset(now.Year, now.Month, now.Day, 0, 0, 0, tsOffset);&#xD;&#xA;    max = max.AddDays(1);&#xD;&#xA;    chartArea.AxisX.Maximum = max.DateTime.ToOADate();&#xD;&#xA;  }&#xD;&#xA;    &#xD;&#xA;  &#xD;&#xA;  string parameter = tsDesc.Parameter;&#xD;&#xA;  string unit = common.GetUnitSymbol(tsDesc.Unit);&#xD;&#xA;  chartArea.AxisY.Title = parameter + &quot; (&quot; + unit + &quot;)&quot;;&#xD;&#xA;&#xD;&#xA;  chartArea.AxisY.IsStartedFromZero = false;&#xD;&#xA;&#xD;&#xA;  Series points = microsoftChart1.Series.Add(&quot;Points&quot;);&#xD;&#xA;  points.IsVisibleInLegend = false;&#xD;&#xA;  points.XValueType = ChartValueType.DateTime;&#xD;&#xA;  points.ChartType = SeriesChartType.Line;&#xD;&#xA;  points.Color = System.Drawing.Color.FromArgb(33, 64, 154);&#xD;&#xA;  points.BorderWidth = 3;&#xD;&#xA;  points.MarkerStyle = MarkerStyle.None;&#xD;&#xA;  points.EmptyPointStyle.BorderWidth = 0;&#xD;&#xA;  points.EmptyPointStyle.MarkerStyle = MarkerStyle.None;&#xD;&#xA;  &#xD;&#xA;  List&lt;TimeSeriesPoint&gt; tsPoints = common.GetTimeSeriesCorrectedDataReponse(tsDesc.UniqueId, &quot;PointsOnly&quot;, startTime, endTime).Points;&#xD;&#xA;  &#xD;&#xA;  foreach(TimeSeriesPoint tsPoint in tsPoints)&#xD;&#xA;  {&#xD;&#xA;    DateTimeOffset dt = tsPoint.Timestamp.DateTimeOffset;&#xD;&#xA;&#xD;&#xA;    if (!tsPoint.Value.Numeric.HasValue)&#xD;&#xA;      points.Points.AddXY(dt.DateTime.ToOADate(), double.NaN);&#xD;&#xA;    else    &#xD;&#xA;      points.Points.AddXY(dt.DateTime.ToOADate(), tsPoint.Value.Numeric.Value);&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (points.Points.Count == 0) &#xD;&#xA;  {&#xD;&#xA;    if (startTime.HasValue) points.Points.AddXY(startTime.Value.DateTime.ToOADate(), double.NaN);&#xD;&#xA;    if (endTime.HasValue) points.Points.AddXY(endTime.Value.DateTime.ToOADate(), double.NaN);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;" ScriptLanguage="CSharp" GridStep="18.75" GenerateScript="//Document GenerateScript&#xD;&#xA;if (Engine.IsSecondPass) return;&#xD;&#xA;&#xD;&#xA;ServiceStack.Logging.ILog Log = ServiceStack.Logging.LogManager.GetLogger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);&#xD;&#xA;&#xD;&#xA;Log.Debug(&quot;Begin Document GenerateScript !!!!!!!!!!!!!!**********************************************************&quot;);&#xD;&#xA;try&#xD;&#xA;{&#xD;&#xA;  System.Data.DataSet dataSet = (System.Data.DataSet) Engine.Objects[&quot;ReportTables&quot;];&#xD;&#xA;  RunFileReportRequest runReportRequest = (RunFileReportRequest) dataSet.Tables[&quot;RunReportRequest&quot;].Rows[0][&quot;RunReportRequest&quot;];&#xD;&#xA;  IPublishGateway publish = runReportRequest.Publish;&#xD;&#xA;  CommonLibrary = (Common) dataSet.Tables[&quot;RunReportRequest&quot;].Rows[0][&quot;CommonLibrary&quot;];&#xD;&#xA;  ReportTitle = (string) dataSet.Tables[&quot;ReportSettings&quot;].Rows[0][&quot;ReportTitle&quot;];&#xD;&#xA;  &#xD;&#xA;  string dllName = (string) dataSet.Tables[&quot;RunReportRequest&quot;].Rows[0][&quot;DllName&quot;];&#xD;&#xA;  Log.DebugFormat(&quot;{0} - Document GenerateScript&quot;, dllName);&#xD;&#xA;  &#xD;&#xA;  ///////////////////////////////////////////////////////////////&#xD;&#xA;&#xD;&#xA;  ChartDateFormat = CommonLibrary.GetParameterString(&quot;ChartDateFormat&quot;, &quot;yyyy-MM-dd&quot;);&#xD;&#xA;&#xD;&#xA;  string sortOn = CommonLibrary.GetParameterString(&quot;SortOn&quot;, &quot;LocationIdentifier&quot;);&#xD;&#xA;  string datasetParameter1 = CommonLibrary.GetParameterString(&quot;DatasetParameter1&quot;, &quot;&quot;);&#xD;&#xA;  string datasetLabelOrKey1 = CommonLibrary.GetParameterString(&quot;DatasetLabelOrKey1&quot;, &quot;&quot;);&#xD;&#xA;  string datasetParameter2 = CommonLibrary.GetParameterString(&quot;DatasetParameter2&quot;, &quot;&quot;);&#xD;&#xA;  string datasetLabelOrKey2 = CommonLibrary.GetParameterString(&quot;DatasetLabelOrKey2&quot;, &quot;&quot;);&#xD;&#xA;  DateFormat = CommonLibrary.GetParameterString(&quot;DateFormat&quot;, &quot;yyyy-MM-dd HH:mm&quot;);&#xD;&#xA;  &#xD;&#xA;  TagListServiceRequest tagRequest = new TagListServiceRequest();&#xD;&#xA;  TagListServiceResponse tagResponse = publish.Get(tagRequest);&#xD;&#xA;&#xD;&#xA;  bool labelIsTagKey1 = IsTagKey(tagResponse.Tags, datasetLabelOrKey1);&#xD;&#xA;  bool labelIsTagKey2 = IsTagKey(tagResponse.Tags, datasetLabelOrKey2);&#xD;&#xA;&#xD;&#xA;  string locationTagKey = CommonLibrary.GetParameterString(&quot;LocationTagKey&quot;, &quot;&quot;);&#xD;&#xA;  List&lt;string&gt; tagKeys = new List&lt;string&gt;();&#xD;&#xA;  if (!string.IsNullOrEmpty(locationTagKey)) tagKeys.Add(locationTagKey);&#xD;&#xA;  &#xD;&#xA;  List&lt;LocationDescription&gt; locationDescriptions = CommonLibrary.GetLocationDescriptions(&quot;&quot;, &quot;&quot;, &quot;&quot;, tagKeys);&#xD;&#xA;&#xD;&#xA;  if (locationDescriptions.Count == 0)&#xD;&#xA;  {&#xD;&#xA;    string message = CommonLibrary.GetUnknownTagFilterMessage(tagKeys, &quot;Location&quot;);&#xD;&#xA;&#xD;&#xA;    if (!string.IsNullOrEmpty(message))&#xD;&#xA;    {&#xD;&#xA;      string subtitle = (string) dataSet.Tables[&quot;ReportData&quot;].Rows[0][&quot;ReportSubTitle&quot;];&#xD;&#xA;      string newSubtitle = string.Format(&quot;{0}:  {1}&quot;, subtitle, message);&#xD;&#xA;      dataSet.Tables[&quot;ReportData&quot;].Rows[0][&quot;ReportSubTitle&quot;] = newSubtitle;&#xD;&#xA;    }&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  if (sortOn == &quot;LocationName&quot;)&#xD;&#xA;    locationDescriptions.Sort((x, y) =&gt; x.Name.CompareTo(y.Name));&#xD;&#xA;  else&#xD;&#xA;    locationDescriptions.Sort((x, y) =&gt; x.Identifier.CompareTo(y.Identifier));&#xD;&#xA;  &#xD;&#xA;  AddHeaderDataTable(dataSet, &quot;HeaderData&quot;);&#xD;&#xA;  DataTable columnData = AddColumnDataTable(dataSet, &quot;ColumnData&quot;);&#xD;&#xA;&#xD;&#xA;  foreach (LocationDescription locationDescription in locationDescriptions)&#xD;&#xA;  {&#xD;&#xA;    var publishRequest = new TimeSeriesDescriptionServiceRequest();&#xD;&#xA;    publishRequest.LocationIdentifier = locationDescription.Identifier;&#xD;&#xA;&#xD;&#xA;    TimeSeriesDescriptionListServiceResponse publishResponse = publish.Get(publishRequest);&#xD;&#xA;&#xD;&#xA;    List&lt;TimeSeriesDescription&gt; timeSeriesDescriptions = publishResponse.TimeSeriesDescriptions;&#xD;&#xA;    timeSeriesDescriptions.Sort((x, y) =&gt; x.Identifier.CompareTo(y.Identifier));&#xD;&#xA;&#xD;&#xA;    if ((labelIsTagKey1 &amp;&amp; string.IsNullOrEmpty(GetTagValue(locationDescription, datasetLabelOrKey1))) &amp;&amp;&#xD;&#xA;      (labelIsTagKey2 &amp;&amp; string.IsNullOrEmpty(GetTagValue(locationDescription, datasetLabelOrKey2))))&#xD;&#xA;      continue;&#xD;&#xA;    &#xD;&#xA;    string label1 = (labelIsTagKey1) ? GetTagValue(locationDescription, datasetLabelOrKey1) : datasetLabelOrKey1;&#xD;&#xA;    string label2 = (labelIsTagKey2) ? GetTagValue(locationDescription, datasetLabelOrKey2) : datasetLabelOrKey2;&#xD;&#xA;    &#xD;&#xA;    if (string.IsNullOrEmpty(datasetParameter1) &amp;&amp; string.IsNullOrEmpty(datasetParameter2) &amp;&amp;&#xD;&#xA;      string.IsNullOrEmpty(datasetLabelOrKey1) &amp;&amp; string.IsNullOrEmpty(datasetLabelOrKey2))&#xD;&#xA;    {&#xD;&#xA;      foreach (TimeSeriesDescription tsDesc in timeSeriesDescriptions)&#xD;&#xA;        AddColumnDataRow(CommonLibrary, columnData, tsDesc);&#xD;&#xA;      continue;&#xD;&#xA;    }&#xD;&#xA;    if (!string.IsNullOrEmpty(datasetParameter1))&#xD;&#xA;    {&#xD;&#xA;      foreach (TimeSeriesDescription tsDesc in timeSeriesDescriptions)&#xD;&#xA;        if ((tsDesc.Parameter == datasetParameter1) &amp;&amp; &#xD;&#xA;          (string.IsNullOrEmpty(datasetLabelOrKey1) || (tsDesc.Label == label1)))&#xD;&#xA;          AddColumnDataRow(CommonLibrary, columnData, tsDesc);&#xD;&#xA;    }&#xD;&#xA;    if (!string.IsNullOrEmpty(datasetParameter2))&#xD;&#xA;    {&#xD;&#xA;      foreach (TimeSeriesDescription tsDesc in timeSeriesDescriptions)&#xD;&#xA;        if ((tsDesc.Parameter == datasetParameter2) &amp;&amp; &#xD;&#xA;          (string.IsNullOrEmpty(datasetLabelOrKey2) || (tsDesc.Label == label2)))&#xD;&#xA;          AddColumnDataRow(CommonLibrary, columnData, tsDesc);&#xD;&#xA;    }&#xD;&#xA;    if (string.IsNullOrEmpty(datasetParameter1) &amp;&amp; string.IsNullOrEmpty(datasetParameter2))&#xD;&#xA;      if (!string.IsNullOrEmpty(datasetLabelOrKey1) || !string.IsNullOrEmpty(datasetLabelOrKey2))&#xD;&#xA;      {&#xD;&#xA;        foreach (TimeSeriesDescription tsDesc in timeSeriesDescriptions)&#xD;&#xA;          if ((tsDesc.Label == label1) || (tsDesc.Label == label2))&#xD;&#xA;            AddColumnDataRow(CommonLibrary, columnData, tsDesc);&#xD;&#xA;      }&#xD;&#xA;  }&#xD;&#xA;  &#xD;&#xA;  Log.Debug(&quot;End Document GenerateScript !!!!!!!!!!!!!!**********************************************************&quot;);&#xD;&#xA;}&#xD;&#xA;catch (Exception exp)&#xD;&#xA;{&#xD;&#xA;  System.Data.DataSet dataSet = (System.Data.DataSet) Engine.Objects[&quot;ReportTables&quot;];&#xD;&#xA;  string dllName = (string) dataSet.Tables[&quot;RunReportRequest&quot;].Rows[0][&quot;DllName&quot;];&#xD;&#xA;  Log.Error(&quot;Document GenerateScript - &quot; + dllName, exp);&#xD;&#xA;  Log.Info(GetData(&quot;ReportTables.RunReportRequest.ReportInputInformation&quot;));&#xD;&#xA;}&#xD;&#xA;"><Parameters type="PerpetuumSoft.Reporting.DOM.ParameterCollection" id="2" /><PageContent type="PerpetuumSoft.Reporting.DOM.Wrappers.ContentParametersDictionary" id="3" /><Pages type="PerpetuumSoft.Reporting.DOM.PageCollection" id="4"><Item type="PerpetuumSoft.Reporting.DOM.Page" id="5" Margins="75; 75; 150; 150" Size="3300;2550" StyleName="Normal" Name="page1" Location="0;0" PaperKind="Letter" Orientation="Landscape"><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="6" /><Controls type="PerpetuumSoft.Reporting.DOM.ReportControlCollection" id="7"><Item type="PerpetuumSoft.Reporting.DOM.PageHeader" id="8" StyleName="PageHeader" Location="0;75" Name="pageHeader" Size="3300;525"><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="9" /><Controls type="PerpetuumSoft.Reporting.DOM.ReportControlCollection" id="10"><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="11" Location="112.5;0" Size="3037.5;112.5" Name="textBoxPageHeader1" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="12" Color="33, 64, 154" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="13"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="14" Expression="GetData(&quot;ReportTables.ReportData.PageHeader1&quot;)" PropertyName="Value" /></DataBindings><RawValue type="System.String" id="15" value="Aquatic Informatics Data Management Software" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="16" Size="12" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="17" Location="112.5;75" Size="3037.5;75" Name="textBoxPageHeader2" StyleName="PageHeader" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="18" Color="0, 131, 215" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="19"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="20" Expression="GetData(&quot;ReportTables.ReportData.PageHeader2&quot;)" PropertyName="Value" /></DataBindings><RawValue type="System.String" id="21" value="Faster Analysis. Better Decisions." /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="22" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Picture" id="23" Location="150;31.25" Size="643.75;187.5" Name="logo" StyleName="PageHeader" GenerateScript="var encodedImage = GetData(&quot;ReportTables.OrganizationIcon.EncodedImage&quot;) as string;&#xD;&#xA;var bytes = Convert.FromBase64String(encodedImage);&#xD;&#xA;&#xD;&#xA;using (var memoryStream = new System.IO.MemoryStream(bytes))&#xD;&#xA;{&#xD;&#xA;  logo.Image = new System.Drawing.Bitmap(&#xD;&#xA;    System.Drawing.Image.FromStream(memoryStream));&#xD;&#xA;}" ExportAsPictureInXaml="false"><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="24"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="25" Expression="GetData(&quot;ReportTables.OrganizationIcon.SupportUrl&quot;)" PropertyName="Hyperlink" /></DataBindings></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="26" Location="0;281.25" Size="3300;118.11023712158203" Name="textBoxPageHeaderLine" ExportAsPictureInXaml="false" TextAlign="MiddleLeft"><Border type="PerpetuumSoft.Framework.Drawing.Border" id="27" TopLine="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="28" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="29" Location="150;300" Size="1500;75" Name="reportTitle" StyleName="PageHeader" GenerateScript="reportTitle.Document.Title = ReportTitle;" ExportAsPictureInXaml="false" TextAlign="MiddleLeft"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="30" Color="33, 64, 154" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="31"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="32" Expression="ReportTitle" PropertyName="Value" /></DataBindings><RawValue type="System.String" id="33" value="Wind Rose" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="34" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="35" Location="150;356.25" Size="1500;56.25" Name="textBoxSubTitle" ExportAsPictureInXaml="false" TextAlign="MiddleLeft"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="36" Color="51, 51, 51" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="37"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="38" Expression="GetData(&quot;ReportTables.ReportData.ReportSubTitle&quot;)" PropertyName="Value" /></DataBindings><RawValue type="System.String" id="39" value="Title" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="40" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="41" Location="2418.75;300" Size="731.25;75" Name="textBoxPageNumber" StyleName="PageNumber" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="42" Color="51, 51, 51" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="43"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="44" Expression="Now.ToString(&quot;MMM d, yyyy&quot;) + &quot; | &quot; + PageNumber.ToString() + &quot; &quot; + Resources.Of + &quot; &quot; + PageCount.ToString()" PropertyName="Value" /></DataBindings><RawValue type="System.String" id="45" value="DISCLAIMER: The accuracy and reliability of this data is not guaranteed. Aquatic Informatics Inc. accepts no liability for its use in any way. It is the responsibility of the reader to establish the suitability of the information provided in this report for any purpose. No warranty expressed or implied is made regarding the accuracy, completeness, currency, relevance or suitability for any particular purpose of the information provided in this report." /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="46" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="47" Location="1668.75;356.25" Size="1481.25;56.25" Name="textBoxPeriodSelected" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="48" Color="51, 51, 51" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="49"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="50" Expression="GetData(&quot;ReportTables.ReportData.PeriodSelectedInformation&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="51" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="52" Location="0;431.25" Size="3300;56.25" Name="textBoxGrayBackground" ExportAsPictureInXaml="false" TextAlign="TopLeft"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="53" Color="230, 230, 230" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="54" All="1 Solid 204, 204, 204" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="55" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="56" Location="150;431.25" Size="2606.25;56.25" Name="textBoxInformation1" StyleName="Normal" ExportAsPictureInXaml="false" TextAlign="MiddleLeft"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="57" Color="51, 51, 51" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="58"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="59" Expression="&quot;Location Tag Key: '&quot; + GetData(&quot;ReportTables.ReportSettings.LocationTagKey&quot;) + &quot;'&quot;" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="60" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="61" Location="2737.5;431.25" Size="393.75;56.25" Name="textBoxUnitInformation" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="62" Color="51, 51, 51" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="63" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="64" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item></Controls></Item><Item type="PerpetuumSoft.Reporting.DOM.PageFooter" id="65" StyleName="PageFooter" Location="0;1912.5" Name="pageFooter" Size="3300;150"><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="66" /><Controls type="PerpetuumSoft.Reporting.DOM.ReportControlCollection" id="67"><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="68" Location="0;0" Size="3300;29.528125762939453" Name="textBoxPageFooterLine" ExportAsPictureInXaml="false"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="69" Color="110, 112, 110" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="27" TopLine="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="70" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="71" Location="168.75;0" Size="2981.25;131.25" CanGrow="true" Name="textBoxPageFooter1" StyleName="Normal" ExportAsPictureInXaml="false" TextAlign="BottomLeft"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="72" Color="110, 112, 110" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="73"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="74" Expression="GetData(&quot;ReportTables.ReportData.FooterDisclaimer&quot;)" PropertyName="Value" /></DataBindings><RawValue type="System.String" id="75" value="DISCLAIMER - AQUARIUS is the leading software suite to acquire, process, model, and publish water data. Environmental monitoring agencies worldwide trust AQUARIUS to produce accurate water information in real-time. A modern design delivers the latest water science in an intuitive experience." /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="76" Size="7" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item></Controls></Item><Item type="PerpetuumSoft.Reporting.DOM.DataBand" id="77" Location="0;675" Size="3300;1162.5" Name="dataBand2" ColumnsGap="0" DataSource="ReportTables.ColumnData"><Sort type="PerpetuumSoft.Reporting.DOM.DataBandSortCollection" id="78" /><Controls type="PerpetuumSoft.Reporting.DOM.ReportControlCollection" id="79"><Item type="PerpetuumSoft.Reporting.DOM.Header" id="80" Location="0;56.25" CanGrow="true" Size="3300;56.25" CanShrink="true" Name="columnHeadersforPdf" StyleName="Header1" RepeatEveryPage="true"><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="81" /><Controls type="PerpetuumSoft.Reporting.DOM.ReportControlCollection" id="82"><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="83" Location="150;0" Size="750;56.25" CanShrink="true" Margins="6.25; 6.25; 0; 0" CanGrow="true" Name="pdfHeader1" GrowToBottom="true" StyleName="Normal" StringTrimming="EllipsisCharacter" ExportAsPictureInXaml="false" TextAlign="TopLeft"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="84" Color="230, 230, 230" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="85" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="86"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="87" Expression="GetData(&quot;ReportTables.HeaderData.LocationName&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="88" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="89" Location="900;0" Size="881.25;56.25" CanShrink="true" Margins="6.25; 6.25; 37.5; 0" CanGrow="true" Name="pdfHeader2" GrowToBottom="true" StyleName="Normal" StringTrimming="EllipsisCharacter" ExportAsPictureInXaml="false" TextAlign="TopLeft"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="90" Color="230, 230, 230" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="85" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="91"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="92" Expression="GetData(&quot;ReportTables.HeaderData.DatasetIdentifier&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="93" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="94" Location="1762.5;0" Size="318.75;56.25" CanShrink="true" Margins="6.25; 6.25; 0; 0" CanGrow="true" Name="pdfHeader3" GrowToBottom="true" StyleName="Normal" StringTrimming="EllipsisCharacter" ExportAsPictureInXaml="false" TextAlign="TopCenter"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="95" Color="230, 230, 230" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="85" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="96"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="97" Expression="GetData(&quot;ReportTables.HeaderData.Parameter&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="98" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="99" Location="2081.25;0" Size="318.75;56.25" CanShrink="true" Margins="6.25; 6.25; 0; 0" CanGrow="true" Name="pdfHeader4" GrowToBottom="true" StyleName="Normal" StringTrimming="EllipsisCharacter" ExportAsPictureInXaml="false" TextAlign="TopCenter"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="100" Color="230, 230, 230" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="85" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="101"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="102" Expression="GetData(&quot;ReportTables.HeaderData.LastValue&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="103" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="104" Location="2400;0" Size="431.25;56.25" CanShrink="true" Margins="6.25; 6.25; 0; 0" CanGrow="true" Name="pdfHeader5" GrowToBottom="true" StyleName="Normal" StringTrimming="EllipsisCharacter" ExportAsPictureInXaml="false" TextAlign="TopCenter"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="105" Color="230, 230, 230" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="85" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="106"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="107" Expression="GetData(&quot;ReportTables.HeaderData.DateTime&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="108" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="109" Location="2831.25;0" Size="318.75;56.25" CanShrink="true" Margins="6.25; 6.25; 0; 0" CanGrow="true" Name="pdfHeader6" GrowToBottom="true" StyleName="Normal" StringTrimming="EllipsisCharacter" ExportAsPictureInXaml="false" TextAlign="TopCenter"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="110" Color="230, 230, 230" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="85" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="111"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="112" Expression="GetData(&quot;ReportTables.HeaderData.Units&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="113" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item></Controls><Aggregates type="PerpetuumSoft.Reporting.DOM.AggregateCollection" id="114" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Detail" id="115" Location="0;168.75" CanGrow="true" Size="3300;56.25" CanShrink="true" Name="tableColumns"><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="116" /><Controls type="PerpetuumSoft.Reporting.DOM.ReportControlCollection" id="117"><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="118" Location="150;0" Size="750;56.25" CanShrink="true" Margins="9.375; 9.375; 0; 0" CanGrow="true" Name="column1" GrowToBottom="true" StyleName="Normal" StringTrimming="EllipsisCharacter" ExportAsPictureInXaml="false" TextAlign="TopLeft"><Border type="PerpetuumSoft.Framework.Drawing.Border" id="119" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="120"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="121" Expression="dataBand2[&quot;LocationName&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="122" Size="7.5" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="123" Location="900;0" Size="862.5;56.25" CanShrink="true" Margins="9.375; 9.375; 37.5; 0" CanGrow="true" Name="column2" GrowToBottom="true" StyleName="Normal" StringTrimming="EllipsisCharacter" ExportAsPictureInXaml="false" TextAlign="TopLeft"><Border type="PerpetuumSoft.Framework.Drawing.Border" id="119" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="124"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="125" Expression="dataBand2[&quot;DatasetIdentifier&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="126" Size="7.5" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="127" Location="1762.5;0" Size="318.75;56.25" CanShrink="true" Margins="9.375; 9.375; 0; 0" CanGrow="true" Name="column3" GrowToBottom="true" StyleName="Normal" StringTrimming="EllipsisCharacter" ExportAsPictureInXaml="false" TextAlign="TopCenter"><Border type="PerpetuumSoft.Framework.Drawing.Border" id="119" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="128"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="129" Expression="dataBand2[&quot;Parameter&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="130" Size="7.5" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="131" Location="2081.25;0" Size="318.75;56.25" CanShrink="true" Margins="9.375; 9.375; 0; 0" CanGrow="true" Name="column4" GrowToBottom="true" StyleName="Normal" StringTrimming="EllipsisCharacter" ExportAsPictureInXaml="false" TextAlign="TopCenter"><Border type="PerpetuumSoft.Framework.Drawing.Border" id="119" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="132"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="133" Expression="dataBand2[&quot;LastValue&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="134" Size="7.5" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="135" Location="2400;0" Size="431.25;56.25" CanShrink="true" Margins="9.375; 9.375; 0; 0" CanGrow="true" Name="column5" GrowToBottom="true" StyleName="Normal" StringTrimming="EllipsisCharacter" ExportAsPictureInXaml="false" TextAlign="TopCenter"><Border type="PerpetuumSoft.Framework.Drawing.Border" id="119" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="136"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="137" Expression="dataBand2[&quot;DateTime&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="138" Size="7.5" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="139" Location="2831.25;0" Size="318.75;56.25" CanShrink="true" Margins="9.375; 9.375; 0; 0" CanGrow="true" Name="column6" GrowToBottom="true" StyleName="Normal" StringTrimming="EllipsisCharacter" ExportAsPictureInXaml="false" TextAlign="TopCenter"><Border type="PerpetuumSoft.Framework.Drawing.Border" id="119" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="140"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="141" Expression="dataBand2[&quot;Units&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="142" Size="7.5" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item></Controls><Aggregates type="PerpetuumSoft.Reporting.DOM.AggregateCollection" id="143" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Detail" id="144" Location="0;281.25" Size="3300;581.25" Name="detail1"><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="145" /><Controls type="PerpetuumSoft.Reporting.DOM.ReportControlCollection" id="146"><Item type="PerpetuumSoft.Reporting.MSChart.MicrosoftChart" id="147" Location="150;0" BorderlineColor="Silver" BorderlineDashStyle="Solid" Size="3000;581.25" BorderlineWidth="2" BackColor="WhiteSmoke" StyleName="Normal" GenerateScript="if (!Engine.IsSecondPass) return;&#xD;&#xA;&#xD;&#xA;ServiceStack.Logging.ILog Log = ServiceStack.Logging.LogManager.GetLogger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);&#xD;&#xA;Log.Debug(&quot;Begin Chart GenerateScript for Current Conditions Plot&quot;);&#xD;&#xA;&#xD;&#xA;try&#xD;&#xA;{  &#xD;&#xA;  DataSet dataSet = (DataSet) Engine.Objects[&quot;ReportTables&quot;];&#xD;&#xA;  DataRow dataBandRow = (DataRow) dataBand2.DataItem;&#xD;&#xA;  &#xD;&#xA;  DrawChart(microsoftChart1, dataSet, dataBandRow);&#xD;&#xA;&#xD;&#xA;} catch (Exception exp)&#xD;&#xA;{&#xD;&#xA;  Log.Error(&quot;Chart GenerateScript&quot;, exp);&#xD;&#xA;}" Name="microsoftChart1"><ChartAreas type="System.Windows.Forms.DataVisualization.Charting.ChartAreaCollection" id="148"><Item type="PerpetuumSoft.Reporting.MSChart.ChartModel.ChartArea" id="149" Name="ChartArea1" BorderColor="Transparent" BackColor="White" BackImage=""><InnerPlotPosition type="PerpetuumSoft.Reporting.MSChart.ChartModel.ElementPosition" id="150" /><Area3DStyle type="PerpetuumSoft.Reporting.MSChart.ChartModel.ChartArea3DStyle" id="151" /><CursorY type="System.Windows.Forms.DataVisualization.Charting.Cursor" id="152" /><Position type="PerpetuumSoft.Reporting.MSChart.ChartModel.ElementPosition" id="153" /><AxisX2 type="PerpetuumSoft.Reporting.MSChart.ChartModel.Axis" id="154" Name="Secondary X axis" TitleForeColor="51, 51, 51" LineColor="DarkGray" TitleFont="Calibri, 8.25pt" LabelAutoFitStyle="DecreaseFont, StaggeredLabels, LabelsAngleStep30, WordWrap"><MajorTickMark type="PerpetuumSoft.Reporting.MSChart.ChartModel.TickMark" id="155" Enabled="true" IntervalOffsetType="NotSet" IntervalType="Auto" Interval="NaN" IntervalOffset="NaN" LineColor="DarkGray" /><MinorTickMark type="PerpetuumSoft.Reporting.MSChart.ChartModel.TickMark" id="156" Enabled="false" IntervalOffsetType="Auto" IntervalType="Auto" Interval="0" IntervalOffset="0" LineColor="DarkGray" /><ScaleView type="System.Windows.Forms.DataVisualization.Charting.AxisScaleView" id="157" /><ScaleBreakStyle type="PerpetuumSoft.Reporting.MSChart.ChartModel.AxisScaleBreakStyle" id="158" /><LabelStyle type="PerpetuumSoft.Reporting.MSChart.ChartModel.LabelStyle" id="159" ForeColor="51, 51, 51" Font="Calibri, 8.25pt" /><MajorGrid type="PerpetuumSoft.Reporting.MSChart.ChartModel.Grid" id="160" Enabled="true" IntervalOffsetType="NotSet" IntervalType="Auto" IntervalOffset="NaN" LineColor="DarkGray" Interval="NaN" /><ScrollBar type="System.Windows.Forms.DataVisualization.Charting.AxisScrollBar" id="161" /><StripLines type="System.Windows.Forms.DataVisualization.Charting.StripLinesCollection" id="162" /><MinorGrid type="PerpetuumSoft.Reporting.MSChart.ChartModel.Grid" id="163" Enabled="false" IntervalOffsetType="Auto" IntervalType="Auto" IntervalOffset="0" LineColor="DarkGray" Interval="0" /><CustomLabels type="System.Windows.Forms.DataVisualization.Charting.CustomLabelsCollection" id="164" /></AxisX2><AxisY2 type="PerpetuumSoft.Reporting.MSChart.ChartModel.Axis" id="165" Name="Secondary Y (Value) axis" TitleForeColor="51, 51, 51" LineColor="DarkGray" TitleFont="Calibri, 8.25pt" LabelAutoFitStyle="DecreaseFont, StaggeredLabels, LabelsAngleStep30, WordWrap"><MajorTickMark type="PerpetuumSoft.Reporting.MSChart.ChartModel.TickMark" id="166" Enabled="true" IntervalOffsetType="NotSet" IntervalType="Auto" Interval="NaN" IntervalOffset="NaN" LineColor="DarkGray" /><MinorTickMark type="PerpetuumSoft.Reporting.MSChart.ChartModel.TickMark" id="167" Enabled="false" IntervalOffsetType="Auto" IntervalType="Auto" Interval="0" IntervalOffset="0" LineColor="DarkGray" /><ScaleView type="System.Windows.Forms.DataVisualization.Charting.AxisScaleView" id="168" /><ScaleBreakStyle type="PerpetuumSoft.Reporting.MSChart.ChartModel.AxisScaleBreakStyle" id="169" /><LabelStyle type="PerpetuumSoft.Reporting.MSChart.ChartModel.LabelStyle" id="170" ForeColor="51, 51, 51" Font="Calibri, 8.25pt" /><MajorGrid type="PerpetuumSoft.Reporting.MSChart.ChartModel.Grid" id="171" Enabled="true" IntervalOffsetType="NotSet" IntervalType="Auto" IntervalOffset="NaN" LineColor="DarkGray" Interval="NaN" /><ScrollBar type="System.Windows.Forms.DataVisualization.Charting.AxisScrollBar" id="172" /><StripLines type="System.Windows.Forms.DataVisualization.Charting.StripLinesCollection" id="173" /><MinorGrid type="PerpetuumSoft.Reporting.MSChart.ChartModel.Grid" id="174" Enabled="false" IntervalOffsetType="Auto" IntervalType="Auto" IntervalOffset="0" LineColor="DarkGray" Interval="0" /><CustomLabels type="System.Windows.Forms.DataVisualization.Charting.CustomLabelsCollection" id="175" /></AxisY2><AxisX type="PerpetuumSoft.Reporting.MSChart.ChartModel.Axis" id="176" Name="X axis" TitleForeColor="51, 51, 51" LineColor="DarkGray" TitleFont="Calibri, 8.25pt" LabelAutoFitStyle="DecreaseFont, StaggeredLabels, LabelsAngleStep30, WordWrap"><MajorTickMark type="PerpetuumSoft.Reporting.MSChart.ChartModel.TickMark" id="177" Enabled="true" IntervalOffsetType="NotSet" IntervalType="Auto" Interval="NaN" IntervalOffset="NaN" LineColor="DarkGray" /><MinorTickMark type="PerpetuumSoft.Reporting.MSChart.ChartModel.TickMark" id="178" Enabled="false" IntervalOffsetType="Auto" IntervalType="Auto" Interval="0" IntervalOffset="0" LineColor="DimGray" /><ScaleView type="System.Windows.Forms.DataVisualization.Charting.AxisScaleView" id="179" /><ScaleBreakStyle type="PerpetuumSoft.Reporting.MSChart.ChartModel.AxisScaleBreakStyle" id="180" /><LabelStyle type="PerpetuumSoft.Reporting.MSChart.ChartModel.LabelStyle" id="181" ForeColor="51, 51, 51" Font="Calibri, 8.25pt" /><MajorGrid type="PerpetuumSoft.Reporting.MSChart.ChartModel.Grid" id="182" Enabled="true" IntervalOffsetType="NotSet" IntervalType="Auto" IntervalOffset="NaN" LineColor="DarkGray" Interval="NaN" /><ScrollBar type="System.Windows.Forms.DataVisualization.Charting.AxisScrollBar" id="183" /><StripLines type="System.Windows.Forms.DataVisualization.Charting.StripLinesCollection" id="184" /><MinorGrid type="PerpetuumSoft.Reporting.MSChart.ChartModel.Grid" id="185" Enabled="false" IntervalOffsetType="Auto" IntervalType="Auto" IntervalOffset="0" LineColor="DimGray" Interval="0" /><CustomLabels type="System.Windows.Forms.DataVisualization.Charting.CustomLabelsCollection" id="186" /></AxisX><AxisY type="PerpetuumSoft.Reporting.MSChart.ChartModel.Axis" id="187" Name="Y (Value) axis" TitleForeColor="51, 51, 51" LineColor="DarkGray" TitleFont="Calibri, 8.25pt" LabelAutoFitStyle="DecreaseFont, StaggeredLabels, LabelsAngleStep30, WordWrap"><MajorTickMark type="PerpetuumSoft.Reporting.MSChart.ChartModel.TickMark" id="188" Enabled="true" IntervalOffsetType="NotSet" IntervalType="Auto" Interval="NaN" IntervalOffset="NaN" LineColor="DarkGray" /><MinorTickMark type="PerpetuumSoft.Reporting.MSChart.ChartModel.TickMark" id="189" Enabled="false" IntervalOffsetType="Auto" IntervalType="Auto" Interval="0" IntervalOffset="0" LineColor="DarkGray" /><ScaleView type="System.Windows.Forms.DataVisualization.Charting.AxisScaleView" id="190" /><ScaleBreakStyle type="PerpetuumSoft.Reporting.MSChart.ChartModel.AxisScaleBreakStyle" id="191" /><LabelStyle type="PerpetuumSoft.Reporting.MSChart.ChartModel.LabelStyle" id="192" ForeColor="51, 51, 51" Font="Calibri, 8.25pt" /><MajorGrid type="PerpetuumSoft.Reporting.MSChart.ChartModel.Grid" id="193" Enabled="true" IntervalOffsetType="NotSet" IntervalType="Auto" IntervalOffset="NaN" LineColor="DarkGray" Interval="NaN" /><ScrollBar type="System.Windows.Forms.DataVisualization.Charting.AxisScrollBar" id="194" /><StripLines type="System.Windows.Forms.DataVisualization.Charting.StripLinesCollection" id="195" /><MinorGrid type="PerpetuumSoft.Reporting.MSChart.ChartModel.Grid" id="196" Enabled="false" IntervalOffsetType="Auto" IntervalType="Auto" IntervalOffset="0" LineColor="DarkGray" Interval="0" /><CustomLabels type="System.Windows.Forms.DataVisualization.Charting.CustomLabelsCollection" id="197" /></AxisY><CursorX type="System.Windows.Forms.DataVisualization.Charting.Cursor" id="198" /></Item></ChartAreas><BorderSkin type="PerpetuumSoft.Reporting.MSChart.ChartModel.BorderSkin" id="199" BackHatchStyle="None" BackImageAlignment="TopLeft" BorderDashStyle="NotSet" BackImageWrapMode="Tile" BackGradientStyle="None" SkinStyle="None" BackImage="" /><Legends type="System.Windows.Forms.DataVisualization.Charting.LegendCollection" id="200" /><Titles type="System.Windows.Forms.DataVisualization.Charting.TitleCollection" id="201"><Item type="PerpetuumSoft.Reporting.MSChart.ChartModel.Title" id="202" Name="Title1" ForeColor="51, 51, 51" Font="Calibri, 9.75pt" BackImage=""><Position type="PerpetuumSoft.Reporting.MSChart.ChartModel.ElementPosition" id="203" /></Item></Titles><PaletteCustomColors type="System.Drawing.Color[]" id="204" elementtype="System.Drawing.Color" length="0" /><Images type="System.Windows.Forms.DataVisualization.Charting.NamedImagesCollection" id="205" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="206" /><Series type="System.Windows.Forms.DataVisualization.Charting.SeriesCollection" id="207"><Item type="PerpetuumSoft.Reporting.MSChart.ChartModel.Series" id="208" MarkerStyle="Circle" Name="Series1" BackGradientStyle="None" LabelFormat="" BorderWidth="5" YValueMembers="Value" MarkerColor="Yellow" ChartTypeName="Line" BackHatchStyle="None" BorderColor="" XValueMember="TimeStampDouble" BackImageTransparentColor="" MarkerBorderColor="Blue" IsVisibleInLegend="true" Font="Microsoft Sans Serif, 8pt" MarkerBorderWidth="3" BackSecondaryColor="" MarkerImageTransparentColor="" Color="ForestGreen" LegendText="" BackImageAlignment="TopLeft" IsValueShownAsLabel="false" XValueType="DateTime" MarkerImage="" Label="" BackImage="" MarkerSize="8" LabelBorderWidth="1" LabelBorderDashStyle="Solid" BackImageWrapMode="Tile" ChartArea="ChartArea1" BorderDashStyle="Solid" LabelForeColor="Black" LabelAngle="0" ChartType="Line"><MyCustomProperties type="PerpetuumSoft.Reporting.MSChart.ChartModel.Design.CustomPropertiesExtender" id="209" /><SmartLabelStyle type="PerpetuumSoft.Reporting.MSChart.ChartModel.SmartLabelStyle" id="210" /><EmptyPointStyle type="PerpetuumSoft.Reporting.MSChart.ChartModel.DataPointCustomProperties" id="211" MarkerStyle="None" Label="" LabelBorderWidth="1" BackGradientStyle="None" LabelFormat="" ToolTip="" MarkerImageTransparentColor="" MarkerImage="" BackHatchStyle="None" BorderColor="" LegendText="" MarkerColor="" BackImageTransparentColor="" MarkerBorderColor="" IsVisibleInLegend="true" MarkerBorderWidth="1" Font="Microsoft Sans Serif, 8pt" BackSecondaryColor="" Color="Transparent" AxisLabel="" BackImageAlignment="TopLeft" IsValueShownAsLabel="false" LabelToolTip="" BorderWidth="0" MarkerSize="5" BackImageWrapMode="Tile" BackImage="" LabelBorderDashStyle="Solid" LegendToolTip="" BorderDashStyle="Solid" LabelForeColor="Black" LabelAngle="0"><CustomPropertiesExtended type="System.Windows.Forms.DataVisualization.Charting.CustomProperties" id="212" /></EmptyPointStyle><Points type="System.Windows.Forms.DataVisualization.Charting.DataPointCollection" id="213" /></Item></Series><Annotations type="System.Windows.Forms.DataVisualization.Charting.AnnotationCollection" id="214" /></Item></Controls><Aggregates type="PerpetuumSoft.Reporting.DOM.AggregateCollection" id="215" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Detail" id="216" Location="0;918.75" CanGrow="true" Size="3300;56.25" CanShrink="true" Name="detail2"><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="217" /><Controls type="PerpetuumSoft.Reporting.DOM.ReportControlCollection" id="218"><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="219" Location="150;0" Size="318.75;56.25" CanShrink="true" Margins="6.25; 6.25; 0; 0" CanGrow="true" Name="textBox1" GrowToBottom="true" StyleName="Normal" StringTrimming="EllipsisCharacter" ExportAsPictureInXaml="false" TextAlign="TopCenter"><Border type="PerpetuumSoft.Framework.Drawing.Border" id="119" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="220"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="221" Expression="GetData(&quot;ReportTables.HeaderData.LastValue&quot;) + &quot;:&quot;" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="222" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="223" Location="900;0" Size="318.75;56.25" CanShrink="true" Margins="9.375; 9.375; 0; 0" CanGrow="true" Name="textBox2" GrowToBottom="true" StyleName="Normal" StringTrimming="EllipsisCharacter" ExportAsPictureInXaml="false" TextAlign="TopCenter"><Border type="PerpetuumSoft.Framework.Drawing.Border" id="119" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="224"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="225" Expression="dataBand2[&quot;Column4&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="226" Size="7.5" Strikeout="Off" Italic="Off" Bold="On" FamilyName="Calibri" Underline="On" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="227" Location="468.75;0" Size="431.25;56.25" CanShrink="true" Margins="9.375; 9.375; 0; 0" CanGrow="true" Name="textBox3" GrowToBottom="true" StyleName="Normal" StringTrimming="EllipsisCharacter" ExportAsPictureInXaml="false" TextAlign="TopCenter"><Border type="PerpetuumSoft.Framework.Drawing.Border" id="119" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="228"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="229" Expression="dataBand2[&quot;LastValue&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="230" Size="7.5" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item></Controls><Aggregates type="PerpetuumSoft.Reporting.DOM.AggregateCollection" id="231" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Detail" id="232" Location="0;1031.25" CanGrow="true" Size="3300;75" CanShrink="true" Name="detail3"><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="233"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="234" Expression="(dataBand2.LineNumber % 2) == 0" PropertyName="NewPageAfter" /></DataBindings><Controls type="PerpetuumSoft.Reporting.DOM.ReportControlCollection" id="235"><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="236" Location="0;0" Size="3300;37.5" Name="textBox4" ExportAsPictureInXaml="false" TextAlign="MiddleLeft"><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="237"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="238" Expression="(dataBand2.LineNumber % 2) != 0" PropertyName="Visible" /></DataBindings></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="239" Location="0;37.5" Size="3300;37.5" Name="textBox5" ExportAsPictureInXaml="false" TextAlign="MiddleLeft"><Border type="PerpetuumSoft.Framework.Drawing.Border" id="27" TopLine="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="240"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="241" Expression="(dataBand2.LineNumber % 2) != 0" PropertyName="Visible" /></DataBindings></Item></Controls><Aggregates type="PerpetuumSoft.Reporting.DOM.AggregateCollection" id="242" /></Item></Controls><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="243" /><Totals type="PerpetuumSoft.Reporting.DOM.DataBandTotalCollection" id="244" /><Aggregates type="PerpetuumSoft.Reporting.DOM.AggregateCollection" id="245" /></Item></Controls></Item></Pages><DataSources type="PerpetuumSoft.Reporting.Data.DocumentDataSourceCollection" id="246" /><StyleSheet type="PerpetuumSoft.Reporting.DOM.StyleSheet" id="247"><Styles type="PerpetuumSoft.Reporting.DOM.StyleCollection" id="248"><Item type="PerpetuumSoft.Reporting.DOM.Style" id="249" Name="HeaderFooter"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="250" Color="51, 51, 51" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="251" Size="9.75" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Style" id="252" Name="HeaderFooter1"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="253" Color="51, 51, 51" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="254" Size="9.75" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Style" id="255" Name="HeaderFooter2"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="256" Color="51, 51, 51" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="257" Size="9.75" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Style" id="258" Name="HeaderFooter3"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="259" Color="51, 51, 51" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="260" Size="9.75" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Style" id="261" Name="Even"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="262" Color="51, 51, 51" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="263" Size="9" FamilyName="Calibri" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Style" id="264" Name="Odd"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="265" Color="51, 51, 51" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="266" Size="9" FamilyName="Calibri" /><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="267" Color="Silver" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Style" id="268" Name="Normal"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="269" Color="51, 51, 51" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="270" Size="9.75" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Style" id="271" Name="TableHeader"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="272" Color="51, 51, 51" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="273" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="274" Color="230, 230, 230" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="85" All="1 Solid Silver" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Style" id="275" Name="TableCell"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="276" Color="51, 51, 51" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="277" Size="8" FamilyName="Calibri" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="85" All="1 Solid Silver" /></Item></Styles></StyleSheet></root>