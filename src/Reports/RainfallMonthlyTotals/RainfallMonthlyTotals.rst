<?xml version="1.0" encoding="utf-8" standalone="yes"?><root type="PerpetuumSoft.Reporting.DOM.Document" id="1" version="2" Name="RainfallMonthlyTotals" IsTemplate="true" Title="Report Title" ImportsString="RainfallMonthlyTotalsNamespace&#xD;&#xA;ReportPluginFramework.Properties&#xD;&#xA;ReportPluginFramework&#xD;&#xA;ReportPluginFramework.ReportData&#xD;&#xA;System.Linq&#xD;&#xA;ReportPluginFramework.ReportData.TimeSeriesComputedStatistics&#xD;&#xA;ReportPluginFramework.ReportData.TimeSeriesData&#xD;&#xA;ReportPluginFramework.ReportData.TimeSeriesDescription&#xD;&#xA;System.Collections.Generic&#xD;&#xA;System.Windows.Forms.DataVisualization.Charting&#xD;&#xA;System.Data&#xD;&#xA;" DocumentGuid="5a6b154e-efd3-477f-b6a3-2a0147eba9dd" MetricUnit="Pixel" DoublePass="true" CommonScript="// Common functions, variables and defaults&#xD;&#xA;//&#xD;&#xA;&#xD;&#xA;public string ReportTitle = &quot;&quot;;&#xD;&#xA;public string CoverageSetting = &quot;&quot;;&#xD;&#xA;&#xD;&#xA;ServiceStack.Logging.ILog Log = ServiceStack.Logging.LogManager.GetLogger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);&#xD;&#xA;&#xD;&#xA;public void DrawChart(PerpetuumSoft.Reporting.MSChart.MicrosoftChart microsoftChart1, DataSet dataSet)&#xD;&#xA;{&#xD;&#xA;  microsoftChart1.Series.Clear();&#xD;&#xA;  &#xD;&#xA;  string unit = (string) GetData(&quot;ReportTables.SourceData.Unit&quot;);&#xD;&#xA;  string timeSeriesParameter = (string) GetData(&quot;ReportTables.SourceData.Parameter&quot;);&#xD;&#xA;  string unitSymbol = (string) GetData(&quot;ReportTables.SourceData.UnitSymbol&quot;);&#xD;&#xA;  &#xD;&#xA;  string yAxisTitle = string.Format(&quot;{0} ({1})&quot;, timeSeriesParameter, unitSymbol);&#xD;&#xA;  microsoftChart1.ChartAreas[0].AxisY.Title = yAxisTitle;&#xD;&#xA; &#xD;&#xA;  // Calculate the Historical Average from values in the DataTable&#xD;&#xA;&#xD;&#xA;  microsoftChart1.ChartAreas[0].AxisX.LabelStyle.Format = &quot;MMM&quot;;&#xD;&#xA;  microsoftChart1.ChartAreas[0].AxisX.MajorTickMark.Interval = 1;&#xD;&#xA;  microsoftChart1.ChartAreas[0].AxisX.MajorTickMark.IntervalType = DateTimeIntervalType.Months;&#xD;&#xA;  microsoftChart1.ChartAreas[0].AxisX.IntervalType = DateTimeIntervalType.Months;&#xD;&#xA;  microsoftChart1.ChartAreas[0].AxisX.Interval = 1;&#xD;&#xA;  &#xD;&#xA;  microsoftChart1.ChartAreas[0].AxisX.MajorGrid.Interval = 1;&#xD;&#xA;  microsoftChart1.ChartAreas[0].AxisX.MajorGrid.IntervalType = DateTimeIntervalType.Months;&#xD;&#xA;&#xD;&#xA;  System.Data.DataTable groupBy = dataSet.Tables[&quot;GroupBy&quot;];&#xD;&#xA;  int numGroups = groupBy.Rows.Count;&#xD;&#xA;&#xD;&#xA;  int chartYear = 2000; // choose any year to map a year's values&#xD;&#xA;&#xD;&#xA;  double[] total = new double[12];&#xD;&#xA;  double[] cnt = new double[12];&#xD;&#xA;  for (int i = 0; i &lt; 12; i++)&#xD;&#xA;  {&#xD;&#xA;    total[i] = 0;&#xD;&#xA;    cnt[i] = 0;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  foreach (DataRow groupRow in groupBy.Rows)&#xD;&#xA;  {&#xD;&#xA;    DataRow[] groupPoints = groupRow.GetChildRows(&quot;GroupByMonthlyStatistic&quot;);&#xD;&#xA;    foreach (DataRow groupPoint in groupPoints)&#xD;&#xA;    {&#xD;&#xA;      int mon = (int) groupPoint[&quot;Month&quot;];    &#xD;&#xA;      double value = (double) groupPoint[&quot;Value&quot;];&#xD;&#xA;      &#xD;&#xA;      if (!double.IsNaN(value))&#xD;&#xA;      {&#xD;&#xA;        total[mon - 1] += (double) value;&#xD;&#xA;        cnt[mon - 1] += 1;&#xD;&#xA;      }&#xD;&#xA;    }   &#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  System.Drawing.Color avgColor = System.Drawing.Color.DodgerBlue;&#xD;&#xA;  System.Drawing.Color prevYearColor = System.Drawing.Color.SeaGreen;&#xD;&#xA;  System.Drawing.Color currYearColor = System.Drawing.Color.MidnightBlue;&#xD;&#xA;&#xD;&#xA;  Series srsAvg = microsoftChart1.Series.Add(&quot;Historical Average&quot;);&#xD;&#xA;  srsAvg.Color = avgColor;&#xD;&#xA;  srsAvg.SmartLabelStyle.Enabled = false;&#xD;&#xA;&#xD;&#xA;  for (int i = 0; i &lt; 12; i++)&#xD;&#xA;  {&#xD;&#xA;    double mon = (new DateTime(chartYear, i + 1, 1)).ToOADate();&#xD;&#xA;   &#xD;&#xA;    double avg = (cnt[i] &gt; 0) ? total[i] / cnt[i] : double.NaN;&#xD;&#xA;    DataPoint dp = new DataPoint(mon, avg);&#xD;&#xA;    dp.Label = avg.ToString((unit == &quot;in&quot;) ? &quot;F1&quot; : &quot;F0&quot;);&#xD;&#xA;    dp.LabelForeColor = avgColor;&#xD;&#xA;    dp.LabelAngle = -45;&#xD;&#xA;    if (double.IsNaN(avg)) dp.IsEmpty = true;&#xD;&#xA;    srsAvg.Points.Add(dp);&#xD;&#xA;  }&#xD;&#xA;   &#xD;&#xA;  foreach (DataRow groupRow in groupBy.Rows)&#xD;&#xA;  {&#xD;&#xA;    int groupRowIndex = groupBy.Rows.IndexOf(groupRow);&#xD;&#xA;    if (groupRowIndex &lt; numGroups - 2) continue;&#xD;&#xA;    &#xD;&#xA;    System.Drawing.Color yearColor = (groupRowIndex == numGroups - 1) ? currYearColor : prevYearColor;&#xD;&#xA;    int year = (int) groupRow[&quot;Year&quot;];&#xD;&#xA;  &#xD;&#xA;    Series series = microsoftChart1.Series.Add(year.ToString());&#xD;&#xA;    series.Color = yearColor;&#xD;&#xA;    series.SmartLabelStyle.Enabled = false;&#xD;&#xA;&#xD;&#xA;    DataRow[] groupPoints = groupRow.GetChildRows(&quot;GroupByMonthlyStatistic&quot;);&#xD;&#xA;    foreach (System.Data.DataRow groupPoint in groupPoints)&#xD;&#xA;    {&#xD;&#xA;      int month = (int) groupPoint[&quot;Month&quot;];&#xD;&#xA;      double chartTime = (new DateTime(chartYear, month, 1)).ToOADate();&#xD;&#xA;      double value = (double) groupPoint[&quot;Value&quot;];  &#xD;&#xA;      if (!double.IsNaN(value))&#xD;&#xA;      {&#xD;&#xA;        DataPoint dp = new DataPoint(chartTime, value);&#xD;&#xA;        dp.Label = value.ToString((unit == &quot;in&quot;) ? &quot;F1&quot; : &quot;F0&quot;);&#xD;&#xA;        dp.LabelForeColor = yearColor;&#xD;&#xA;        dp.LabelAngle = -45;&#xD;&#xA;        series.Points.Add(dp);&#xD;&#xA;      }&#xD;&#xA;      else&#xD;&#xA;      {&#xD;&#xA;        DataPoint dp = new DataPoint(chartTime, double.NaN);&#xD;&#xA;        dp.IsEmpty = true;&#xD;&#xA;        series.Points.Add(dp);&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  foreach (Series s in microsoftChart1.Series)&#xD;&#xA;  {&#xD;&#xA;    s.ChartType = SeriesChartType.Column;&#xD;&#xA;    s.MarkerStyle = MarkerStyle.None;&#xD;&#xA;  &#xD;&#xA;    s.EmptyPointStyle.BorderWidth = 0;&#xD;&#xA;    s.EmptyPointStyle.MarkerStyle = MarkerStyle.None;&#xD;&#xA;    s.XValueType = ChartValueType.DateTime;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;}&#xD;&#xA;" ScriptLanguage="CSharp" GridStep="18.75" GenerateScript="if (Engine.IsSecondPass) return;&#xD;&#xA;&#xD;&#xA;ServiceStack.Logging.ILog Log = ServiceStack.Logging.LogManager.GetLogger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);&#xD;&#xA;&#xD;&#xA;Log.Debug(&quot;Begin Document GenerateScript !!!!!!!!!!!!!!**********************************************************&quot;);&#xD;&#xA;try&#xD;&#xA;{&#xD;&#xA;  System.Data.DataSet dataSet = (System.Data.DataSet) Engine.Objects[&quot;ReportTables&quot;];&#xD;&#xA;  RunFileReportRequest runReportRequest = (RunFileReportRequest) dataSet.Tables[&quot;RunReportRequest&quot;].Rows[0][&quot;RunReportRequest&quot;];&#xD;&#xA;  ReportTitle = &quot;Rainfall - Monthly Totals&quot;; //(string) dataSet.Tables[&quot;ReportSettings&quot;].Rows[0][&quot;ReportTitle&quot;];&#xD;&#xA;  Guid timeSeriesUniqueId = (Guid) dataSet.Tables[&quot;SourceData&quot;].Rows[0][&quot;UniqueId&quot;];&#xD;&#xA;  &#xD;&#xA;  string dllName = (string) dataSet.Tables[&quot;RunReportRequest&quot;].Rows[0][&quot;DllName&quot;];&#xD;&#xA;  Log.DebugFormat(&quot;{0} - Document GenerateScript input = {1}&quot;, dllName, timeSeriesUniqueId);&#xD;&#xA;&#xD;&#xA;  string GroupBy = &quot;Year&quot;;&#xD;&#xA;    &#xD;&#xA;  Common common = (Common) dataSet.Tables[&quot;RunReportRequest&quot;].Rows[0][&quot;CommonLibrary&quot;];&#xD;&#xA;  &#xD;&#xA;  CoverageOptions coverageOptions = common.GetCoverageOptions();&#xD;&#xA;&#xD;&#xA;  InterpolationType interpolationType = (InterpolationType) dataSet.Tables[&quot;SourceData&quot;].Rows[0][&quot;InterpolationType&quot;];&#xD;&#xA;  if (interpolationType == InterpolationType.DiscreteValues) coverageOptions.RequiresMinimumCoverage = false;&#xD;&#xA;&#xD;&#xA;  CoverageSetting = common.GetCoverageString(coverageOptions);&#xD;&#xA;    &#xD;&#xA;  DateTimeOffsetInterval timeseriesTimeRange = (DateTimeOffsetInterval) dataSet.Tables[&quot;SourceData&quot;].Rows[0][&quot;TimeSeriesInterval&quot;];&#xD;&#xA;  DateTimeOffsetInterval adjustedInterval = (DateTimeOffsetInterval) dataSet.Tables[&quot;ReportPeriods&quot;].Rows[0][&quot;GroupBy&quot; + GroupBy];&#xD;&#xA;&#xD;&#xA;  Log.InfoFormat(&quot;period selected = {0}, timeseries timerange = {1}, adjusted timerange = {2} for GroupBy = {3}&quot;,&#xD;&#xA;    common.TimeRangeString(runReportRequest.Interval), common.TimeRangeString(timeseriesTimeRange), common.TimeRangeString(adjustedInterval), GroupBy);&#xD;&#xA;&#xD;&#xA;  //&#xD;&#xA;  if (dataSet.Tables.Contains(&quot;MonthlyStatistic&quot;))dataSet.Tables[&quot;MonthlyStatistic&quot;].Rows.Clear();&#xD;&#xA;  if (dataSet.Tables.Contains(&quot;GroupBy&quot;)) dataSet.Tables[&quot;GroupBy&quot;].Rows.Clear();&#xD;&#xA;  if (dataSet.Relations.Contains(&quot;GroupByMonthlyStatistic&quot;)) dataSet.Relations.Remove(&quot;GroupByMonthlyStatistic&quot;);&#xD;&#xA;  if (dataSet.Tables.Contains(&quot;MonthlyStatistic&quot;)) dataSet.Tables[&quot;MonthlyStatistic&quot;].Constraints.Remove(&quot;GroupByMonthlyStatistic&quot;);&#xD;&#xA;    &#xD;&#xA;  if (dataSet.Tables.Contains(&quot;MonthlyStatistic&quot;))dataSet.Tables.Remove(&quot;MonthlyStatistic&quot;);&#xD;&#xA;  if (dataSet.Tables.Contains(&quot;GroupBy&quot;)) dataSet.Tables.Remove(&quot;GroupBy&quot;);&#xD;&#xA;  //&#xD;&#xA;  &#xD;&#xA;  // Make the Monthly Sum data tables and add to DataSet&#xD;&#xA;  &#xD;&#xA;  GroupByHandler groupByHandler = new GroupByHandler(common);&#xD;&#xA;  System.Data.DataTable groupByTable = groupByHandler.GetGroupByTable(&quot;GroupBy&quot;);&#xD;&#xA;  dataSet.Tables.Add(groupByTable);&#xD;&#xA;    &#xD;&#xA;  groupByHandler.AddRowsToGroupBy(groupByTable, &quot;Year&quot;, adjustedInterval.Start.Value, adjustedInterval.End.Value);&#xD;&#xA;   &#xD;&#xA;  System.Data.DataTable statsTable = new System.Data.DataTable(&quot;MonthlyStatistic&quot;);&#xD;&#xA;  statsTable.Columns.Add(&quot;Year&quot;, typeof(int));&#xD;&#xA;  statsTable.Columns.Add(&quot;Month&quot;, typeof(int));&#xD;&#xA;  statsTable.Columns.Add(&quot;Value&quot;, typeof(double));&#xD;&#xA;    &#xD;&#xA;  dataSet.Tables.Add(statsTable);   &#xD;&#xA;  dataSet.Relations.Add(&quot;GroupByMonthlyStatistic&quot;, groupByTable.Columns[&quot;Year&quot;], statsTable.Columns[&quot;Year&quot;]);&#xD;&#xA;  &#xD;&#xA;  // Calculate the Monthy Sum statistics over the adjusted interval&#xD;&#xA;&#xD;&#xA;  List&lt;TimeSeriesPoint&gt; monthlyStatistics = common.GetComputedStatisticsPoints(timeSeriesUniqueId,&#xD;&#xA;    adjustedInterval.Start, adjustedInterval.End,&#xD;&#xA;    StatisticType.Sum, StatisticPeriod.Monthly, coverageOptions.RequiresMinimumCoverage, coverageOptions.CoverageThreshold);&#xD;&#xA;    &#xD;&#xA;  if (monthlyStatistics.Count == 0) return;&#xD;&#xA;&#xD;&#xA;  int binAdjust = common.GetBinAdjustment(timeSeriesUniqueId); // Precip put on EndBin so must adjust timestamp&#xD;&#xA;&#xD;&#xA;  foreach (TimeSeriesPoint point in monthlyStatistics)&#xD;&#xA;  {&#xD;&#xA;    DataRow row = statsTable.NewRow();&#xD;&#xA;      &#xD;&#xA;    DateTimeOffset pointTimestamp = point.Timestamp.AddMonths(binAdjust);&#xD;&#xA;    &#xD;&#xA;    row[&quot;Year&quot;] = pointTimestamp.Year;&#xD;&#xA;    row[&quot;Month&quot;] = pointTimestamp.Month;&#xD;&#xA;    row[&quot;Value&quot;] = (point.Value.HasValue) ? point.Value.Value : double.NaN;&#xD;&#xA;      &#xD;&#xA;    statsTable.Rows.Add(row);&#xD;&#xA;  }&#xD;&#xA;  &#xD;&#xA;  Log.Debug(&quot;End Document GenerateScript !!!!!!!!!!!!!!**********************************************************&quot;);&#xD;&#xA;}&#xD;&#xA;catch (Exception exp)&#xD;&#xA;{&#xD;&#xA;  System.Data.DataSet dataSet = (System.Data.DataSet) Engine.Objects[&quot;ReportTables&quot;];&#xD;&#xA;  string dllName = (string) dataSet.Tables[&quot;RunReportRequest&quot;].Rows[0][&quot;DllName&quot;];&#xD;&#xA;  Log.Error(&quot;Document GenerateScript - &quot; + dllName, exp);&#xD;&#xA;}&#xD;&#xA;"><Parameters type="PerpetuumSoft.Reporting.DOM.ParameterCollection" id="2" /><PageContent type="PerpetuumSoft.Reporting.DOM.Wrappers.ContentParametersDictionary" id="3" /><Pages type="PerpetuumSoft.Reporting.DOM.PageCollection" id="4"><Item type="PerpetuumSoft.Reporting.DOM.Page" id="5" Margins="75; 75; 150; 150" Size="3300;2550" StyleName="Normal" Name="page1" Location="0;0" PaperKind="Letter" Orientation="Landscape"><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="6" /><Controls type="PerpetuumSoft.Reporting.DOM.ReportControlCollection" id="7"><Item type="PerpetuumSoft.Reporting.DOM.PageHeader" id="8" StyleName="PageHeader" Location="0;75" Name="pageHeader" Size="3300;562.5"><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="9" /><Controls type="PerpetuumSoft.Reporting.DOM.ReportControlCollection" id="10"><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="11" Location="112.5;0" Size="3037.5;112.5" Name="textBoxPageHeader1" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="12" Color="33, 64, 154" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="13"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="14" Expression="GetData(&quot;ReportTables.ReportData.PageHeader1&quot;)" PropertyName="Value" /></DataBindings><RawValue type="System.String" id="15" value="Aquatic Informatics Data Management Software" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="16" Size="12" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="17" Location="112.5;75" Size="3037.5;75" Name="textBoxPageHeader2" StyleName="PageHeader" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="18" Color="0, 131, 215" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="19"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="20" Expression="GetData(&quot;ReportTables.ReportData.PageHeader2&quot;)" PropertyName="Value" /></DataBindings><RawValue type="System.String" id="21" value="Faster Analysis. Better Decisions." /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="22" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Picture" id="23" Location="150;31.25" Size="643.75;187.5" SizeMode="Uniform" Name="logo" StyleName="PageHeader" GenerateScript="var encodedImage = GetData(&quot;ReportTables.OrganizationIcon.EncodedImage&quot;) as string;&#xD;&#xA;var bytes = Convert.FromBase64String(encodedImage);&#xD;&#xA;&#xD;&#xA;using (var memoryStream = new System.IO.MemoryStream(bytes))&#xD;&#xA;{&#xD;&#xA;  logo.Image = new System.Drawing.Bitmap(&#xD;&#xA;    System.Drawing.Image.FromStream(memoryStream));&#xD;&#xA;}" ExportAsPictureInXaml="false"><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="24"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="25" Expression="GetData(&quot;ReportTables.OrganizationIcon.SupportUrl&quot;)" PropertyName="Hyperlink" /></DataBindings></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="26" Location="0;281.25" Size="3300;118.11023712158203" Name="textBoxPageHeaderLine" ExportAsPictureInXaml="false" TextAlign="MiddleLeft"><Border type="PerpetuumSoft.Framework.Drawing.Border" id="27" TopLine="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="28" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="29" Location="150;300" Size="1500;75" Name="reportTitle" StyleName="PageHeader" GenerateScript="reportTitle.Document.Title = ReportTitle;" ExportAsPictureInXaml="false" TextAlign="MiddleLeft"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="30" Color="33, 64, 154" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="31"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="32" Expression="ReportTitle" PropertyName="Value" /></DataBindings><RawValue type="System.String" id="33" value="Wind Rose" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="34" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="35" Location="150;356.25" Size="1500;56.25" Name="textBoxSubTitle" ExportAsPictureInXaml="false" TextAlign="MiddleLeft"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="36" Color="51, 51, 51" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="37"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="38" Expression="GetData(&quot;ReportTables.ReportData.ReportSubTitle&quot;)" PropertyName="Value" /></DataBindings><RawValue type="System.String" id="39" value="Title" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="40" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="41" Location="2418.75;300" Size="731.25;75" Name="textBoxPageNumber" StyleName="PageNumber" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="42" Color="51, 51, 51" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="43"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="44" Expression="Now.ToString(&quot;MMM d, yyyy&quot;) + &quot; | &quot; + PageNumber.ToString() + &quot; &quot; + Resources.Of + &quot; &quot; + PageCount.ToString()" PropertyName="Value" /></DataBindings><RawValue type="System.String" id="45" value="DISCLAIMER: The accuracy and reliability of this data is not guaranteed. Aquatic Informatics Inc. accepts no liability for its use in any way. It is the responsibility of the reader to establish the suitability of the information provided in this report for any purpose. No warranty expressed or implied is made regarding the accuracy, completeness, currency, relevance or suitability for any particular purpose of the information provided in this report." /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="46" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="47" Location="1668.75;356.25" Size="1481.25;56.25" Name="textBoxPeriodSelected" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="48" Color="51, 51, 51" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="49"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="50" Expression="GetData(&quot;ReportTables.ReportData.PeriodSelectedInformation&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="51" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="52" Location="0;431.25" Size="3300;103.125" Name="textBoxGrayBackground" ExportAsPictureInXaml="false" TextAlign="TopLeft"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="53" Color="230, 230, 230" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="54" All="1 Solid 204, 204, 204" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="55" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="56" Location="150;431.25" Size="2606.25;56.25" Name="textBoxInformation1" StyleName="Normal" ExportAsPictureInXaml="false" TextAlign="MiddleLeft"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="57" Color="51, 51, 51" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="58"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="59" Expression="Resources.SourceData + &quot;: &quot; + GetData(&quot;ReportTables.SourceData.TimeSeriesInformation&quot;).ToString()" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="60" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="61" Location="150;468.75" Size="2606.25;56.25" Name="textBoxInformation2" StyleName="Normal" ExportAsPictureInXaml="false" TextAlign="MiddleLeft"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="62" Color="51, 51, 51" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="63"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="64" Expression="GetData(&quot;ReportTables.SourceData.TimeSeriesTimeRangeInformation&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="65" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="66" Location="2737.5;431.25" Size="393.75;56.25" Name="textBoxUnitInformation" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="67" Color="51, 51, 51" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="68"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="69" Expression="GetData(&quot;ReportTables.SourceData.UnitInformation&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="70" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="71" Location="1762.5;468.75" Size="1368.75;56.25" Name="textBox15" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="72" Color="51, 51, 51" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="73"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="74" Expression="CoverageSetting" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="75" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item></Controls></Item><Item type="PerpetuumSoft.Reporting.DOM.Detail" id="76" Location="0;712.5" Size="3300;1706.25" Name="detail1"><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="77" /><Controls type="PerpetuumSoft.Reporting.DOM.ReportControlCollection" id="78"><Item type="PerpetuumSoft.Reporting.MSChart.MicrosoftChart" id="79" Location="150;18.75" BorderlineColor="Silver" BorderlineDashStyle="Solid" Size="3000;1631.25" BorderlineWidth="2" BackColor="WhiteSmoke" StyleName="Normal" GenerateScript="ServiceStack.Logging.ILog Log = ServiceStack.Logging.LogManager.GetLogger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);&#xD;&#xA;Log.Debug(&quot;Begin Chart GenerateScript for Rainfall - Monthly Totals&quot;);&#xD;&#xA;&#xD;&#xA;try&#xD;&#xA;{&#xD;&#xA;  //RainfallMonthlyTotalsNamespace.ReportSpecificFunctions.DrawChart(microsoftChart1, (DataSet) Engine.Objects[&quot;ReportTables&quot;]);&#xD;&#xA;  DrawChart(microsoftChart1, (DataSet) Engine.Objects[&quot;ReportTables&quot;]);&#xD;&#xA;&#xD;&#xA;} &#xD;&#xA;catch (Exception exp)&#xD;&#xA;{&#xD;&#xA;  Log.Error(&quot;Chart GenerateScript&quot;, exp);&#xD;&#xA;}" Name="microsoftChart1"><ChartAreas type="System.Windows.Forms.DataVisualization.Charting.ChartAreaCollection" id="80"><Item type="PerpetuumSoft.Reporting.MSChart.ChartModel.ChartArea" id="81" Name="ChartArea1" BorderColor="Transparent" BackColor="White" BackImage=""><InnerPlotPosition type="PerpetuumSoft.Reporting.MSChart.ChartModel.ElementPosition" id="82" /><Area3DStyle type="PerpetuumSoft.Reporting.MSChart.ChartModel.ChartArea3DStyle" id="83" /><CursorY type="System.Windows.Forms.DataVisualization.Charting.Cursor" id="84" /><Position type="PerpetuumSoft.Reporting.MSChart.ChartModel.ElementPosition" id="85" /><AxisX2 type="PerpetuumSoft.Reporting.MSChart.ChartModel.Axis" id="86" Name="Secondary X axis" LineColor="DarkGray" TitleFont="Calibri, 8.25pt" LabelAutoFitStyle="DecreaseFont, StaggeredLabels, LabelsAngleStep30, WordWrap"><MajorTickMark type="PerpetuumSoft.Reporting.MSChart.ChartModel.TickMark" id="87" Enabled="true" IntervalOffsetType="NotSet" IntervalType="Auto" Interval="NaN" IntervalOffset="NaN" LineColor="DarkGray" /><MinorTickMark type="PerpetuumSoft.Reporting.MSChart.ChartModel.TickMark" id="88" Enabled="false" IntervalOffsetType="Auto" IntervalType="Auto" Interval="0" IntervalOffset="0" LineColor="DarkGray" /><ScaleView type="System.Windows.Forms.DataVisualization.Charting.AxisScaleView" id="89" /><ScaleBreakStyle type="PerpetuumSoft.Reporting.MSChart.ChartModel.AxisScaleBreakStyle" id="90" /><LabelStyle type="PerpetuumSoft.Reporting.MSChart.ChartModel.LabelStyle" id="91" ForeColor="51, 51, 51" Font="Calibri, 8.25pt" /><MajorGrid type="PerpetuumSoft.Reporting.MSChart.ChartModel.Grid" id="92" Enabled="true" IntervalOffsetType="NotSet" IntervalType="Auto" IntervalOffset="NaN" LineColor="DarkGray" Interval="NaN" /><ScrollBar type="System.Windows.Forms.DataVisualization.Charting.AxisScrollBar" id="93" /><StripLines type="System.Windows.Forms.DataVisualization.Charting.StripLinesCollection" id="94" /><MinorGrid type="PerpetuumSoft.Reporting.MSChart.ChartModel.Grid" id="95" Enabled="false" IntervalOffsetType="Auto" IntervalType="Auto" IntervalOffset="0" LineColor="DarkGray" Interval="0" /><CustomLabels type="System.Windows.Forms.DataVisualization.Charting.CustomLabelsCollection" id="96" /></AxisX2><AxisY2 type="PerpetuumSoft.Reporting.MSChart.ChartModel.Axis" id="97" Name="Secondary Y (Value) axis" LineColor="DarkGray" TitleFont="Calibri, 8.25pt" LabelAutoFitStyle="DecreaseFont, StaggeredLabels, LabelsAngleStep30, WordWrap"><MajorTickMark type="PerpetuumSoft.Reporting.MSChart.ChartModel.TickMark" id="98" Enabled="true" IntervalOffsetType="NotSet" IntervalType="Auto" Interval="NaN" IntervalOffset="NaN" LineColor="DarkGray" /><MinorTickMark type="PerpetuumSoft.Reporting.MSChart.ChartModel.TickMark" id="99" Enabled="false" IntervalOffsetType="Auto" IntervalType="Auto" Interval="0" IntervalOffset="0" LineColor="DarkGray" /><ScaleView type="System.Windows.Forms.DataVisualization.Charting.AxisScaleView" id="100" /><ScaleBreakStyle type="PerpetuumSoft.Reporting.MSChart.ChartModel.AxisScaleBreakStyle" id="101" /><LabelStyle type="PerpetuumSoft.Reporting.MSChart.ChartModel.LabelStyle" id="102" ForeColor="51, 51, 51" Font="Calibri, 8.25pt" /><MajorGrid type="PerpetuumSoft.Reporting.MSChart.ChartModel.Grid" id="103" Enabled="true" IntervalOffsetType="NotSet" IntervalType="Auto" IntervalOffset="NaN" LineColor="DarkGray" Interval="NaN" /><ScrollBar type="System.Windows.Forms.DataVisualization.Charting.AxisScrollBar" id="104" /><StripLines type="System.Windows.Forms.DataVisualization.Charting.StripLinesCollection" id="105" /><MinorGrid type="PerpetuumSoft.Reporting.MSChart.ChartModel.Grid" id="106" Enabled="false" IntervalOffsetType="Auto" IntervalType="Auto" IntervalOffset="0" LineColor="DarkGray" Interval="0" /><CustomLabels type="System.Windows.Forms.DataVisualization.Charting.CustomLabelsCollection" id="107" /></AxisY2><AxisX type="PerpetuumSoft.Reporting.MSChart.ChartModel.Axis" id="108" Name="X axis" LineColor="DarkGray" TitleFont="Calibri, 8.25pt" LabelAutoFitStyle="DecreaseFont, StaggeredLabels, LabelsAngleStep30, WordWrap"><MajorTickMark type="PerpetuumSoft.Reporting.MSChart.ChartModel.TickMark" id="109" Enabled="true" IntervalOffsetType="NotSet" IntervalType="Auto" Interval="NaN" IntervalOffset="NaN" LineColor="DarkGray" /><MinorTickMark type="PerpetuumSoft.Reporting.MSChart.ChartModel.TickMark" id="110" Enabled="false" IntervalOffsetType="Auto" IntervalType="Auto" Interval="0" IntervalOffset="0" LineColor="DimGray" /><ScaleView type="System.Windows.Forms.DataVisualization.Charting.AxisScaleView" id="111" /><ScaleBreakStyle type="PerpetuumSoft.Reporting.MSChart.ChartModel.AxisScaleBreakStyle" id="112" /><LabelStyle type="PerpetuumSoft.Reporting.MSChart.ChartModel.LabelStyle" id="113" ForeColor="51, 51, 51" Font="Calibri, 8.25pt" /><MajorGrid type="PerpetuumSoft.Reporting.MSChart.ChartModel.Grid" id="114" Enabled="true" IntervalOffsetType="NotSet" IntervalType="Auto" IntervalOffset="NaN" LineColor="DarkGray" Interval="NaN" /><ScrollBar type="System.Windows.Forms.DataVisualization.Charting.AxisScrollBar" id="115" /><StripLines type="System.Windows.Forms.DataVisualization.Charting.StripLinesCollection" id="116" /><MinorGrid type="PerpetuumSoft.Reporting.MSChart.ChartModel.Grid" id="117" Enabled="false" IntervalOffsetType="Auto" IntervalType="Auto" IntervalOffset="0" LineColor="DimGray" Interval="0" /><CustomLabels type="System.Windows.Forms.DataVisualization.Charting.CustomLabelsCollection" id="118" /></AxisX><AxisY type="PerpetuumSoft.Reporting.MSChart.ChartModel.Axis" id="119" Name="Y (Value) axis" LineColor="DarkGray" TitleFont="Calibri, 8.25pt" LabelAutoFitStyle="DecreaseFont, StaggeredLabels, LabelsAngleStep30, WordWrap"><MajorTickMark type="PerpetuumSoft.Reporting.MSChart.ChartModel.TickMark" id="120" Enabled="true" IntervalOffsetType="NotSet" IntervalType="Auto" Interval="NaN" IntervalOffset="NaN" LineColor="DarkGray" /><MinorTickMark type="PerpetuumSoft.Reporting.MSChart.ChartModel.TickMark" id="121" Enabled="false" IntervalOffsetType="Auto" IntervalType="Auto" Interval="0" IntervalOffset="0" LineColor="DarkGray" /><ScaleView type="System.Windows.Forms.DataVisualization.Charting.AxisScaleView" id="122" /><ScaleBreakStyle type="PerpetuumSoft.Reporting.MSChart.ChartModel.AxisScaleBreakStyle" id="123" /><LabelStyle type="PerpetuumSoft.Reporting.MSChart.ChartModel.LabelStyle" id="124" ForeColor="51, 51, 51" Font="Calibri, 8.25pt" /><MajorGrid type="PerpetuumSoft.Reporting.MSChart.ChartModel.Grid" id="125" Enabled="true" IntervalOffsetType="NotSet" IntervalType="Auto" IntervalOffset="NaN" LineColor="DarkGray" Interval="NaN" /><ScrollBar type="System.Windows.Forms.DataVisualization.Charting.AxisScrollBar" id="126" /><StripLines type="System.Windows.Forms.DataVisualization.Charting.StripLinesCollection" id="127" /><MinorGrid type="PerpetuumSoft.Reporting.MSChart.ChartModel.Grid" id="128" Enabled="false" IntervalOffsetType="Auto" IntervalType="Auto" IntervalOffset="0" LineColor="DarkGray" Interval="0" /><CustomLabels type="System.Windows.Forms.DataVisualization.Charting.CustomLabelsCollection" id="129" /></AxisY><CursorX type="System.Windows.Forms.DataVisualization.Charting.Cursor" id="130" /></Item></ChartAreas><BorderSkin type="PerpetuumSoft.Reporting.MSChart.ChartModel.BorderSkin" id="131" BackHatchStyle="None" BackImageAlignment="TopLeft" BorderDashStyle="NotSet" BackImageWrapMode="Tile" BackGradientStyle="None" SkinStyle="None" BackImage="" /><Legends type="System.Windows.Forms.DataVisualization.Charting.LegendCollection" id="132"><Item type="PerpetuumSoft.Reporting.MSChart.ChartModel.Legend" id="133" IsTextAutoFit="false" Font="Calibri, 8.25pt" Docking="Top" BackImage="" ForeColor="51, 51, 51" Name="Legend1"><Position type="PerpetuumSoft.Reporting.MSChart.ChartModel.ElementPosition" id="134" /><CellColumns type="System.Windows.Forms.DataVisualization.Charting.LegendCellColumnCollection" id="135" /><CustomItems type="System.Windows.Forms.DataVisualization.Charting.LegendItemsCollection" id="136" /></Item></Legends><Titles type="System.Windows.Forms.DataVisualization.Charting.TitleCollection" id="137" /><PaletteCustomColors type="System.Drawing.Color[]" id="138" elementtype="System.Drawing.Color" length="0" /><Images type="System.Windows.Forms.DataVisualization.Charting.NamedImagesCollection" id="139" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="140" /><Series type="System.Windows.Forms.DataVisualization.Charting.SeriesCollection" id="141"><Item type="PerpetuumSoft.Reporting.MSChart.ChartModel.Series" id="142" MarkerStyle="Circle" Name="Series1" BackGradientStyle="None" LabelFormat="" BorderWidth="5" YValueMembers="Value" Legend="Legend1" MarkerColor="Yellow" ChartTypeName="Line" BackHatchStyle="None" BorderColor="" XValueMember="TimeStampDouble" BackImageTransparentColor="" MarkerBorderColor="Blue" IsVisibleInLegend="true" Font="Microsoft Sans Serif, 8pt" MarkerBorderWidth="3" BackSecondaryColor="" MarkerImageTransparentColor="" Color="ForestGreen" LegendText="" BackImageAlignment="TopLeft" IsValueShownAsLabel="false" XValueType="DateTime" MarkerImage="" Label="" BackImage="" MarkerSize="8" LabelBorderWidth="1" LabelBorderDashStyle="Solid" BackImageWrapMode="Tile" ChartArea="ChartArea1" BorderDashStyle="Solid" LabelForeColor="Black" LabelAngle="0" ChartType="Line"><MyCustomProperties type="PerpetuumSoft.Reporting.MSChart.ChartModel.Design.CustomPropertiesExtender" id="143" /><SmartLabelStyle type="PerpetuumSoft.Reporting.MSChart.ChartModel.SmartLabelStyle" id="144" /><EmptyPointStyle type="PerpetuumSoft.Reporting.MSChart.ChartModel.DataPointCustomProperties" id="145" MarkerStyle="None" Label="" LabelBorderWidth="1" BackGradientStyle="None" LabelFormat="" ToolTip="" MarkerImageTransparentColor="" MarkerImage="" BackHatchStyle="None" BorderColor="" LegendText="" MarkerColor="" BackImageTransparentColor="" MarkerBorderColor="" IsVisibleInLegend="true" MarkerBorderWidth="1" Font="Microsoft Sans Serif, 8pt" BackSecondaryColor="" Color="Transparent" AxisLabel="" BackImageAlignment="TopLeft" IsValueShownAsLabel="false" LabelToolTip="" BorderWidth="0" MarkerSize="5" BackImageWrapMode="Tile" BackImage="" LabelBorderDashStyle="Solid" LegendToolTip="" BorderDashStyle="Solid" LabelForeColor="Black" LabelAngle="0"><CustomPropertiesExtended type="System.Windows.Forms.DataVisualization.Charting.CustomProperties" id="146" /></EmptyPointStyle><Points type="System.Windows.Forms.DataVisualization.Charting.DataPointCollection" id="147" /></Item></Series><Annotations type="System.Windows.Forms.DataVisualization.Charting.AnnotationCollection" id="148" /></Item></Controls><Aggregates type="PerpetuumSoft.Reporting.DOM.AggregateCollection" id="149" /></Item><Item type="PerpetuumSoft.Reporting.DOM.PageFooter" id="150" StyleName="PageFooter" Location="0;2475" Name="pageFooter" Size="3300;150"><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="151" /><Controls type="PerpetuumSoft.Reporting.DOM.ReportControlCollection" id="152"><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="153" Location="0;0" Size="3300;29.528125762939453" Name="textBoxPageFooterLine" ExportAsPictureInXaml="false"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="154" Color="110, 112, 110" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="27" TopLine="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="155" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="156" Location="168.75;0" Size="2981.25;131.25" CanGrow="true" Name="textBoxPageFooter1" StyleName="Normal" ExportAsPictureInXaml="false" TextAlign="BottomLeft"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="157" Color="110, 112, 110" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="158"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="159" Expression="GetData(&quot;ReportTables.ReportData.FooterDisclaimer&quot;)" PropertyName="Value" /></DataBindings><RawValue type="System.String" id="160" value="DISCLAIMER - AQUARIUS is the leading software suite to acquire, process, model, and publish water data. Environmental monitoring agencies worldwide trust AQUARIUS to produce accurate water information in real-time. A modern design delivers the latest water science in an intuitive experience." /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="161" Size="7" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item></Controls></Item></Controls></Item></Pages><DataSources type="PerpetuumSoft.Reporting.Data.DocumentDataSourceCollection" id="162" /><StyleSheet type="PerpetuumSoft.Reporting.DOM.StyleSheet" id="163"><Styles type="PerpetuumSoft.Reporting.DOM.StyleCollection" id="164"><Item type="PerpetuumSoft.Reporting.DOM.Style" id="165" Name="HeaderFooter"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="166" Color="51, 51, 51" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="167" Size="9.75" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Style" id="168" Name="HeaderFooter1"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="169" Color="51, 51, 51" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="170" Size="9.75" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Style" id="171" Name="HeaderFooter2"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="172" Color="51, 51, 51" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="173" Size="9.75" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Style" id="174" Name="HeaderFooter3"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="175" Color="51, 51, 51" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="176" Size="9.75" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Style" id="177" Name="Even"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="178" Color="51, 51, 51" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="179" Size="9" FamilyName="Calibri" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Style" id="180" Name="Odd"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="181" Color="51, 51, 51" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="182" Size="9" FamilyName="Calibri" /><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="183" Color="Silver" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Style" id="184" Name="Normal"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="185" Color="51, 51, 51" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="186" Size="9.75" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Style" id="187" Name="TableHeader"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="188" Color="51, 51, 51" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="189" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="190" Color="230, 230, 230" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="191" All="1 Solid Silver" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Style" id="192" Name="TableCell"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="193" Color="51, 51, 51" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="194" Size="8" FamilyName="Calibri" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="191" All="1 Solid Silver" /></Item></Styles></StyleSheet></root>
