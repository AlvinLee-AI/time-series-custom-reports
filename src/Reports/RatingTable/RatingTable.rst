<?xml version="1.0" encoding="utf-8" standalone="yes"?><root type="PerpetuumSoft.Reporting.DOM.Document" id="1" version="2" Name="RatingTable" IsTemplate="true" Title="Rating Table" ImportsString="RatingTableNamespace&#xD;&#xA;ReportPluginFramework.Properties&#xD;&#xA;ReportPluginFramework&#xD;&#xA;ReportPluginFramework.ReportData&#xD;&#xA;System.Linq&#xD;&#xA;ReportPluginFramework.ReportData.TimeSeriesComputedStatistics&#xD;&#xA;ReportPluginFramework.ReportData.TimeSeriesData&#xD;&#xA;System.Collections.Generic&#xD;&#xA;System.Data&#xD;&#xA;Server.Services.PublishService.ServiceModel.RequestDtos&#xD;&#xA;Server.Services.PublishService.ServiceModel.ResponseDtos&#xD;&#xA;Server.Services.PublishService.ServiceModel.Dtos&#xD;&#xA;&#xD;&#xA;" DocumentGuid="1e6f9657-a0c9-44e3-aff2-7fed6b40f5ae" MetricUnit="Pixel" DoublePass="true" CommonScript="// Common functions, variables and defaults&#xD;&#xA;//&#xD;&#xA;&#xD;&#xA;public string ReportTitle = &quot;&quot;;&#xD;&#xA;&#xD;&#xA;public string DateFormat = &quot;yyyy-MM-dd HH:mm:sszzz&quot;;&#xD;&#xA;&#xD;&#xA;ServiceStack.Logging.ILog Log = ServiceStack.Logging.LogManager.GetLogger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);&#xD;&#xA;&#xD;&#xA;public class CurvePeriod&#xD;&#xA;{&#xD;&#xA;  public RatingCurve Curve {get; set;}&#xD;&#xA;  public PeriodOfApplicability Period {get; set; }&#xD;&#xA;  public int PeriodNumber {get; set;}&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;public CurvePeriod FindCurvePeriodAtEffectiveTime(List&lt;CurvePeriod&gt; curvePeriods, DateTimeOffset effectiveTime)&#xD;&#xA;{&#xD;&#xA;  foreach (CurvePeriod curvePeriod in curvePeriods)&#xD;&#xA;  {&#xD;&#xA;    if ((effectiveTime &gt; curvePeriod.Period.StartTime) &amp;&amp; (effectiveTime &lt;= curvePeriod.Period.EndTime))&#xD;&#xA;      return curvePeriod;&#xD;&#xA;  }&#xD;&#xA;  return null;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;public bool OverlapsInterval(DateTimeOffsetInterval selectedInterval, DateTimeOffset startTime, DateTimeOffset endTime)&#xD;&#xA;{&#xD;&#xA;  if (!selectedInterval.Start.HasValue &amp;&amp; !selectedInterval.End.HasValue)&#xD;&#xA;    return true;&#xD;&#xA;  &#xD;&#xA;  if (selectedInterval.Start.HasValue &amp;&amp; (endTime &lt; selectedInterval.Start.Value))&#xD;&#xA;    return false;&#xD;&#xA;  &#xD;&#xA;  if (selectedInterval.End.HasValue &amp;&amp; (startTime &gt; selectedInterval.End.Value))&#xD;&#xA;    return false;&#xD;&#xA;  &#xD;&#xA;  return true;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;public string DischargeFormatType = &quot;Significant Figures&quot;;&#xD;&#xA;public int DischargeFormatPrecision = 3;&#xD;&#xA;&#xD;&#xA;public string FormatDischargeValue(double value)&#xD;&#xA;{&#xD;&#xA;  string missingStr = &quot;***&quot;;  &#xD;&#xA;  if (double.IsNaN(value)) return missingStr;&#xD;&#xA;   &#xD;&#xA;  return Common.FormatDoubleValue(value, DischargeFormatType == &quot;Fixed&quot;, DischargeFormatPrecision, missingStr);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;public DataRow AddRatingCurveRow(RatingCurve curve, DataTable ratingCurves, &#xD;&#xA;  int ratingCurveNumber, int ratingPeriodNumber, &#xD;&#xA;  DateTimeOffset startTime, DateTimeOffset endTime)&#xD;&#xA;{&#xD;&#xA;&#xD;&#xA;  DataRow ratingCurvesRow = ratingCurves.NewRow();&#xD;&#xA;  ratingCurvesRow[&quot;RatingCurveNumber&quot;] = ratingCurveNumber;&#xD;&#xA;  ratingCurvesRow[&quot;RatingPeriodNumber&quot;] = ratingPeriodNumber;&#xD;&#xA;  ratingCurvesRow[&quot;RatingCurveId&quot;] = curve.Id;&#xD;&#xA;  ratingCurvesRow[&quot;StartTime&quot;] = startTime.ToString(DateFormat);&#xD;&#xA;  ratingCurvesRow[&quot;EndTime&quot;] = (endTime &lt; DateTimeOffset.MaxValue) ? endTime.ToString(DateFormat) : &quot;end of time&quot;;&#xD;&#xA;  ratingCurvesRow[&quot;Type&quot;] = curve.Type;&#xD;&#xA;  ratingCurvesRow[&quot;Remarks&quot;] = curve.Remarks;&#xD;&#xA;  ratingCurvesRow[&quot;Equation&quot;] = curve.Equation;&#xD;&#xA;  ratingCurvesRow[&quot;EffectiveCurveId&quot;] = &quot;&quot;;&#xD;&#xA;  ratingCurvesRow[&quot;EffectiveTime&quot;] = &quot;&quot;;&#xD;&#xA;  ratingCurvesRow[&quot;GetEffectiveCurveException&quot;] = &quot;&quot;;&#xD;&#xA;      &#xD;&#xA;  ratingCurvesRow[&quot;RatingCurveInfo&quot;] = string.Format(&quot;Rating Curve Id: {0}, Rating Period {1}: {2} - {3}, Type: {4}, Remarks: {5}&quot;, &#xD;&#xA;    curve.Id, ratingPeriodNumber, ratingCurvesRow[&quot;StartTime&quot;], ratingCurvesRow[&quot;EndTime&quot;], &#xD;&#xA;    (!string.IsNullOrEmpty(curve.Equation) ? string.Format(&quot;{0}, Equation: {1}&quot;, curve.Type, curve.Equation) : (object) curve.Type), &#xD;&#xA;    curve.Remarks);&#xD;&#xA;      &#xD;&#xA;  ratingCurves.Rows.Add(ratingCurvesRow);&#xD;&#xA;  &#xD;&#xA;  return ratingCurvesRow;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;public string AddExpandedTables(IPublishGateway publish, string ratingModelIdentifier, double tableIncrement, &#xD;&#xA;  RatingCurve curve, DateTimeOffset effectiveTime, int ratingCurveNumber,&#xD;&#xA;  DataTable adjustedRatingTable, DataTable adjustedRatingTableNegative)&#xD;&#xA;{&#xD;&#xA;  EffectiveRatingCurveServiceRequest effectiveRequest = new EffectiveRatingCurveServiceRequest();&#xD;&#xA;  effectiveRequest.RatingModelIdentifier = ratingModelIdentifier;&#xD;&#xA;  effectiveRequest.StepSize = tableIncrement;    &#xD;&#xA;  effectiveRequest.EffectiveTime = effectiveTime;&#xD;&#xA;        &#xD;&#xA;  if (curve.Type == RatingCurveType.StandardEquation)&#xD;&#xA;  {&#xD;&#xA;    effectiveRequest.StartValue = 0.0;&#xD;&#xA;    effectiveRequest.EndValue = 100.0 * tableIncrement;&#xD;&#xA;  }&#xD;&#xA;        &#xD;&#xA;  Log.DebugFormat(&quot;rating model Id = {0}, call get effective rating curve at effectiveTme = {1}&quot;, &#xD;&#xA;    ratingModelIdentifier, effectiveTime.ToString(DateFormat));&#xD;&#xA;             &#xD;&#xA;  EffectiveRatingCurveServiceResponse response = publish.Get(effectiveRequest);&#xD;&#xA;    &#xD;&#xA;  string effectiveRatingCurveId = response.ExpandedRatingCurve.Id;&#xD;&#xA;&#xD;&#xA;  Log.DebugFormat(&quot;RatingModelIdentifier = {0}, EffectiveTime = {1}, curveId = {2}, EffectiveRatingCurveId = {3}&quot;, &#xD;&#xA;    ratingModelIdentifier, effectiveTime.ToString(DateFormat), curve.Id, effectiveRatingCurveId);&#xD;&#xA;        &#xD;&#xA;  if (!(curve.Id == effectiveRatingCurveId))&#xD;&#xA;  {&#xD;&#xA;    Log.WarnFormat(&quot;Mismatch Rating Curve Id! RatingModelIdentifier = {0}, EffectiveTime = {1}, curveId = {2}, EffectiveRatingCurveId = {3}&quot;, &#xD;&#xA;      ratingModelIdentifier, effectiveTime.ToString(DateFormat), curve.Id, effectiveRatingCurveId);&#xD;&#xA;    &#xD;&#xA;    return effectiveRatingCurveId;&#xD;&#xA;  }&#xD;&#xA;      &#xD;&#xA;  List&lt;RatingPoint&gt; adjustedPoints = response.ExpandedRatingCurve.AdjustedRatingTable;&#xD;&#xA;  AddRatingPointsToRatingTables(adjustedRatingTable, adjustedRatingTableNegative, ratingCurveNumber, tableIncrement, adjustedPoints);&#xD;&#xA;  &#xD;&#xA;  return effectiveRatingCurveId;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;public void AddRatingPointsToRatingTables(DataTable ratingTable, DataTable ratingTableNegative, int ratingCurveNumber, double precision, List&lt;RatingPoint &gt; points)&#xD;&#xA;{&#xD;&#xA;  int len = points.Count;&#xD;&#xA;      &#xD;&#xA;  double rowStepSize = 10 * precision;&#xD;&#xA;  int columnRoundFactor = (int) Math.Abs(Math.Log10(precision));&#xD;&#xA;  int rowRoundFactor = columnRoundFactor - 1;&#xD;&#xA;  &#xD;&#xA;  if (columnRoundFactor &lt; 0) columnRoundFactor = 0;&#xD;&#xA;  if (rowRoundFactor &lt; 0) rowRoundFactor = 0;&#xD;&#xA;       &#xD;&#xA;  if ((len &gt; 0) &amp;&amp; points[0].InputValue.HasValue)&#xD;&#xA;  {   &#xD;&#xA;    double firstInput = points[0].InputValue.Value;        &#xD;&#xA;    double firstRowHeader = (Math.Floor(firstInput / rowStepSize)) * rowStepSize;&#xD;&#xA;           &#xD;&#xA;    int offset = (int) ((10.0 / rowStepSize) * Math.Round(firstInput - firstRowHeader, columnRoundFactor));&#xD;&#xA;        &#xD;&#xA;    int numberOfRows = (int) Math.Ceiling((double) (len + offset) / 10);&#xD;&#xA;    &#xD;&#xA;    double firstRowHeaderValue = Math.Round(firstRowHeader, rowRoundFactor);&#xD;&#xA;        &#xD;&#xA;    DataRow ratingRow = (firstRowHeaderValue &lt; 0) ? ratingTableNegative.NewRow() : ratingTable.NewRow();&#xD;&#xA;    ratingRow[&quot;RatingCurveNumber&quot;] = ratingCurveNumber;&#xD;&#xA;    ratingRow[&quot;Input&quot;] = firstRowHeaderValue.ToString();&#xD;&#xA;    if (firstRowHeaderValue &lt; 0)&#xD;&#xA;    {&#xD;&#xA;      ratingTableNegative.Rows.Add(ratingRow);&#xD;&#xA;    }&#xD;&#xA;    else&#xD;&#xA;    {&#xD;&#xA;      ratingTable.Rows.Add(ratingRow);&#xD;&#xA;    }&#xD;&#xA;            &#xD;&#xA;    for (int i = offset; i &lt; 10; i++)&#xD;&#xA;    {&#xD;&#xA;      int indx = i - offset;&#xD;&#xA;      if (!(indx &lt; len)) break;&#xD;&#xA;      if (points[indx].OutputValue.HasValue)&#xD;&#xA;&#xD;&#xA;        ratingRow[&quot;Col&quot; + (i + 1).ToString()] = FormatDischargeValue(points[indx].OutputValue.Value);&#xD;&#xA;    }&#xD;&#xA;        &#xD;&#xA;    double rowHeaderValue = Math.Round(firstRowHeaderValue + rowStepSize, rowRoundFactor);&#xD;&#xA;    for (int j = 1; j &lt; numberOfRows; j++)&#xD;&#xA;    {       &#xD;&#xA;      ratingRow = (rowHeaderValue &lt; 0) ? ratingTableNegative.NewRow() : ratingTable.NewRow();&#xD;&#xA;      ratingRow[&quot;RatingCurveNumber&quot;] = ratingCurveNumber;&#xD;&#xA;      ratingRow[&quot;Input&quot;] = rowHeaderValue.ToString();&#xD;&#xA;      &#xD;&#xA;      if (rowHeaderValue &lt; 0)&#xD;&#xA;      {&#xD;&#xA;        ratingTableNegative.Rows.Add(ratingRow);&#xD;&#xA;      }&#xD;&#xA;      else&#xD;&#xA;      {&#xD;&#xA;        ratingTable.Rows.Add(ratingRow);&#xD;&#xA;      }&#xD;&#xA;          &#xD;&#xA;      rowHeaderValue = Math.Round(rowHeaderValue + rowStepSize, rowRoundFactor);&#xD;&#xA;      for (int k = 0; k &lt; 10; k++)&#xD;&#xA;      {&#xD;&#xA;        int indx = (10 - offset) + (j - 1) * 10 + k;&#xD;&#xA;        if (!(indx &lt; len)) break;&#xD;&#xA;        if (points[indx].OutputValue.HasValue)&#xD;&#xA;        {&#xD;&#xA;          string formattedValue = FormatDischargeValue(points[indx].OutputValue.Value);&#xD;&#xA;          ratingRow[&quot;Col&quot; + (k + 1).ToString()] = formattedValue;&#xD;&#xA;        }&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;" ScriptLanguage="CSharp" GridStep="18.75" GenerateScript="if (Engine.IsSecondPass) return;&#xD;&#xA;&#xD;&#xA;ServiceStack.Logging.ILog Log = ServiceStack.Logging.LogManager.GetLogger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);&#xD;&#xA;&#xD;&#xA;Log.Debug(&quot;Begin Document GenerateScript !!!!!!!!!!!!!!**********************************************************&quot;);&#xD;&#xA;try&#xD;&#xA;{&#xD;&#xA;  RunFileReportRequest runReportRequest = (RunFileReportRequest) GetData(&quot;ReportTables.RunReportRequest.RunReportRequest&quot;);&#xD;&#xA;&#xD;&#xA;  Common common = new Common(runReportRequest);&#xD;&#xA;     &#xD;&#xA;  string dllName = GetData(&quot;ReportTables.RunReportRequest.DllName&quot;).ToString();&#xD;&#xA;  Log.DebugFormat(&quot;{0} - Document GenerateScript&quot;, dllName);&#xD;&#xA;  &#xD;&#xA;  ReportTitle = &quot;Rating Table&quot;;&#xD;&#xA;&#xD;&#xA;  DateTimeOffsetInterval selectedInterval = (DateTimeOffsetInterval) GetData(&quot;ReportTables.ReportData.PeriodSelectedAdjustedForReport&quot;);&#xD;&#xA;  string locationIdentifier = (string) GetData(&quot;ReportTables.InputLocation.LocationIdentifier&quot;);&#xD;&#xA;  double tableIncrement = common.GetParameterDouble(&quot;TableIncrement&quot;, 0.1);&#xD;&#xA;  string inputOutputParameters = common.GetParameterString(&quot;InputOutputParameters&quot;, &quot;&quot;);&#xD;&#xA;  string ratingModelLabel = common.GetParameterString(&quot;RatingModelLabel&quot;, &quot;&quot;);&#xD;&#xA;  &#xD;&#xA;  DischargeFormatPrecision = common.GetParameterInt(&quot;DischargeFormatPrecision&quot;, 3);&#xD;&#xA;  DischargeFormatType = common.GetParameterString(&quot;DischargeFormatType&quot;, &quot;Significant Figures&quot;);&#xD;&#xA;      &#xD;&#xA;  string ratingModelIdentifier = string.Format(&quot;{0}.{1}@{2}&quot;, inputOutputParameters, ratingModelLabel, locationIdentifier);&#xD;&#xA;  &#xD;&#xA;  DataSet dataSet = (DataSet) Engine.Objects[&quot;ReportTables&quot;];&#xD;&#xA;  &#xD;&#xA;  //&#xD;&#xA;  if (dataSet.Tables.Contains(&quot;AdjustedRatingTable&quot;)) dataSet.Tables[&quot;AdjustedRatingTable&quot;].Rows.Clear();&#xD;&#xA;  if (dataSet.Tables.Contains(&quot;AdjustedRatingTableNegative&quot;)) dataSet.Tables[&quot;AdjustedRatingTableNegative&quot;].Rows.Clear();&#xD;&#xA;  if (dataSet.Tables.Contains(&quot;RatingTableHeaders&quot;)) dataSet.Tables[&quot;RatingTableHeaders&quot;].Rows.Clear();&#xD;&#xA;  if (dataSet.Tables.Contains(&quot;NegativeRatingTableHeaders&quot;)) dataSet.Tables[&quot;NegativeRatingTableHeaders&quot;].Rows.Clear();&#xD;&#xA;  if (dataSet.Tables.Contains(&quot;RatingCurves&quot;)) dataSet.Tables[&quot;RatingCurves&quot;].Rows.Clear();&#xD;&#xA;  if (dataSet.Tables.Contains(&quot;RatingModel&quot;)) dataSet.Tables[&quot;RatingModel&quot;].Rows.Clear();&#xD;&#xA;    &#xD;&#xA;  if (dataSet.Relations.Contains(&quot;RatingCurveAdjustedTablePoints&quot;)) dataSet.Relations.Remove(&quot;RatingCurveAdjustedTablePoints&quot;);&#xD;&#xA;  &#xD;&#xA;  if (dataSet.Relations.Contains(&quot;RatingCurveAdjustedTablePointsNegative&quot;)) dataSet.Relations.Remove(&quot;RatingCurveAdjustedTablePointsNegative&quot;);&#xD;&#xA;  &#xD;&#xA;  if (dataSet.Tables.Contains(&quot;AdjustedRatingTable&quot;)) dataSet.Tables[&quot;AdjustedRatingTable&quot;].Constraints.Remove(&quot;RatingCurveAdjustedTablePoints&quot;);&#xD;&#xA;  &#xD;&#xA;  if (dataSet.Tables.Contains(&quot;AdjustedRatingTableNegative&quot;)) dataSet.Tables[&quot;AdjustedRatingTableNegative&quot;].Constraints.Remove(&quot;RatingCurveAdjustedTablePointsNegative&quot;);&#xD;&#xA;  &#xD;&#xA;  if (dataSet.Tables.Contains(&quot;AdjustedRatingTable&quot;))dataSet.Tables.Remove(&quot;AdjustedRatingTable&quot;);&#xD;&#xA;  if (dataSet.Tables.Contains(&quot;AdjustedRatingTableNegative&quot;))dataSet.Tables.Remove(&quot;AdjustedRatingTableNegative&quot;);&#xD;&#xA;  &#xD;&#xA;  if (dataSet.Tables.Contains(&quot;RatingTableHeaders&quot;))dataSet.Tables.Remove(&quot;RatingTableHeaders&quot;);&#xD;&#xA;  if (dataSet.Tables.Contains(&quot;NegativeRatingTableHeaders&quot;)) dataSet.Tables.Remove(&quot;NegativeRatingTableHeaders&quot;);&#xD;&#xA;  if (dataSet.Tables.Contains(&quot;RatingCurves&quot;))dataSet.Tables.Remove(&quot;RatingCurves&quot;);&#xD;&#xA;  if (dataSet.Tables.Contains(&quot;RatingModel&quot;))dataSet.Tables.Remove(&quot;RatingModel&quot;);&#xD;&#xA;  //  &#xD;&#xA;  &#xD;&#xA;  DataTable ratingCurves = dataSet.Tables.Add(&quot;RatingCurves&quot;);&#xD;&#xA;&#xD;&#xA;  DataTable adjustedRatingTable = dataSet.Tables.Add(&quot;AdjustedRatingTable&quot;);&#xD;&#xA;  DataTable adjustedRatingTableNegative = dataSet.Tables.Add(&quot;AdjustedRatingTableNegative&quot;);&#xD;&#xA;  DataTable ratingTableHeaders = dataSet.Tables.Add(&quot;RatingTableHeaders&quot;);&#xD;&#xA;  DataTable tableNegativeHeaders = dataSet.Tables.Add(&quot;NegativeRatingTableHeaders&quot;);&#xD;&#xA;  DataTable ratingModel = dataSet.Tables.Add(&quot;RatingModel&quot;);&#xD;&#xA;  &#xD;&#xA;  ratingModel.Columns.Add(&quot;Identifier&quot;, typeof(string));&#xD;&#xA;  ratingModel.Columns.Add(&quot;InputParameter&quot;, typeof(string));&#xD;&#xA;  ratingModel.Columns.Add(&quot;InputUnitId&quot;, typeof(string));&#xD;&#xA;  ratingModel.Columns.Add(&quot;InputUnitSymbol&quot;, typeof(string));&#xD;&#xA;  ratingModel.Columns.Add(&quot;OutputParameter&quot;, typeof(string));&#xD;&#xA;  ratingModel.Columns.Add(&quot;OutputUnitId&quot;, typeof(string));&#xD;&#xA;  ratingModel.Columns.Add(&quot;OutputUnitSymbol&quot;, typeof(string));&#xD;&#xA;  ratingModel.Columns.Add(&quot;Description&quot;, typeof(string));&#xD;&#xA;  ratingModel.Columns.Add(&quot;Comment&quot;, typeof(string));&#xD;&#xA;  ratingModel.Columns.Add(&quot;TimeRange&quot;, typeof(string));&#xD;&#xA;  ratingModel.Columns.Add(&quot;RatingModelInfo&quot;, typeof(string));&#xD;&#xA;&#xD;&#xA;  ratingCurves.Columns.Add(&quot;RatingCurveNumber&quot;, typeof(int));&#xD;&#xA;  ratingCurves.Columns.Add(&quot;RatingCurveId&quot;, typeof(string));&#xD;&#xA;  ratingCurves.Columns.Add(&quot;StartTime&quot;, typeof(string));&#xD;&#xA;  ratingCurves.Columns.Add(&quot;EndTime&quot;, typeof(string));&#xD;&#xA;  ratingCurves.Columns.Add(&quot;RatingPeriodNumber&quot;, typeof(int));&#xD;&#xA;  ratingCurves.Columns.Add(&quot;RatingCurveInfo&quot;, typeof(string));&#xD;&#xA;  ratingCurves.Columns.Add(&quot;Type&quot;, typeof(string));&#xD;&#xA;  ratingCurves.Columns.Add(&quot;Remarks&quot;, typeof(string));&#xD;&#xA;  ratingCurves.Columns.Add(&quot;Equation&quot;, typeof(string));&#xD;&#xA;  ratingCurves.Columns.Add(&quot;EffectiveCurveId&quot;, typeof(string));&#xD;&#xA;  ratingCurves.Columns.Add(&quot;EffectiveTime&quot;, typeof(string));&#xD;&#xA;  ratingCurves.Columns.Add(&quot;GetEffectiveCurveException&quot;, typeof(string));&#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  ratingTableHeaders.Columns.Add(&quot;Input&quot;, typeof(string));&#xD;&#xA;  tableNegativeHeaders.Columns.Add(&quot;Input&quot;, typeof(string));&#xD;&#xA;  &#xD;&#xA;  adjustedRatingTable.Columns.Add(&quot;RatingCurveNumber&quot;, typeof(int));&#xD;&#xA;  adjustedRatingTable.Columns.Add(&quot;Input&quot;, typeof(string));&#xD;&#xA;  &#xD;&#xA;  adjustedRatingTableNegative.Columns.Add(&quot;RatingCurveNumber&quot;, typeof(int));&#xD;&#xA;  adjustedRatingTableNegative.Columns.Add(&quot;Input&quot;, typeof(string));  &#xD;&#xA;  &#xD;&#xA;  for (int i = 0; i &lt; 10; i++)&#xD;&#xA;  {&#xD;&#xA;    ratingTableHeaders.Columns.Add(&quot;Col&quot; + (i + 1).ToString(), typeof(string));&#xD;&#xA;    tableNegativeHeaders.Columns.Add(&quot;Col&quot; + (i + 1).ToString(), typeof(string));&#xD;&#xA;    adjustedRatingTable.Columns.Add(&quot;Col&quot; + (i + 1).ToString(), typeof(string));&#xD;&#xA;    adjustedRatingTableNegative.Columns.Add(&quot;Col&quot; + (i + 1).ToString(), typeof(string));&#xD;&#xA;  }&#xD;&#xA;    &#xD;&#xA;  dataSet.Relations.Add(&quot;RatingCurveAdjustedTablePoints&quot;, ratingCurves.Columns[&quot;RatingCurveNumber&quot;], adjustedRatingTable.Columns[&quot;RatingCurveNumber&quot;]);&#xD;&#xA;  dataSet.Relations.Add(&quot;RatingCurveAdjustedTablePointsNegative&quot;, ratingCurves.Columns[&quot;RatingCurveNumber&quot;], adjustedRatingTableNegative.Columns[&quot;RatingCurveNumber&quot;]);&#xD;&#xA;    &#xD;&#xA;  DataRow ratingModelRow = ratingModel.NewRow();&#xD;&#xA;  &#xD;&#xA;  ratingModelRow[&quot;Identifier&quot;] = ratingModelIdentifier;&#xD;&#xA;  ratingModel.Rows.Add(ratingModelRow);&#xD;&#xA;  &#xD;&#xA;  DataRow ratingCurveRow = ratingCurves.NewRow();&#xD;&#xA;  ratingCurves.Rows.Add(ratingCurveRow);&#xD;&#xA;  &#xD;&#xA;  IPublishGateway publish = runReportRequest.Publish;&#xD;&#xA;  &#xD;&#xA;  RatingModelDescriptionListServiceRequest ratingModelDescriptionListRequest = new RatingModelDescriptionListServiceRequest();&#xD;&#xA;  ratingModelDescriptionListRequest.LocationIdentifier = locationIdentifier;&#xD;&#xA;  &#xD;&#xA;  RatingModelDescriptionListServiceResponse ratingModelDescriptionListResponse = publish.Get(ratingModelDescriptionListRequest);&#xD;&#xA;  &#xD;&#xA;  RatingModelDescription ratingModelDescription = null;&#xD;&#xA;  foreach (RatingModelDescription rmDesc in ratingModelDescriptionListResponse.RatingModelDescriptions)&#xD;&#xA;  {&#xD;&#xA;    if (rmDesc.Identifier == ratingModelIdentifier)&#xD;&#xA;    {&#xD;&#xA;      ratingModelDescription = rmDesc;&#xD;&#xA;      break;&#xD;&#xA;    }&#xD;&#xA;  }&#xD;&#xA;  &#xD;&#xA;  if (ratingModelDescription == null)&#xD;&#xA;  {&#xD;&#xA;    ratingModelRow[&quot;RatingModelInfo&quot;] = string.Format(&#xD;&#xA;      &quot;No Rating Model found with parameters = '{0}' and label = '{1}' in Location = {2}, {3}&quot;,&#xD;&#xA;      inputOutputParameters, ratingModelLabel, locationIdentifier, GetData(&quot;ReportTables.InputLocation.LocationName&quot;));   &#xD;&#xA;    return;&#xD;&#xA;  }&#xD;&#xA;   &#xD;&#xA;  string inputParameterDisplayId = ratingModelDescription.InputParameter;&#xD;&#xA;  string inputUnitId = ratingModelDescription.InputUnit;&#xD;&#xA;  string outputParameterDisplayId = ratingModelDescription.OutputParameter;&#xD;&#xA;  string outputUnitId = ratingModelDescription.OutputUnit;&#xD;&#xA;  string rmDescription = ratingModelDescription.Description;&#xD;&#xA;  &#xD;&#xA;  ratingModelRow[&quot;InputParameter&quot;] = inputParameterDisplayId;&#xD;&#xA;  ratingModelRow[&quot;InputUnitId&quot;] = inputUnitId;&#xD;&#xA;  ratingModelRow[&quot;InputUnitSymbol&quot;] = common.GetUnitSymbol(inputUnitId);&#xD;&#xA;  ratingModelRow[&quot;OutputParameter&quot;] = outputParameterDisplayId;&#xD;&#xA;  ratingModelRow[&quot;OutputUnitId&quot;] = outputUnitId;&#xD;&#xA;  ratingModelRow[&quot;OutputUnitSymbol&quot;] = common.GetUnitSymbol(outputUnitId);&#xD;&#xA;  &#xD;&#xA;  ratingModelRow[&quot;Description&quot;] = rmDescription;&#xD;&#xA;  ratingModelRow[&quot;Comment&quot;] = ratingModelDescription.Comment;&#xD;&#xA;&#xD;&#xA;  ratingModelRow[&quot;RatingModelInfo&quot;] = string.Format(&#xD;&#xA;    &quot;No Rating Curves found in RatingModelIdentifier = '{0}' in Location = {1}&quot;,&#xD;&#xA;    ratingModelIdentifier, GetData(&quot;ReportTables.InputLocation.LocationName&quot;));  &#xD;&#xA;  &#xD;&#xA;  RatingCurveListServiceRequest ratingCurveListRequest = new RatingCurveListServiceRequest();&#xD;&#xA;  ratingCurveListRequest.RatingModelIdentifier = ratingModelIdentifier;&#xD;&#xA;  ratingCurveListRequest.QueryTo = selectedInterval.End;&#xD;&#xA;    &#xD;&#xA;  RatingCurveListServiceResponse ratingCurveResponse = publish.Get(ratingCurveListRequest);&#xD;&#xA;  &#xD;&#xA;  if (ratingCurveResponse.RatingCurves.Count == 0) return;&#xD;&#xA;  &#xD;&#xA;  ratingModelRow[&quot;RatingModelInfo&quot;] = string.Format(&#xD;&#xA;    &quot;Rating Model: {0}, {1}, {2} ({3}) - {4} ({5}), Number of curves: {6}&quot;,&#xD;&#xA;    ratingModelIdentifier, &#xD;&#xA;    GetData(&quot;ReportTables.InputLocation.LocationName&quot;),&#xD;&#xA;    inputParameterDisplayId, common.GetUnitSymbol(inputUnitId),&#xD;&#xA;    outputParameterDisplayId, common.GetUnitSymbol(outputUnitId),&#xD;&#xA;    ratingCurveResponse.RatingCurves.Count);&#xD;&#xA;           &#xD;&#xA;  DataRow headerRow = ratingTableHeaders.NewRow();&#xD;&#xA;  headerRow[&quot;Input&quot;] = string.Format(&quot;{0} ({1})&quot;, inputParameterDisplayId, common.GetUnitSymbol(inputUnitId));&#xD;&#xA;  for (int i = 0; i &lt; 10; i++) headerRow[&quot;Col&quot; + (i + 1).ToString()] = (i * tableIncrement).ToString();&#xD;&#xA;  ratingTableHeaders.Rows.Add(headerRow);&#xD;&#xA;    &#xD;&#xA;  DataRow negativeHeaderRow = tableNegativeHeaders.NewRow();&#xD;&#xA;  negativeHeaderRow[&quot;Input&quot;] = string.Format(&quot;{0} ({1})&quot;, inputParameterDisplayId, common.GetUnitSymbol(inputUnitId));&#xD;&#xA;  negativeHeaderRow[&quot;Col1&quot;] = &quot;0&quot;;&#xD;&#xA;  for (int i = 1; i &lt; 10; i++) negativeHeaderRow[&quot;Col&quot; + (11 - i).ToString()] = (i * tableIncrement).ToString();&#xD;&#xA;  tableNegativeHeaders.Rows.Add(negativeHeaderRow);&#xD;&#xA;  &#xD;&#xA;  DateTimeOffset earliestStartTime = DateTimeOffset.MaxValue;&#xD;&#xA;  DateTimeOffset latestEndTime = DateTimeOffset.MinValue;&#xD;&#xA;  &#xD;&#xA;  List&lt;CurvePeriod&gt; curvePeriods = new List&lt;CurvePeriod&gt;();&#xD;&#xA;  foreach (RatingCurve curve in ratingCurveResponse.RatingCurves)&#xD;&#xA;  {&#xD;&#xA;    int periodNumber = 0;&#xD;&#xA;    foreach (PeriodOfApplicability period in curve.PeriodsOfApplicability)&#xD;&#xA;    {&#xD;&#xA;      periodNumber++;&#xD;&#xA;      CurvePeriod curvePeriod = new CurvePeriod();&#xD;&#xA;      curvePeriod.Curve = curve;&#xD;&#xA;      curvePeriod.Period = period;&#xD;&#xA;      curvePeriod.PeriodNumber = periodNumber;&#xD;&#xA;      curvePeriods.Add(curvePeriod);&#xD;&#xA;      &#xD;&#xA;      if (period.StartTime &lt; earliestStartTime) earliestStartTime = period.StartTime;&#xD;&#xA;      if (period.EndTime &gt; latestEndTime) latestEndTime = period.EndTime;&#xD;&#xA;    }&#xD;&#xA;  }&#xD;&#xA;  &#xD;&#xA;  string timeRangeString = string.Format(&quot;{0} - {1}&quot;, earliestStartTime.ToString(DateFormat), &#xD;&#xA;    (latestEndTime &lt; DateTimeOffset.MaxValue) ? latestEndTime.ToString(DateFormat) : &quot;end of time&quot;);&#xD;&#xA;  ratingModelRow[&quot;TimeRange&quot;] = timeRangeString;&#xD;&#xA;  &#xD;&#xA;  ratingModelRow[&quot;RatingModelInfo&quot;] = string.Format(&#xD;&#xA;    &quot;Rating Model: {0}, {1}, {2} ({3}) - {4} ({5}), Number of curves: {6}, {7}{8}&quot;,&#xD;&#xA;    ratingModelIdentifier, &#xD;&#xA;    GetData(&quot;ReportTables.InputLocation.LocationName&quot;),&#xD;&#xA;    inputParameterDisplayId, common.GetUnitSymbol(inputUnitId),&#xD;&#xA;    outputParameterDisplayId, common.GetUnitSymbol(outputUnitId),&#xD;&#xA;    ratingCurveResponse.RatingCurves.Count, timeRangeString, &#xD;&#xA;    string.IsNullOrEmpty(rmDescription) ? &quot;&quot; : Environment.NewLine + &quot;Description: &quot; + rmDescription);&#xD;&#xA;  &#xD;&#xA;  int ratingCurveNumber = 0;&#xD;&#xA;&#xD;&#xA;  {&#xD;&#xA;    DateTimeOffset effectiveTime = (selectedInterval.End.HasValue) ? selectedInterval.End.Value : DateTimeOffset.Now;&#xD;&#xA;    CurvePeriod curvePeriod = FindCurvePeriodAtEffectiveTime(curvePeriods, effectiveTime);&#xD;&#xA;  &#xD;&#xA;    if (curvePeriod == null)&#xD;&#xA;    {&#xD;&#xA;      TimeSpan locationUctOffset = (TimeSpan) GetData(&quot;ReportTables.InputLocation.UtcOffset&quot;);&#xD;&#xA;&#xD;&#xA;      string message = string.Format(&quot;No rating curve found in '{0}' at effective time {1}&quot;, &#xD;&#xA;        ratingModelIdentifier, effectiveTime.ToOffset(locationUctOffset).ToString(DateFormat));&#xD;&#xA;      ratingCurves.Rows[0][&quot;RatingCurveInfo&quot;] = message;&#xD;&#xA;      Log.Info(message);&#xD;&#xA;      return;&#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    RatingCurve curve = curvePeriod.Curve;&#xD;&#xA;    PeriodOfApplicability period = curvePeriod.Period;&#xD;&#xA;    int ratingPeriodNumber = curvePeriod.PeriodNumber;&#xD;&#xA;          &#xD;&#xA;    ratingCurves.Rows.Clear();&#xD;&#xA;    DataRow ratingCurvesRow = AddRatingCurveRow(curve, ratingCurves, &#xD;&#xA;      ++ratingCurveNumber, ratingPeriodNumber, period.StartTime, period.EndTime);&#xD;&#xA;            &#xD;&#xA;    effectiveTime = effectiveTime.ToOffset(period.StartTime.Offset);&#xD;&#xA;      &#xD;&#xA;    ratingCurvesRow[&quot;EffectiveTime&quot;] = effectiveTime.ToString(DateFormat);&#xD;&#xA;    try&#xD;&#xA;    {&#xD;&#xA;      string effectiveRatingCurveId = AddExpandedTables(publish, ratingModelIdentifier, tableIncrement, &#xD;&#xA;        curve, effectiveTime, ratingCurveNumber, &#xD;&#xA;        adjustedRatingTable, adjustedRatingTableNegative);&#xD;&#xA;        &#xD;&#xA;      ratingCurvesRow[&quot;EffectiveCurveId&quot;] = effectiveRatingCurveId;&#xD;&#xA;&#xD;&#xA;    }&#xD;&#xA;    catch (Exception ex)&#xD;&#xA;    {&#xD;&#xA;      ratingCurvesRow[&quot;GetEffectiveCurveException&quot;] = ex.Message;&#xD;&#xA;&#xD;&#xA;      Log.Error(&quot;Exception while processing effective curve's rating points - &quot;, ex);&#xD;&#xA;      Log.Info(GetData(&quot;ReportTables.RunReportRequest.ReportInputInformation&quot;));&#xD;&#xA;    }&#xD;&#xA;  }&#xD;&#xA;  &#xD;&#xA;    Log.Debug(&quot;End Document GenerateScript !!!!!!!!!!!!!!**********************************************************&quot;);&#xD;&#xA;    }&#xD;&#xA;catch (Exception exp)&#xD;&#xA;{&#xD;&#xA;  string dllName = GetData(&quot;ReportTables.RunReportRequest.DllName&quot;).ToString();&#xD;&#xA;  Log.Error(&quot;Exception in Document GenerateScript - &quot; + dllName, exp);&#xD;&#xA;  Log.Info(GetData(&quot;ReportTables.RunReportRequest.ReportInputInformation&quot;));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;"><Parameters type="PerpetuumSoft.Reporting.DOM.ParameterCollection" id="2" /><PageContent type="PerpetuumSoft.Reporting.DOM.Wrappers.ContentParametersDictionary" id="3" /><Pages type="PerpetuumSoft.Reporting.DOM.PageCollection" id="4"><Item type="PerpetuumSoft.Reporting.DOM.Page" id="5" Margins="75; 75; 150; 150" Size="3300;2550" StyleName="Normal" Name="page1" Location="0;0" PaperKind="Letter" Orientation="Landscape"><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="6" /><Controls type="PerpetuumSoft.Reporting.DOM.ReportControlCollection" id="7"><Item type="PerpetuumSoft.Reporting.DOM.PageHeader" id="8" StyleName="PageHeader" Location="0;75" Name="pageHeader" Size="3300;693.75"><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="9" /><Controls type="PerpetuumSoft.Reporting.DOM.ReportControlCollection" id="10"><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="11" Location="112.5;0" Size="3037.5;112.5" Name="textBoxPageHeader1" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="12" Color="33, 64, 154" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="13"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="14" Expression="GetData(&quot;ReportTables.ReportData.PageHeader1&quot;)" PropertyName="Value" /></DataBindings><RawValue type="System.String" id="15" value="Aquatic Informatics Data Management Software" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="16" Size="12" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="17" Location="112.5;75" Size="3037.5;75" Name="textBoxPageHeader2" StyleName="PageHeader" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="18" Color="0, 131, 215" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="19"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="20" Expression="GetData(&quot;ReportTables.ReportData.PageHeader2&quot;)" PropertyName="Value" /></DataBindings><RawValue type="System.String" id="21" value="Faster Analysis. Better Decisions." /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="22" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Picture" id="23" Location="150;31.25" Size="643.75;187.5" Name="logo" StyleName="PageHeader" GenerateScript="var encodedImage = GetData(&quot;ReportTables.OrganizationIcon.EncodedImage&quot;) as string;&#xD;&#xA;var bytes = Convert.FromBase64String(encodedImage);&#xD;&#xA;&#xD;&#xA;using (var memoryStream = new System.IO.MemoryStream(bytes))&#xD;&#xA;{&#xD;&#xA;  logo.Image = new System.Drawing.Bitmap(&#xD;&#xA;    System.Drawing.Image.FromStream(memoryStream));&#xD;&#xA;}" ExportAsPictureInXaml="false"><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="24"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="25" Expression="GetData(&quot;ReportTables.OrganizationIcon.SupportUrl&quot;)" PropertyName="Hyperlink" /></DataBindings></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="26" Location="0;281.25" Size="3300;118.11023712158203" Name="textBoxPageHeaderLine" ExportAsPictureInXaml="false" TextAlign="MiddleLeft"><Border type="PerpetuumSoft.Framework.Drawing.Border" id="27" TopLine="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="28" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="29" Location="150;300" Size="1500;75" Name="reportTitle" StyleName="PageHeader" GenerateScript="reportTitle.Document.Title = ReportTitle;" ExportAsPictureInXaml="false" TextAlign="MiddleLeft"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="30" Color="33, 64, 154" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="31"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="32" Expression="ReportTitle" PropertyName="Value" /></DataBindings><RawValue type="System.String" id="33" value="Wind Rose" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="34" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="35" Location="150;356.25" Size="1500;56.25" Name="textBoxSubTitle" ExportAsPictureInXaml="false" TextAlign="MiddleLeft"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="36" Color="51, 51, 51" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="37"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="38" Expression="GetData(&quot;ReportTables.ReportData.ReportSubTitle&quot;)" PropertyName="Value" /></DataBindings><RawValue type="System.String" id="39" value="Title" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="40" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="41" Location="2418.75;300" Size="731.25;75" Name="textBox32" StyleName="PageNumber" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="42" Color="51, 51, 51" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="43"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="44" Expression="Now.ToString(&quot;MMM d, yyyy&quot;) + &quot; | &quot; + PageNumber.ToString() + &quot; &quot; + Resources.Of + &quot; &quot; + PageCount.ToString()" PropertyName="Value" /></DataBindings><RawValue type="System.String" id="45" value="DISCLAIMER: The accuracy and reliability of this data is not guaranteed. Aquatic Informatics Inc. accepts no liability for its use in any way. It is the responsibility of the reader to establish the suitability of the information provided in this report for any purpose. No warranty expressed or implied is made regarding the accuracy, completeness, currency, relevance or suitability for any particular purpose of the information provided in this report." /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="46" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="47" Location="1668.75;356.25" Size="1481.25;56.25" Name="textBox27" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="48" Color="51, 51, 51" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="49"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="50" Expression="GetData(&quot;ReportTables.ReportData.PeriodSelectedInformation&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="51" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="52" Location="-0;431.25" Size="3300;93.75" Margins="0; 9.375; 150; 150" CanGrow="true" Name="textBox106" StyleName="Header1" ExportAsPictureInXaml="false" TextAlign="MiddleLeft"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="53" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="54" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="55" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="56"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="57" Expression="GetData(&quot;ReportTables.RatingModel.RatingModelInfo&quot;)" PropertyName="Value" /></DataBindings><RawValue type="System.String" id="58" value="RatingCurve" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="59" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="60" Location="-0;562.5" Size="3300;93.75" Margins="0; 9.375; 150; 150" Name="textBox3" StyleName="Header1" ExportAsPictureInXaml="false" TextAlign="MiddleLeft"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="61" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="62" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="55" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="63"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="64" Expression="dataBand4[&quot;RatingCurveInfo&quot;]" PropertyName="Value" /></DataBindings><RawValue type="System.String" id="58" value="RatingCurve" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="65" Size="8" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item></Controls></Item><Item type="PerpetuumSoft.Reporting.DOM.DataBand" id="66" Location="0;825" Size="3300;881.25" Name="dataBand4" ColumnsGap="0" DataSource="ReportTables.RatingCurves"><Sort type="PerpetuumSoft.Reporting.DOM.DataBandSortCollection" id="67" /><Controls type="PerpetuumSoft.Reporting.DOM.ReportControlCollection" id="68"><Item type="PerpetuumSoft.Reporting.DOM.DataBand" id="69" Location="0;56.25" Size="3300;356.25" Name="dataBand1" ColumnsGap="0" DataSource="ReportTables.RatingCurves.RatingCurveAdjustedTablePointsNegative"><Sort type="PerpetuumSoft.Reporting.DOM.DataBandSortCollection" id="70" /><Controls type="PerpetuumSoft.Reporting.DOM.ReportControlCollection" id="71"><Item type="PerpetuumSoft.Reporting.DOM.Header" id="72" Location="0;56.25" Size="3300;131.25" Name="header2" StyleName="Header1" RepeatEveryPage="true"><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="73" /><Controls type="PerpetuumSoft.Reporting.DOM.ReportControlCollection" id="74"><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="75" Location="150;75" Size="525;56.25" Name="textBox48" ExportAsPictureInXaml="false" TextAlign="MiddleCenter"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="76" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="77" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="55" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="78"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="79" Expression="GetData(&quot;ReportTables.NegativeRatingTableHeaders.Input&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="80" Size="9.75" FamilyName="Calibri" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="81" Location="675;75" Size="243.75;56.25" Margins="0; 0; 0; 9.375" Name="textBox49" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="82" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="83" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="55" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="84"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="85" Expression="GetData(&quot;ReportTables.NegativeRatingTableHeaders.Col1&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="86" Size="9.75" FamilyName="Calibri" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="87" Location="918.75;75" Size="243.75;56.25" Margins="0; 0; 0; 9.375" Name="textBox50" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="88" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="89" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="55" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="90"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="91" Expression="GetData(&quot;ReportTables.NegativeRatingTableHeaders.Col2&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="92" Size="9.75" FamilyName="Calibri" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="93" Location="1162.5;75" Size="243.75;56.25" Margins="0; 0; 0; 9.375" Name="textBox51" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="94" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="95" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="55" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="96"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="97" Expression="GetData(&quot;ReportTables.NegativeRatingTableHeaders.Col3&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="98" Size="9.75" FamilyName="Calibri" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="99" Location="1406.25;75" Size="243.75;56.25" Margins="0; 0; 0; 9.375" Name="textBox52" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="100" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="101" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="55" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="102"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="103" Expression="GetData(&quot;ReportTables.NegativeRatingTableHeaders.Col4&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="104" Size="9.75" FamilyName="Calibri" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="105" Location="1650;75" Size="243.75;56.25" Margins="0; 0; 0; 9.375" Name="textBox53" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="106" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="107" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="55" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="108"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="109" Expression="GetData(&quot;ReportTables.NegativeRatingTableHeaders.Col5&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="110" Size="9.75" FamilyName="Calibri" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="111" Location="1893.75;75" Size="243.75;56.25" Margins="0; 0; 0; 9.375" Name="textBox54" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="112" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="113" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="55" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="114"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="115" Expression="GetData(&quot;ReportTables.NegativeRatingTableHeaders.Col6&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="116" Size="9.75" FamilyName="Calibri" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="117" Location="2137.5;75" Size="243.75;56.25" Margins="0; 0; 0; 9.375" Name="textBox55" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="118" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="119" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="55" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="120"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="121" Expression="GetData(&quot;ReportTables.NegativeRatingTableHeaders.Col7&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="122" Size="9.75" FamilyName="Calibri" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="123" Location="2381.25;75" Size="243.75;56.25" Margins="0; 0; 0; 9.375" Name="textBox56" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="124" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="125" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="55" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="126"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="127" Expression="GetData(&quot;ReportTables.NegativeRatingTableHeaders.Col8&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="128" Size="9.75" FamilyName="Calibri" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="129" Location="2625;75" Size="243.75;56.25" Margins="0; 0; 0; 9.375" Name="textBox57" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="130" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="131" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="55" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="132"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="133" Expression="GetData(&quot;ReportTables.NegativeRatingTableHeaders.Col9&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="134" Size="9.75" FamilyName="Calibri" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="135" Location="2868.75;75" Size="243.75;56.25" Margins="0; 0; 0; 9.375" Name="textBox58" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="136" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="137" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="55" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="138"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="139" Expression="GetData(&quot;ReportTables.NegativeRatingTableHeaders.Col10&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="140" Size="9.75" FamilyName="Calibri" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="141" Location="150;18.75" Size="525;56.25" Name="textBox35" Text="Shift Adjusted" ExportAsPictureInXaml="false" TextAlign="MiddleLeft"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="142" Color="51, 51, 51" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="143" /><RawValue type="System.String" id="144" value="Shift Adjusted" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="145" Size="9.75" FamilyName="Calibri" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="146" Location="675;18.75" Size="993.75;56.25" Name="textBox90" Text="Base" ExportAsPictureInXaml="false" TextAlign="MiddleCenter"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="147" Color="51, 51, 51" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="148"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="149" Expression="string.Format(&quot;{0} ({1})&quot;, GetData(&quot;ReportTables.RatingModel.OutputParameter&quot;),GetData(&quot;ReportTables.RatingModel.OutputUnitSymbol&quot;))" PropertyName="Value" /></DataBindings><RawValue type="System.String" id="150" value="Base" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="151" Size="9.75" FamilyName="Calibri" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="152" Location="1668.75;18.75" Size="1462.5;56.25" Name="textBox103" Text="Base" ExportAsPictureInXaml="false" TextAlign="MiddleCenter"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="153" Color="51, 51, 51" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="154"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="155" Expression="string.Format(&quot;Effective Curve Id: {0} at EffectiveTime: {1}&quot;, dataBand4[&quot;EffectiveCurveId&quot;], dataBand4[&quot;EffectiveTime&quot;])" PropertyName="Value" /></DataBindings><RawValue type="System.String" id="150" value="Base" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="156" Size="9.75" FamilyName="Calibri" /></Item></Controls><Aggregates type="PerpetuumSoft.Reporting.DOM.AggregateCollection" id="157" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Detail" id="158" Location="0;243.75" Size="3300;56.25" Name="detail1"><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="159" /><Controls type="PerpetuumSoft.Reporting.DOM.ReportControlCollection" id="160"><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="161" Location="150;-0" Size="525;56.25" Margins="0; 0; 93.75; 9.375" Name="textBox6" ExportAsPictureInXaml="false" TextAlign="MiddleCenter"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="162" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="55" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="163"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="164" Expression="dataBand1[&quot;Input&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="165" Size="9.75" FamilyName="Calibri" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="166" Location="675;0" Size="243.75;56.25" Margins="0; 0; 0; 9.375" Name="textBox7" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="167" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="55" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="168"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="169" Expression="dataBand1[&quot;Col1&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="170" Size="9.75" FamilyName="Calibri" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="171" Location="918.75;0" Size="243.75;56.25" Margins="0; 0; 0; 9.375" Name="textBox37" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="172" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="55" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="173"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="174" Expression="dataBand1[&quot;Col2&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="175" Size="9.75" FamilyName="Calibri" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="176" Location="1162.5;0" Size="243.75;56.25" Margins="0; 0; 0; 9.375" Name="textBox38" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="177" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="55" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="178"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="179" Expression="dataBand1[&quot;Col3&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="180" Size="9.75" FamilyName="Calibri" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="181" Location="1406.25;0" Size="243.75;56.25" Margins="0; 0; 0; 9.375" Name="textBox39" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="182" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="55" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="183"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="184" Expression="dataBand1[&quot;Col4&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="185" Size="9.75" FamilyName="Calibri" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="186" Location="1650;0" Size="243.75;56.25" Margins="0; 0; 0; 9.375" Name="textBox40" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="187" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="55" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="188"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="189" Expression="dataBand1[&quot;Col5&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="190" Size="9.75" FamilyName="Calibri" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="191" Location="1893.75;0" Size="243.75;56.25" Margins="0; 0; 0; 9.375" Name="textBox41" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="192" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="55" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="193"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="194" Expression="dataBand1[&quot;Col6&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="195" Size="9.75" FamilyName="Calibri" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="196" Location="2137.5;0" Size="243.75;56.25" Margins="0; 0; 0; 9.375" Name="textBox42" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="197" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="55" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="198"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="199" Expression="dataBand1[&quot;Col7&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="200" Size="9.75" FamilyName="Calibri" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="201" Location="2381.25;0" Size="243.75;56.25" Margins="0; 0; 0; 9.375" Name="textBox43" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="202" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="55" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="203"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="204" Expression="dataBand1[&quot;Col8&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="205" Size="9.75" FamilyName="Calibri" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="206" Location="2625;0" Size="243.75;56.25" Margins="0; 0; 0; 9.375" Name="textBox44" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="207" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="55" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="208"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="209" Expression="dataBand1[&quot;Col9&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="210" Size="9.75" FamilyName="Calibri" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="211" Location="2868.75;0" Size="243.75;56.25" Margins="0; 0; 0; 9.375" Name="textBox45" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="212" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="55" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="213"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="214" Expression="dataBand1[&quot;Col10&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="215" Size="9.75" FamilyName="Calibri" /></Item></Controls><Aggregates type="PerpetuumSoft.Reporting.DOM.AggregateCollection" id="216" /></Item></Controls><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="217" /><Totals type="PerpetuumSoft.Reporting.DOM.DataBandTotalCollection" id="218" /><Aggregates type="PerpetuumSoft.Reporting.DOM.AggregateCollection" id="219" /></Item><Item type="PerpetuumSoft.Reporting.DOM.DataBand" id="220" Location="0;468.75" Size="3300;356.25" Name="dataBand5" ColumnsGap="0" DataSource="ReportTables.RatingCurves.RatingCurveAdjustedTablePoints"><Sort type="PerpetuumSoft.Reporting.DOM.DataBandSortCollection" id="221" /><Controls type="PerpetuumSoft.Reporting.DOM.ReportControlCollection" id="222"><Item type="PerpetuumSoft.Reporting.DOM.Header" id="223" Location="0;56.25" Size="3300;131.25" Name="header5" StyleName="Header1" RepeatEveryPage="true"><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="224"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="225" Expression="((DataRow)dataBand4.DataItem).GetChildRows(&quot;RatingCurveAdjustedTablePointsNegative&quot;).Length == 0" PropertyName="NewPageBefore" /></DataBindings><Controls type="PerpetuumSoft.Reporting.DOM.ReportControlCollection" id="226"><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="227" Location="150;75" Size="525;56.25" Name="textBox79" ExportAsPictureInXaml="false" TextAlign="MiddleCenter"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="228" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="229" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="55" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="230"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="231" Expression="GetData(&quot;ReportTables.RatingTableHeaders.Input&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="232" Size="9.75" FamilyName="Calibri" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="233" Location="675;75" Size="243.75;56.25" Margins="0; 0; 0; 9.375" Name="textBox80" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="234" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="235" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="55" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="236"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="237" Expression="GetData(&quot;ReportTables.RatingTableHeaders.Col1&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="238" Size="9.75" FamilyName="Calibri" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="239" Location="918.75;75" Size="243.75;56.25" Margins="0; 0; 0; 9.375" Name="textBox81" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="240" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="241" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="55" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="242"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="243" Expression="GetData(&quot;ReportTables.RatingTableHeaders.Col2&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="244" Size="9.75" FamilyName="Calibri" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="245" Location="1162.5;75" Size="243.75;56.25" Margins="0; 0; 0; 9.375" Name="textBox82" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="246" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="247" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="55" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="248"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="249" Expression="GetData(&quot;ReportTables.RatingTableHeaders.Col3&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="250" Size="9.75" FamilyName="Calibri" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="251" Location="1406.25;75" Size="243.75;56.25" Margins="0; 0; 0; 9.375" Name="textBox83" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="252" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="253" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="55" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="254"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="255" Expression="GetData(&quot;ReportTables.RatingTableHeaders.Col4&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="256" Size="9.75" FamilyName="Calibri" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="257" Location="1650;75" Size="243.75;56.25" Margins="0; 0; 0; 9.375" Name="textBox84" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="258" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="259" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="55" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="260"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="261" Expression="GetData(&quot;ReportTables.RatingTableHeaders.Col5&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="262" Size="9.75" FamilyName="Calibri" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="263" Location="1893.75;75" Size="243.75;56.25" Margins="0; 0; 0; 9.375" Name="textBox85" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="264" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="265" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="55" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="266"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="267" Expression="GetData(&quot;ReportTables.RatingTableHeaders.Col6&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="268" Size="9.75" FamilyName="Calibri" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="269" Location="2137.5;75" Size="243.75;56.25" Margins="0; 0; 0; 9.375" Name="textBox86" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="270" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="271" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="55" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="272"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="273" Expression="GetData(&quot;ReportTables.RatingTableHeaders.Col7&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="274" Size="9.75" FamilyName="Calibri" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="275" Location="2381.25;75" Size="243.75;56.25" Margins="0; 0; 0; 9.375" Name="textBox87" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="276" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="277" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="55" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="278"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="279" Expression="GetData(&quot;ReportTables.RatingTableHeaders.Col8&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="280" Size="9.75" FamilyName="Calibri" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="281" Location="2625;75" Size="243.75;56.25" Margins="0; 0; 0; 9.375" Name="textBox88" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="282" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="283" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="55" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="284"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="285" Expression="GetData(&quot;ReportTables.RatingTableHeaders.Col9&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="286" Size="9.75" FamilyName="Calibri" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="287" Location="2868.75;75" Size="243.75;56.25" Margins="0; 0; 0; 9.375" Name="textBox89" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="288" Color="230, 230, 230" /><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="289" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="55" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="290"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="291" Expression="GetData(&quot;ReportTables.RatingTableHeaders.Col10&quot;)" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="292" Size="9.75" FamilyName="Calibri" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="293" Location="150;18.75" Size="525;56.25" Name="textBox8" Text="Shift Adjusted" ExportAsPictureInXaml="false" TextAlign="MiddleLeft"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="294" Color="51, 51, 51" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="295" /><RawValue type="System.String" id="144" value="Shift Adjusted" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="296" Size="9.75" FamilyName="Calibri" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="297" Location="675;18.75" Size="993.75;56.25" Name="textBox104" Text="Base" ExportAsPictureInXaml="false" TextAlign="MiddleCenter"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="298" Color="51, 51, 51" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="299"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="300" Expression="string.Format(&quot;{0} ({1})&quot;, GetData(&quot;ReportTables.RatingModel.OutputParameter&quot;),GetData(&quot;ReportTables.RatingModel.OutputUnitSymbol&quot;))" PropertyName="Value" /></DataBindings><RawValue type="System.String" id="150" value="Base" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="301" Size="9.75" FamilyName="Calibri" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="302" Location="1668.75;18.75" Size="1462.5;56.25" Name="textBox105" Text="Base" ExportAsPictureInXaml="false" TextAlign="MiddleCenter"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="303" Color="51, 51, 51" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="304"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="305" Expression="string.Format(&quot;Effective Curve Id: {0} at EffectiveTime: {1}&quot;, dataBand4[&quot;EffectiveCurveId&quot;], dataBand4[&quot;EffectiveTime&quot;])" PropertyName="Value" /></DataBindings><RawValue type="System.String" id="150" value="Base" /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="306" Size="9.75" FamilyName="Calibri" /></Item></Controls><Aggregates type="PerpetuumSoft.Reporting.DOM.AggregateCollection" id="307" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Detail" id="308" Location="0;243.75" Size="3300;56.25" Name="detail5"><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="309" /><Controls type="PerpetuumSoft.Reporting.DOM.ReportControlCollection" id="310"><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="311" Location="150;-0" Size="525;56.25" Margins="0; 0; 93.75; 9.375" Name="textBox91" ExportAsPictureInXaml="false" TextAlign="MiddleCenter"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="312" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="55" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="313"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="314" Expression="dataBand5[&quot;Input&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="315" Size="9.75" FamilyName="Calibri" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="316" Location="675;0" Size="243.75;56.25" Margins="0; 0; 0; 9.375" Name="textBox92" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="317" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="55" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="318"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="319" Expression="dataBand5[&quot;Col1&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="320" Size="9.75" FamilyName="Calibri" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="321" Location="918.75;0" Size="243.75;56.25" Margins="0; 0; 0; 9.375" Name="textBox93" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="322" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="55" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="323"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="324" Expression="dataBand5[&quot;Col2&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="325" Size="9.75" FamilyName="Calibri" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="326" Location="1162.5;0" Size="243.75;56.25" Margins="0; 0; 0; 9.375" Name="textBox94" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="327" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="55" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="328"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="329" Expression="dataBand5[&quot;Col3&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="330" Size="9.75" FamilyName="Calibri" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="331" Location="1406.25;0" Size="243.75;56.25" Margins="0; 0; 0; 9.375" Name="textBox95" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="332" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="55" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="333"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="334" Expression="dataBand5[&quot;Col4&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="335" Size="9.75" FamilyName="Calibri" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="336" Location="1650;0" Size="243.75;56.25" Margins="0; 0; 0; 9.375" Name="textBox96" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="337" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="55" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="338"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="339" Expression="dataBand5[&quot;Col5&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="340" Size="9.75" FamilyName="Calibri" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="341" Location="1893.75;0" Size="243.75;56.25" Margins="0; 0; 0; 9.375" Name="textBox97" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="342" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="55" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="343"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="344" Expression="dataBand5[&quot;Col6&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="345" Size="9.75" FamilyName="Calibri" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="346" Location="2137.5;0" Size="243.75;56.25" Margins="0; 0; 0; 9.375" Name="textBox98" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="347" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="55" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="348"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="349" Expression="dataBand5[&quot;Col7&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="350" Size="9.75" FamilyName="Calibri" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="351" Location="2381.25;0" Size="243.75;56.25" Margins="0; 0; 0; 9.375" Name="textBox99" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="352" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="55" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="353"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="354" Expression="dataBand5[&quot;Col8&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="355" Size="9.75" FamilyName="Calibri" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="356" Location="2625;0" Size="243.75;56.25" Margins="0; 0; 0; 9.375" Name="textBox100" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="357" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="55" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="358"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="359" Expression="dataBand5[&quot;Col9&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="360" Size="9.75" FamilyName="Calibri" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="361" Location="2868.75;0" Size="243.75;56.25" Margins="0; 0; 0; 9.375" Name="textBox101" ExportAsPictureInXaml="false" TextAlign="MiddleRight"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="362" Color="51, 51, 51" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="55" All="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="363"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="364" Expression="dataBand5[&quot;Col10&quot;]" PropertyName="Value" /></DataBindings><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="365" Size="9.75" FamilyName="Calibri" /></Item></Controls><Aggregates type="PerpetuumSoft.Reporting.DOM.AggregateCollection" id="366" /></Item></Controls><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="367" /><Totals type="PerpetuumSoft.Reporting.DOM.DataBandTotalCollection" id="368" /><Aggregates type="PerpetuumSoft.Reporting.DOM.AggregateCollection" id="369" /></Item></Controls><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="370" /><Totals type="PerpetuumSoft.Reporting.DOM.DataBandTotalCollection" id="371" /><Aggregates type="PerpetuumSoft.Reporting.DOM.AggregateCollection" id="372" /></Item><Item type="PerpetuumSoft.Reporting.DOM.PageFooter" id="373" StyleName="PageFooter" Location="0;1762.5" Name="pageFooter" Size="3300;150"><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="374" /><Controls type="PerpetuumSoft.Reporting.DOM.ReportControlCollection" id="375"><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="376" Location="0;0" Size="3300;29.528125762939453" Name="textBoxPageFooterLine" ExportAsPictureInXaml="false"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="377" Color="110, 112, 110" /><Border type="PerpetuumSoft.Framework.Drawing.Border" id="27" TopLine="1 Solid Silver" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="378" /></Item><Item type="PerpetuumSoft.Reporting.DOM.TextBox" id="379" Location="168.75;0" Size="2981.25;131.25" CanGrow="true" Name="textBoxPageFooter1" ExportAsPictureInXaml="false" TextAlign="BottomLeft"><TextFill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="380" Color="110, 112, 110" /><DataBindings type="PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection" id="381"><Item type="PerpetuumSoft.Reporting.DOM.ReportDataBinding" id="382" Expression="GetData(&quot;ReportTables.ReportData.FooterDisclaimer&quot;)" PropertyName="Value" /></DataBindings><RawValue type="System.String" id="383" value="DISCLAIMER - AQUARIUS is the leading software suite to acquire, process, model, and publish water data. Environmental monitoring agencies worldwide trust AQUARIUS to produce accurate water information in real-time. A modern design delivers the latest water science in an intuitive experience." /><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="384" Size="7" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item></Controls></Item></Controls></Item></Pages><DataSources type="PerpetuumSoft.Reporting.Data.DocumentDataSourceCollection" id="385" /><StyleSheet type="PerpetuumSoft.Reporting.DOM.StyleSheet" id="386"><Styles type="PerpetuumSoft.Reporting.DOM.StyleCollection" id="387"><Item type="PerpetuumSoft.Reporting.DOM.Style" id="388" Name="HeaderFooter"><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="389" Size="9.75" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Style" id="390" Name="HeaderFooter1"><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="391" Size="9.75" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Style" id="392" Name="HeaderFooter2"><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="393" Size="9.75" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Style" id="394" Name="HeaderFooter3"><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="395" Size="9.75" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Style" id="396" Name="Even"><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="397" Size="9" FamilyName="Calibri" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Style" id="398" Name="Odd"><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="399" Size="9" FamilyName="Calibri" /><Fill type="PerpetuumSoft.Framework.Drawing.SolidFill" id="400" Color="Silver" /></Item><Item type="PerpetuumSoft.Reporting.DOM.Style" id="401" Name="Normal"><Font type="PerpetuumSoft.Framework.Drawing.FontDescriptor" id="402" Size="9.75" Strikeout="Off" Italic="Off" Bold="Off" FamilyName="Calibri" Underline="Off" /></Item></Styles></StyleSheet></root>
